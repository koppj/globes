(************** Content-type: application/mathematica **************

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[    396648,       9719]*)
(*NotebookOutlinePosition[    397714,       9752]*)
(*  CellTagsIndexPosition[    397670,       9748]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell["Documentation Mathematica-Interface GLOBES 1.X", "Title"],

Cell["\<\
(C) Martin Freund, Patrick Huber, documented by Walter Winter\
\>", \
"Subsubtitle"],

Cell["\<\
This documentation is intended to be an application summary of the \
key functions of GLOBES. In the first part, dealing with a single experiment \
is described. The second part focused on simultaneous analyzes of more than \
one experiment.\
\>", "Text"],

Cell[CellGroupData[{

Cell["Analyzing a single experiment", "Subtitle"],

Cell[CellGroupData[{

Cell["Software initialization", "Section"],

Cell["\<\
In order to use the GLOBES software, a working pair (one compatible \
version) of the \"vlbl_ml\" and \"GlobesML.m\" files, including the data \
files with beam spectra, etc., nees to be found in the working directory. \
This directory has to be told Mathematica:\
\>", "Text"],

Cell[BoxData[
    \(SetDirectory["\</home/t30/lin/wwinter/Software/Beams\>"]; 
    AppendTo[$Path, "\</home/t30/lin/wwinter/Software\>"];\)], "Input"],

Cell[TextData[{
  "Then, the Mathematica package initializing the software/the ",
  StyleBox["MathLink",
    FontSlant->"Italic"],
  " has to be started, for instance, here the \[Beta]-version \"020424\":"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(<< 020424GlobesML.m\)], "Input"],

Cell[BoxData[
    \("GLoBES 1.0.beta"\)], "Print"],

Cell[BoxData[
    \("(c) M. Freund & P. Huber 2002"\)], "Print"],

Cell[BoxData[
    \("now starting user interface ..."\)], "Print"],

Cell[BoxData[
    \("installing C-programe ..."\)], "Print"],

Cell[BoxData[
    \("ready"\)], "Print"]
}, Open  ]],

Cell["\<\
The following procedure initializes an experiment, where a standard \
parameter set is used in the beginning and can be altered later: \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(InitExperiment[NuFact]\)], "Input"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {GridBox[{
                {"\<\"NuFact\"\>"},
                {
                  InterpretationBox[GridBox[{
                        {"\<\"Baseline 3000. km\"\>"},
                        {"\<\"Density 3.5 g/\\!\\(cm\\^\\(-3\\)\\)\"\>"}
                        },
                      RowSpacings->1,
                      ColumnSpacings->3,
                      RowAlignments->Baseline,
                      ColumnAlignments->{Left}],
                    
                    TableForm[ {"Baseline 3000. km", 
                      "Density 3.5 g/\!\(cm\^\(-3\)\)"}]]}
                },
              RowSpacings->0.25,
              ColumnSpacings->1,
              RowAlignments->Baseline,
              ColumnAlignments->{Left}], GridBox[{
                {
                  InterpretationBox[GridBox[{
                        {"\<\"Target mass 10. kt\"\>"},
                        {"\<\"Useful Muons 5.e20\"\>"},
                        {"\<\"Nkt 5.e21\"\>"}
                        },
                      RowSpacings->1,
                      ColumnSpacings->3,
                      RowAlignments->Baseline,
                      ColumnAlignments->{Left}],
                    
                    TableForm[ {"Target mass 10. kt", "Useful Muons 5.e20", 
                      "Nkt 5.e21"}]]},
                {
                  InterpretationBox[GridBox[{
                        {"\<\"Energy treshold 4. GeV\"\>"},
                        {"\<\"Beam energy 50. GeV\"\>"},
                        {"\<\"Bins 20\"\>"},
                        {"\<\"Binwidth 2.3 GeV\"\>"},
                        {"\<\"Energy resolution 15.% e  15.% \[Mu]  15.% \
\[Tau]\"\>"}
                        },
                      RowSpacings->1,
                      ColumnSpacings->3,
                      RowAlignments->Baseline,
                      ColumnAlignments->{Left}],
                    
                    TableForm[ {"Energy treshold 4. GeV", 
                      "Beam energy 50. GeV", "Bins 20", "Binwidth 2.3 GeV", 
                      "Energy resolution 15.% e  15.% \[Mu]  15.% \[Tau]"}]]}
                },
              RowSpacings->0.25,
              ColumnSpacings->1,
              RowAlignments->Baseline,
              ColumnAlignments->{Left}]},
          {
            InterpretationBox[GridBox[{
                  {"0", 
                    TagBox[GridBox[{
                          {"\<\"Signal\"\>", "\<\"1\[PlusMinus]0.001\"\>", \
"\<\"0\[PlusMinus]0.0001\"\>", "\<\"0.45\[CircleTimes]-\[Nu]e\[Mu]CC\"\>"},
                          {"\<\"Background\"\>", \
"\<\"0.00001\[PlusMinus]2.e-6\"\>", "\<\"0.\[PlusMinus]0.0001\"\>", "\<\"1.\
\[CircleTimes]-\\!\\(\\(\[Nu]\\&-\\)\\)\[Mu]\[Mu]CC\"\>"}
                          },
                        RowSpacings->1,
                        ColumnSpacings->3,
                        RowAlignments->Baseline,
                        ColumnAlignments->{Left}],
                      Function[ BoxForm`e$, 
                        TableForm[ 
                        BoxForm`e$, TableHeadings -> {{"Signal", 
                          "Background"}}]]]},
                  {"1", 
                    TagBox[GridBox[{
                          {"\<\"Signal\"\>", "\<\"1\[PlusMinus]0.001\"\>", \
"\<\"0\[PlusMinus]0.0001\"\>", \
"\<\"0.35\[CircleTimes]+\\!\\(\\(\[Nu]\\&-\\)\\)e\[Mu]CC\"\>"},
                          {"\<\"Background\"\>", \
"\<\"0.00001\[PlusMinus]2.e-6\"\>", "\<\"0.\[PlusMinus]0.0001\"\>", "\<\"1.\
\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC\"\>"}
                          },
                        RowSpacings->1,
                        ColumnSpacings->3,
                        RowAlignments->Baseline,
                        ColumnAlignments->{Left}],
                      Function[ BoxForm`e$, 
                        TableForm[ 
                        BoxForm`e$, TableHeadings -> {{"Signal", 
                          "Background"}}]]]},
                  {"2", 
                    TagBox[GridBox[{
                          {"\<\"Signal\"\>", "\<\"1\[PlusMinus]0.001\"\>", \
"\<\"0\[PlusMinus]0.0001\"\>", \
"\<\"0.45\[CircleTimes]-\\!\\(\\(\[Nu]\\&-\\)\\)\[Mu]\[Mu]CC\"\>"},
                          {"\<\"Background\"\>", \
"\<\"1.\[PlusMinus]0.001\"\>", "\<\"0.\[PlusMinus]0.0001\"\>", "\<\"0.00001\
\[CircleTimes]-\[Nu]e\[Mu]CC\"\>"}
                          },
                        RowSpacings->1,
                        ColumnSpacings->3,
                        RowAlignments->Baseline,
                        ColumnAlignments->{Left}],
                      Function[ BoxForm`e$, 
                        TableForm[ 
                        BoxForm`e$, TableHeadings -> {{"Signal", 
                          "Background"}}]]]},
                  {"3", 
                    TagBox[GridBox[{
                          {"\<\"Signal\"\>", "\<\"1\[PlusMinus]0.001\"\>", \
"\<\"0\[PlusMinus]0.0001\"\>", \
"\<\"0.35\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC\"\>"},
                          {"\<\"Background\"\>", \
"\<\"1.\[PlusMinus]0.001\"\>", "\<\"0.\[PlusMinus]0.0001\"\>", "\<\"0.00001\
\[CircleTimes]+\\!\\(\\(\[Nu]\\&-\\)\\)e\[Mu]CC\"\>"}
                          },
                        RowSpacings->1,
                        ColumnSpacings->3,
                        RowAlignments->Baseline,
                        ColumnAlignments->{Left}],
                      Function[ BoxForm`e$, 
                        TableForm[ 
                        BoxForm`e$, TableHeadings -> {{"Signal", 
                          "Background"}}]]]}
                  },
                RowSpacings->1,
                ColumnSpacings->3,
                RowAlignments->Baseline,
                ColumnAlignments->{Left}],
              TableForm[ {
                
                TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
                  "0.45\[CircleTimes]-\[Nu]e\[Mu]CC"}, {
                  "0.00001\[PlusMinus]2.e-6", "0.\[PlusMinus]0.0001", 
                  "1.\[CircleTimes]-\!\(\(\[Nu]\&-\)\)\[Mu]\[Mu]CC"}}, 
                  TableHeadings -> {{"Signal", "Background"}}], 
                
                TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
                  "0.35\[CircleTimes]+\!\(\(\[Nu]\&-\)\)e\[Mu]CC"}, {
                  "0.00001\[PlusMinus]2.e-6", "0.\[PlusMinus]0.0001", 
                  "1.\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC"}}, TableHeadings -> {{
                  "Signal", "Background"}}], 
                
                TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
                  "0.45\[CircleTimes]-\!\(\(\[Nu]\&-\)\)\[Mu]\[Mu]CC"}, {
                  "1.\[PlusMinus]0.001", "0.\[PlusMinus]0.0001", 
                  "0.00001\[CircleTimes]-\[Nu]e\[Mu]CC"}}, TableHeadings -> {{
                  "Signal", "Background"}}], 
                
                TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
                  "0.35\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC"}, {
                  "1.\[PlusMinus]0.001", "0.\[PlusMinus]0.0001", 
                  "0.00001\[CircleTimes]+\!\(\(\[Nu]\&-\)\)e\[Mu]CC"}}, 
                  TableHeadings -> {{"Signal", "Background"}}]}, 
                TableHeadings -> {{0, 1, 2, 3}}]], "\<\"\"\>"}
          },
        RowSpacings->1,
        ColumnSpacings->3,
        RowAlignments->Baseline,
        ColumnAlignments->{Left}],
      TableForm[ {{{"NuFact", 
        TableForm[ {"Baseline 3000. km", 
          "Density 3.5 g/\!\(cm\^\(-3\)\)"}]}, {
        TableForm[ {"Target mass 10. kt", "Useful Muons 5.e20", "Nkt 5.e21"}],
         
        TableForm[ {"Energy treshold 4. GeV", "Beam energy 50. GeV", 
          "Bins 20", "Binwidth 2.3 GeV", 
          "Energy resolution 15.% e  15.% \[Mu]  15.% \[Tau]"}]}}, 
        TableForm[ {
          
          TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
            "0.45\[CircleTimes]-\[Nu]e\[Mu]CC"}, {"0.00001\[PlusMinus]2.e-6", 
            "0.\[PlusMinus]0.0001", 
            "1.\[CircleTimes]-\!\(\(\[Nu]\&-\)\)\[Mu]\[Mu]CC"}}, 
            TableHeadings -> {{"Signal", "Background"}}], 
          
          TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
            "0.35\[CircleTimes]+\!\(\(\[Nu]\&-\)\)e\[Mu]CC"}, {
            "0.00001\[PlusMinus]2.e-6", "0.\[PlusMinus]0.0001", 
            "1.\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC"}}, TableHeadings -> {{
            "Signal", "Background"}}], 
          
          TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
            "0.45\[CircleTimes]-\!\(\(\[Nu]\&-\)\)\[Mu]\[Mu]CC"}, {
            "1.\[PlusMinus]0.001", "0.\[PlusMinus]0.0001", 
            "0.00001\[CircleTimes]-\[Nu]e\[Mu]CC"}}, TableHeadings -> {{
            "Signal", "Background"}}], 
          
          TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
            "0.35\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC"}, {"1.\[PlusMinus]0.001", 
            "0.\[PlusMinus]0.0001", 
            "0.00001\[CircleTimes]+\!\(\(\[Nu]\&-\)\)e\[Mu]CC"}}, 
            TableHeadings -> {{"Signal", "Background"}}]}, TableHeadings -> {{
          0, 1, 2, 3}}]}]]], "Output"]
}, Open  ]],

Cell[TextData[{
  StyleBox["Possible parameter values for InitExperiment: ",
    FontVariations->{"Underline"->True}],
  "\n",
  StyleBox["NuFact",
    FontFamily->"Courier"],
  "  - Initial stage neutrino factory \n",
  StyleBox["NuFact2",
    FontFamily->"Courier"],
  "  - Advanced stage neutrino factory\n",
  StyleBox["JHFSK",
    FontFamily->"Courier"],
  " - JHF-SuperKamiokande experiment\n",
  StyleBox["JHFHK",
    FontFamily->"Courier"],
  " - JHF-HyperKamiokande experiment, spectral information on QE events used\n\
",
  StyleBox["JHFHKAll",
    FontFamily->"Courier"],
  " - JHF-HyperKamiokande experiment, total numbers used for QE events"
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell[TextData[{
  "After the initialization, an information summary is given such as above. \
In the upper part, it describes the standard parameter set for this \
experiment. In the lower part, the so-called \"Rules\" are listed, each \
containing a signal and a background part, which may consist of one or more \
channels each (the NuFact scenario has only one channel per rule). The ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "'s of the signal and background parts of all rules and channels are added \
at the end. The first column gives the number of the rule, the second refers \
to Signal or Background rule, the third to the normalization and \
normalization error, the fourth to the tilt and tilt error, the fifth and \
higher to the efficiency, the polarity of the source (particle or \
antiparticle decay), the measured neutrino type (neutrino or antineutrino), \
the oscillation channel, and the event type each (c.f., hep-ph/",
  "0204352",
  ", appendices).  A summary of the rules can also be obtained by:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ShowChannels[]\)], "Input"],

Cell[BoxData[
    TagBox[GridBox[{
          {"\<\"\"\>", "\<\"Polarity\"\>", "\<\"CP-sign\"\>", "\<\"Initial \
Flavour\"\>", "\<\"Final Flavour\"\>", "\<\"NC/CC\"\>"},
          {
            "0", "\<\"-\"\>", "\<\"\[Nu]\"\>", "\<\"e\"\>", "\<\"\[Mu]\"\>", \
"\<\"CC\"\>"},
          {
            "1", "\<\"+\"\>", "\<\"\\!\\(\\(\[Nu]\\&-\\)\\)\"\>", \
"\<\"e\"\>", "\<\"\[Mu]\"\>", "\<\"CC\"\>"},
          {
            "2", "\<\"-\"\>", "\<\"\\!\\(\\(\[Nu]\\&-\\)\\)\"\>", \
"\<\"\[Mu]\"\>", "\<\"\[Mu]\"\>", "\<\"CC\"\>"},
          {
            "3", "\<\"+\"\>", "\<\"\[Nu]\"\>", "\<\"\[Mu]\"\>", \
"\<\"\[Mu]\"\>", "\<\"CC\"\>"}
          },
        RowSpacings->1,
        ColumnSpacings->3,
        RowAlignments->Baseline,
        ColumnAlignments->{Left}],
      Function[ BoxForm`e$, 
        TableForm[ 
        BoxForm`e$, TableHeadings -> {{0, 1, 2, 3}, {"Polarity", "CP-sign", 
          "Initial Flavour", "Final Flavour", "NC/CC"}}]]]], "Output"]
}, Open  ]],

Cell[TextData[{
  "BUG note: Some versions of GlobesML.m, such es especially 0206XX and \
0207XX versions, require the variable ",
  StyleBox["smeartype",
    FontFamily->"Courier"],
  " to be set ",
  StyleBox["before",
    FontSlant->"Italic"],
  " ",
  StyleBox["InitExperiment",
    FontFamily->"Courier"],
  ". This variable controls the handling of the smearing metrices and has to \
be set to 0 for a neutrino factory and 1 for a Superbeam."
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell["To finalize the initialization procedure, we call", "Text"],

Cell[BoxData[
    \(InitMemory[]\)], "Input"],

Cell[TextData[{
  "This initialization procedure has to be repeated if the ",
  StyleBox["MathLink",
    FontSlant->"Italic"],
  " to the C program should be dead, which can happen in several cases. For \
example, aborting a calculation procedure does not yet automatically kill the \
linked C program, which has to be terminated manually (kill the process). \
Thereafter, the ",
  StyleBox["MathLink",
    FontSlant->"Italic"],
  " can be also dead and may have to be re-initialized. \n\n",
  StyleBox["LinkPatterns[vlbl]",
    FontFamily->"Courier"],
  " gives a list of all commands of GLOBES, including those not described in \
this documentation:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Short[Sort[LinkPatterns[vlbl]], 5]\)], "Input"],

Cell[BoxData[
    TagBox[\({CheckBaseline[], CheckBeamEnergy[], 
        CheckBeamPolarisation[], \[LeftSkeleton]88\[RightSkeleton], 
        XNC[enl_Real, l_Integer, anti_Integer], 
        XQE[enl_Real, l_Integer, anti_Integer]}\),
      (Short[ #, 5]&)]], "Output"]
}, Open  ]],

Cell["\<\
Note that, in general, the \"Check\" commands return parameter \
values, and the \"Set\" commands set them. Also note that the commands \
starting with \"C\" usually have their equivalents without \"C\", which \
should be actually used. \
\>", "Text"],

Cell[TextData[{
  StyleBox["Most important units used in GLOBES:",
    FontVariations->{"Underline"->True}],
  "\nAngles: in ",
  StyleBox["radians",
    FontWeight->"Bold"],
  ". Exceptions: ",
  StyleBox["ChiDelta",
    FontFamily->"Courier"],
  ", ",
  StyleBox["ChiTheta",
    FontFamily->"Courier"],
  ", ",
  StyleBox["ChiAll",
    FontFamily->"Courier"],
  " for ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  " only",
  " in ",
  StyleBox["Log[10,",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\(sin\^2\)(2  \[Theta]\_13)\)],
    FontWeight->"Bold"],
  StyleBox["]!",
    FontWeight->"Bold"],
  "\nMass squared differences: ",
  StyleBox["[",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`eV\^2\)],
    FontWeight->"Bold"],
  StyleBox["]",
    FontWeight->"Bold"],
  "\nDensities: ",
  StyleBox["[g/",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`cm\^3\)],
    FontWeight->"Bold"],
  StyleBox["]",
    FontWeight->"Bold"],
  "\nBaseline lengths: ",
  StyleBox["[km]",
    FontWeight->"Bold"],
  "\nEnergies: ",
  StyleBox["[GeV]",
    FontWeight->"Bold"],
  "\nTime intervals: ",
  StyleBox["[yr]",
    FontWeight->"Bold"]
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Setting the oscillation parameters", "Section"],

Cell[TextData[{
  "There are six parameters to be measured by the experiment:",
  StyleBox[" ",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\(sin(
          2  \[Theta]\_12)\)\[Times]\[CapitalDelta]m\_21\%2\)],
    FontWeight->"Bold",
    FontVariations->{"CompatibilityType"->0}],
  StyleBox[",  ",
    FontWeight->"Bold",
    FontVariations->{"CompatibilityType"->0}],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)],
    FontWeight->"Bold",
    FontVariations->{"CompatibilityType"->0}],
  StyleBox[", ",
    FontWeight->"Bold",
    FontVariations->{"CompatibilityType"->0}],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)],
    FontWeight->"Bold",
    FontVariations->{"CompatibilityType"->0}],
  StyleBox[", ",
    FontWeight->"Bold",
    FontVariations->{"CompatibilityType"->0}],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_32\%2\),
        FontFamily->"Times"]],
    FontWeight->"Bold",
    FontVariations->{"CompatibilityType"->0}],
  StyleBox[", \[Delta], and \[Rho]",
    FontWeight->"Bold",
    FontVariations->{"CompatibilityType"->0}],
  ". In the numerical evaluations, the density is also treated as a variable \
to be measured (within a certain range) as all the other oscillation \
parameters, which turns out to be a rather simple method to treat matter \
density uncertainties. Since long baseline experiments are only sensitive to \
the product of the solar parameters, any variation of ",
  Cell[BoxData[
      \(TraditionalForm\`\[CapitalDelta]m\_21\%2\)]],
  "will actually imply a variation of the product ",
  Cell[BoxData[
      \(TraditionalForm\`\(sin(
          2  \[Theta]\_12)\)\[Times]\[CapitalDelta]m\_21\%2\)]],
  ", where ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_12\)]],
  "is fixed to \[Pi]/4 internally, i.e., ",
  Cell[BoxData[
      \(TraditionalForm\`sin(2  \[Theta]\_12) = 1\)]],
  ". Thus, for ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_12 \[NotEqual] \ \[Pi]/4\)]],
  "the results or the settings have to be rescaled in ",
  Cell[BoxData[
      \(TraditionalForm\`\[CapitalDelta]m\_21\%2\)]],
  "! For example, in order to set the LMA solution with ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_12 = 32.9\^o\)]],
  "and ",
  Cell[BoxData[
      \(TraditionalForm\`\[CapitalDelta]m\_21\%2 = 4.5\ 10\^\(-5\)\)]],
  ", we actually have to use a different ",
  Cell[BoxData[
      \(TraditionalForm\`\[CapitalDelta]m\_21\%2\)]],
  " in the initialization routines:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(RescaledSMD\  = \ 
      Sin[2\ 32.9\ \[Pi]/180]\ 4.5\ 10^\((\(-5\))\)\)], "Input"],

Cell[BoxData[
    \(0.000041045405227752284`\)], "Output"]
}, Open  ]],

Cell["Now we can set the oscillation parameters (best-fit values):", "Text"],

Cell[BoxData[
    \(SetVacuumParameters[N[9999], N[ArcSin[Sqrt[0.01]]/2], N[\[Pi]/4], 
      N[0]]\)], "Input"],

Cell[TextData[{
  "sets the mixing angles ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_12\)],
    FontWeight->"Bold"],
  StyleBox[",  ",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)],
    FontWeight->"Bold"],
  StyleBox[", and the CP phase \[Delta]",
    FontWeight->"Bold"],
  " (in this order) to the LMA best fit values, where the setting of ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_12\)]],
  " has no effect here and has, as explained above, indirectly to be done via \
the solar mass squared difference. Parameter values or parameters should be \
always wrapped by ",
  StyleBox["N[]",
    FontFamily->"Courier"],
  ", because the C-functions require real values. Here we used ",
  Cell[BoxData[
      \(TraditionalForm\`\(sin\^2\)(2  \[Theta]\_13)\)]],
  "=0.01 as parameter and calculated ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  "from it."
}], "Text"],

Cell[BoxData[
    \(SetMasses[N[RescaledSMD], N[3.0*10^\(-3\)]]\)], "Input"],

Cell[TextData[{
  "sets the mass squared differences ",
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_21\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[" and ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_32\%2\),
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[",",
    FontWeight->"Bold"],
  " where the solar mass squared difference was rescaled as described above.  \
\nIn addition, "
}], "Text"],

Cell[BoxData[
    \(SetDensity[DENSITY]\)], "Input"],

Cell[TextData[{
  "should be automatically used before each run of ChiTheta and ChiDelta, \
since they change the value of the density. ",
  StyleBox["DENSITY",
    FontFamily->"Courier"],
  " is a global variable, which holds the true value of the measured average \
matter density \[Rho]. \n\nAfter setting the oscillation parameters,the \
following command is used to set the reference rates for Chi... :"
}], "Text"],

Cell[BoxData[
    \(SetRates[]\)], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  "Calculating ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "with systematics: ",
  StyleBox["ChiNew",
    FontFamily->"Courier"]
}], "Section"],

Cell[TextData[{
  "The function ChiNew calculates ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  " including systematical errors determined by the rules in ",
  StyleBox["InitExperiment",
    FontFamily->"Courier"],
  ", but no correlations and degeneracies. The ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  " function is minimized over all systematical priors as described in the \
appendix of hep-ph/",
  "0204352",
  ". For example,"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(ChiNew[
      N[{N[ArcSin[Sqrt[0.01]]/2], \[Pi]/4, 0, RescaledSMD, 0.003, 
          DENSITY}]]\)\(\ \ \ \)\)\)], "Input"],

Cell[BoxData[
    \(7.992443579612786`*^-9\)], "Output"]
}, Open  ]],

Cell[TextData[{
  "gives essentially zero, because we evaluated it at the best-fit point. It \
is important to note that one uses numerical, real values as parameters in \
form of a list ",
  StyleBox["{",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)],
    FontWeight->"Bold"],
  StyleBox[", \[Delta],  ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_21\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_32\%2\),
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", \[Rho]}",
    FontWeight->"Bold"],
  " of this order and format.  \n\nSince this function is quite fast, it can \
be used for test purposes, such as to find the characteristics of contours. \
For example, the following routines draw the 1\[Sigma], 2\[Sigma], and 3\
\[Sigma] contours for a two-parameter fit of  ",
  Cell[BoxData[
      \(TraditionalForm\`\(sin\^2\)(2  \[Theta]\_13)\)]],
  " versus ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)]],
  ", scaled by the parameters ",
  StyleBox["x",
    FontFamily->"Courier"],
  " and ",
  StyleBox["y",
    FontFamily->"Courier"],
  ":"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \($TextStyle\  = \ {FontFamily\  \[Rule] \ "\<Times\>", 
        FontSize \[Rule] 10}\)], "Input"],

Cell[BoxData[
    \({FontFamily \[Rule] "Times", FontSize \[Rule] 10}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(ContourPlot[
      ChiNew[N[{N[ArcSin[Sqrt[0.01*x]]/2], \[Pi]/4*y, 0, RescaledSMD, 0.003, 
            DENSITY}]], {x, 0.5, 1.6}, {y, 0.8, 1.2}, \ 
      Contours \[Rule] {2.3, 6.18, 11.83}, \ ContourShading \[Rule] False, 
      ContourStyle \[Rule] {{GrayLevel[
              0]}, {AbsoluteDashing[{1, 3, 1, 3}]}, {AbsoluteDashing[{5, 3, 
                3, 3}]}}, \ PlotPoints \[Rule] 20]\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: 1 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% ContourGraphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-0.417832 0.874126 -1.90385 2.40385 [
[.10664 -0.0125 -8.25 -10.9375 ]
[.10664 -0.0125 8.25 0 ]
[.28147 -0.0125 -8.25 -10.9375 ]
[.28147 -0.0125 8.25 0 ]
[.45629 -0.0125 -4.5 -10.9375 ]
[.45629 -0.0125 4.5 0 ]
[.63112 -0.0125 -8.25 -10.9375 ]
[.63112 -0.0125 8.25 0 ]
[.80594 -0.0125 -8.25 -10.9375 ]
[.80594 -0.0125 8.25 0 ]
[.98077 -0.0125 -8.25 -10.9375 ]
[.98077 -0.0125 8.25 0 ]
[ 0 0 -0.125 0 ]
[-0.0125 .01923 -16.5 -5.46875 ]
[-0.0125 .01923 0 5.46875 ]
[-0.0125 .25962 -16.5 -5.46875 ]
[-0.0125 .25962 0 5.46875 ]
[-0.0125 .5 -9 -5.46875 ]
[-0.0125 .5 0 5.46875 ]
[-0.0125 .74038 -16.5 -5.46875 ]
[-0.0125 .74038 0 5.46875 ]
[-0.0125 .98077 -16.5 -5.46875 ]
[-0.0125 .98077 0 5.46875 ]
[ 0 0 -0.125 0 ]
[ 0 1 .125 0 ]
[ 1 0 .125 0 ]
[ 0 0 0 0 ]
[ 1 1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.10664 0 m
.10664 .00625 L
s
gsave
.10664 -0.0125 -69.25 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.6) show
1.000 setlinewidth
grestore
.28147 0 m
.28147 .00625 L
s
gsave
.28147 -0.0125 -69.25 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.8) show
1.000 setlinewidth
grestore
.45629 0 m
.45629 .00625 L
s
gsave
.45629 -0.0125 -65.5 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
1.000 setlinewidth
grestore
.63112 0 m
.63112 .00625 L
s
gsave
.63112 -0.0125 -69.25 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1.2) show
1.000 setlinewidth
grestore
.80594 0 m
.80594 .00625 L
s
gsave
.80594 -0.0125 -69.25 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1.4) show
1.000 setlinewidth
grestore
.98077 0 m
.98077 .00625 L
s
gsave
.98077 -0.0125 -69.25 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1.6) show
1.000 setlinewidth
grestore
.125 Mabswid
.15035 0 m
.15035 .00375 L
s
.19406 0 m
.19406 .00375 L
s
.23776 0 m
.23776 .00375 L
s
.32517 0 m
.32517 .00375 L
s
.36888 0 m
.36888 .00375 L
s
.41259 0 m
.41259 .00375 L
s
.5 0 m
.5 .00375 L
s
.54371 0 m
.54371 .00375 L
s
.58741 0 m
.58741 .00375 L
s
.67483 0 m
.67483 .00375 L
s
.71853 0 m
.71853 .00375 L
s
.76224 0 m
.76224 .00375 L
s
.84965 0 m
.84965 .00375 L
s
.89336 0 m
.89336 .00375 L
s
.93706 0 m
.93706 .00375 L
s
.06294 0 m
.06294 .00375 L
s
.01923 0 m
.01923 .00375 L
s
.25 Mabswid
0 0 m
1 0 L
s
0 .01923 m
.00625 .01923 L
s
gsave
-0.0125 .01923 -77.5 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.8) show
1.000 setlinewidth
grestore
0 .25962 m
.00625 .25962 L
s
gsave
-0.0125 .25962 -77.5 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.9) show
1.000 setlinewidth
grestore
0 .5 m
.00625 .5 L
s
gsave
-0.0125 .5 -70 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
1.000 setlinewidth
grestore
0 .74038 m
.00625 .74038 L
s
gsave
-0.0125 .74038 -77.5 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1.1) show
1.000 setlinewidth
grestore
0 .98077 m
.00625 .98077 L
s
gsave
-0.0125 .98077 -77.5 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1.2) show
1.000 setlinewidth
grestore
.125 Mabswid
0 .06731 m
.00375 .06731 L
s
0 .11538 m
.00375 .11538 L
s
0 .16346 m
.00375 .16346 L
s
0 .21154 m
.00375 .21154 L
s
0 .30769 m
.00375 .30769 L
s
0 .35577 m
.00375 .35577 L
s
0 .40385 m
.00375 .40385 L
s
0 .45192 m
.00375 .45192 L
s
0 .54808 m
.00375 .54808 L
s
0 .59615 m
.00375 .59615 L
s
0 .64423 m
.00375 .64423 L
s
0 .69231 m
.00375 .69231 L
s
0 .78846 m
.00375 .78846 L
s
0 .83654 m
.00375 .83654 L
s
0 .88462 m
.00375 .88462 L
s
0 .93269 m
.00375 .93269 L
s
.25 Mabswid
0 0 m
0 1 L
s
.10664 .99375 m
.10664 1 L
s
.28147 .99375 m
.28147 1 L
s
.45629 .99375 m
.45629 1 L
s
.63112 .99375 m
.63112 1 L
s
.80594 .99375 m
.80594 1 L
s
.98077 .99375 m
.98077 1 L
s
.125 Mabswid
.15035 .99625 m
.15035 1 L
s
.19406 .99625 m
.19406 1 L
s
.23776 .99625 m
.23776 1 L
s
.32517 .99625 m
.32517 1 L
s
.36888 .99625 m
.36888 1 L
s
.41259 .99625 m
.41259 1 L
s
.5 .99625 m
.5 1 L
s
.54371 .99625 m
.54371 1 L
s
.58741 .99625 m
.58741 1 L
s
.67483 .99625 m
.67483 1 L
s
.71853 .99625 m
.71853 1 L
s
.76224 .99625 m
.76224 1 L
s
.84965 .99625 m
.84965 1 L
s
.89336 .99625 m
.89336 1 L
s
.93706 .99625 m
.93706 1 L
s
.06294 .99625 m
.06294 1 L
s
.01923 .99625 m
.01923 1 L
s
.25 Mabswid
0 1 m
1 1 L
s
.99375 .01923 m
1 .01923 L
s
.99375 .25962 m
1 .25962 L
s
.99375 .5 m
1 .5 L
s
.99375 .74038 m
1 .74038 L
s
.99375 .98077 m
1 .98077 L
s
.125 Mabswid
.99625 .06731 m
1 .06731 L
s
.99625 .11538 m
1 .11538 L
s
.99625 .16346 m
1 .16346 L
s
.99625 .21154 m
1 .21154 L
s
.99625 .30769 m
1 .30769 L
s
.99625 .35577 m
1 .35577 L
s
.99625 .40385 m
1 .40385 L
s
.99625 .45192 m
1 .45192 L
s
.99625 .54808 m
1 .54808 L
s
.99625 .59615 m
1 .59615 L
s
.99625 .64423 m
1 .64423 L
s
.99625 .69231 m
1 .69231 L
s
.99625 .78846 m
1 .78846 L
s
.99625 .83654 m
1 .83654 L
s
.99625 .88462 m
1 .88462 L
s
.99625 .93269 m
1 .93269 L
s
.25 Mabswid
1 0 m
1 1 L
s
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
.5 Mabswid
[ 5 3 3 3 ] 0 Mabsdash
.4747 .2121 m
.5253 .2027 L
.57591 .19677 L
.62652 .19392 L
.67713 .19405 L
.72773 .19761 L
.77834 .20616 L
.82346 .22166 L
.82895 .22402 L
.87955 .26511 L
.88268 .27227 L
.88065 .32287 L
.87955 .326 L
.85489 .37348 L
.82895 .41309 L
.81967 .42409 L
.78253 .4747 L
.77834 .48053 L
.747 .5253 L
.72773 .55393 L
.71323 .57591 L
.67871 .62652 L
.67713 .62871 L
.63869 .67713 L
.62652 .69037 L
.58478 .72773 L
.57591 .7346 L
.5253 .76651 L
.49951 .77834 L
.4747 .78845 L
.42409 .80415 L
.37348 .81324 L
.32287 .81622 L
.27227 .81263 L
.22166 .79937 L
.18471 .77834 L
.17105 .76631 L
.14426 .72773 L
.13455 .67713 L
.13929 .62652 L
.15156 .57591 L
.16732 .5253 L
.17105 .51393 L
.18432 .4747 L
.20319 .42409 L
.22166 .38345 L
.22681 .37348 L
.26149 .32287 L
.27227 .31083 L
.31997 .27227 L
Mistroke
.32287 .27034 L
.37348 .24302 L
.42409 .22517 L
.43696 .22166 L
.4747 .2121 L
Mfstroke
[ 1 3 1 3 ] 0 Mabsdash
.4747 .26062 m
.5253 .24825 L
.57591 .24146 L
.62652 .23945 L
.67713 .24274 L
.72773 .26259 L
.74557 .27227 L
.77254 .32287 L
.75722 .37348 L
.72773 .42286 L
.72694 .42409 L
.69321 .4747 L
.67713 .49918 L
.6605 .5253 L
.62899 .57591 L
.62652 .57982 L
.59598 .62652 L
.57591 .65276 L
.55399 .67713 L
.5253 .70341 L
.48809 .72773 L
.4747 .73506 L
.42409 .75652 L
.37348 .76741 L
.32287 .7693 L
.27227 .76049 L
.22883 .72773 L
.22166 .71631 L
.20766 .67713 L
.21005 .62652 L
.22166 .58121 L
.22327 .57591 L
.24063 .5253 L
.26026 .4747 L
.27227 .44603 L
.28183 .42409 L
.31002 .37348 L
.32287 .3557 L
.35446 .32287 L
.37348 .30741 L
.42409 .27868 L
.44096 .27227 L
.4747 .26062 L
s
[ ] 0 setdash
.4747 .32103 m
.5253 .30229 L
.57591 .30118 L
.62652 .31055 L
.64933 .32287 L
.65799 .37348 L
.63469 .42409 L
.62652 .44067 L
.60527 .4747 L
.57591 .52245 L
.57448 .5253 L
.54609 .57591 L
.5253 .60771 L
.51358 .62652 L
.4747 .66717 L
.45859 .67713 L
.42409 .69883 L
.37348 .7085 L
.32287 .70116 L
.29496 .67713 L
.28329 .62652 L
.29692 .57591 L
.31797 .5253 L
.32287 .51398 L
.33849 .4747 L
.36461 .42409 L
.37348 .40952 L
.39918 .37348 L
.42409 .3493 L
.47041 .32287 L
.4747 .32103 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 288},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40006`0001/2000`400?l00000o`00003oo`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona
0?ooo`00o`3ooona0?ooo`00?`3oool4000000@0oooo00<000000?ooo`3oool01000000f0?ooo`@0
0000103oool010000000oooo0?ooo`3oool3000003`0oooo1@00000k0?ooo`D000000`3oool00`00
0000oooo00000005000003D0oooo1@0000030?ooo`030000003oool0oooo00<0oooo00<000000?oo
o`3oool0=@3oool5000000<0oooo00<000000?ooo`3oool0100000070?ooo`00?P3oool200000080
oooo0P0000030?ooo`040000003oool0000000000080oooo0P00000d0?ooo`8000000P3oool20000
00<0oooo00<000000?ooo`3oool00P0000000`3oool000000000000m0?ooo`030000003oool0oooo
03d0oooo00<000000?ooo`3oool00`3oool010000000oooo0000000000030?ooo`030000003oool0
oooo03D0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`030?ooo`030000003oool0
oooo03L0oooo00<000000?ooo`3oool00`3oool010000000oooo0000000000020?ooo`8000001P3o
ool003h0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003oool0
oooo0080oooo00<000000?ooo`3oool0<P3oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo00@0oooo00D000000?ooo`3oool0oooo0000000m0?ooo`030000003oool0oooo03d0oooo00<0
00000?ooo`3oool01P3oool00`000000oooo0?ooo`0i0?ooo`030000003oool0oooo00D0oooo1P00
000h0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?oo
o`040?ooo`00?P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<00000
0?ooo`3oool00P3oool00`000000oooo0?ooo`0b0?ooo`030000003oool0oooo0080oooo00<00000
0?ooo`3oool0103oool01@000000oooo0?ooo`3oool0000003d0oooo00<000000?ooo`3oool0?@3o
ool00`000000oooo0?ooo`070?ooo`030000003oool0oooo03P0oooo00<000000?ooo`3oool01@3o
ool01@000000oooo0?ooo`3oool0000003T0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`020?ooo`030000003oool0oooo00@0oooo000n0?ooo`030000003oool0oooo0080oooo00<0
00000?ooo`3oool00`3oool200000080oooo0P00000d0?ooo`030000003oool0oooo0080oooo00<0
00000?ooo`3oool0103oool00`000000oooo0?ooo`02000003d0oooo00<000000?ooo`3oool0?@3o
ool00`000000oooo0?ooo`080?ooo`030000003oool0oooo03L0oooo00<000000?ooo`3oool01P3o
ool010000000oooo0?ooo`00000i0?ooo`030000003oool0oooo00D0oooo0P0000020?ooo`800000
1P3oool003h0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`040?ooo`@00000=@3o
ool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00D0oooo0`00000n0?ooo`030000003o
ool0oooo03d0oooo00<000000?ooo`3oool0203oool2000003P0oooo00<000000?ooo`3oool01P3o
ool2000000030?ooo`000000oooo03P0oooo00<000000?ooo`3oool01P3oool4000000L0oooo000n
0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0f
0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0103oool200000080oooo00<00000
0?ooo`3oool0>`3oool00`000000oooo0?ooo`0m0?ooo`030000003oool0oooo00T0oooo00<00000
0?ooo`3oool0=P3oool00`000000oooo0?ooo`070?ooo`030000003oool0000003T0oooo00<00000
0?ooo`3oool01P3oool00`000000oooo0?ooo`080?ooo`00?P3oool00`000000oooo0?ooo`020?oo
o`030000003oool0oooo00@0oooo00<000000?ooo`3oool0=P3oool00`000000oooo0?ooo`020?oo
o`030000003oool0oooo00@0oooo0P0000020?ooo`030000003oool0oooo03/0oooo00<000000?oo
o`3oool0?@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo03H0oooo00<000000?oo
o`3oool01`3oool00`000000oooo0000000i0?ooo`030000003oool0oooo00H0oooo00<000000?oo
o`3oool0203oool003h0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`050?ooo`03
0000003oool0oooo03D0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`040?ooo`05
0000003oool0oooo0?ooo`000000?@3oool00`000000oooo0?ooo`0m0?ooo`030000003oool0oooo
00D0oooo00D000000?ooo`3oool0oooo0000000h0?ooo`030000003oool0oooo00P0oooo0P00000i
0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool01`3oool003h0oooo0P0000020?oo
o`800000203oool2000003D0oooo0P0000020?ooo`8000001P3oool2000000030?ooo`0000000000
03/0oooo0`00000m0?ooo`<000001`3oool2000000030?ooo`000000000003H0oooo0`00000:0?oo
o`800000=`3oool3000000X0oooo0P0000070?ooo`00?`3oool4000000X0oooo0P00000e0?ooo`@0
0000203oool3000003h0oooo00<000000?ooo`3oool0?@3oool00`000000oooo0?ooo`060?ooo`<0
0000>@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo03L0oooo00<000000?ooo`3o
ool02@3oool2000000H0oooo003o0?oook40oooo003o0?oook40oooo003o0?oook40oooo003o0?oo
ok40oooo003o0?oook40oooo000M0?ooool00000S`0000050?ooo`007@3oool00`000000oooo0?oo
o`050?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0?0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0?0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0?0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0?0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0?0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0?0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0?0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?oo
o`030?ooo`007@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool01@3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0W0?oo
o`030000003oool0oooo04<0oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`120?oo
o`030000003oool0oooo04<0oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`050?oo
o`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000
oooo0?ooo`030?ooo`00103oool4000000@0oooo00@000000?ooo`3oool0oooo0`00000:0?ooo`03
0000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`000`3oool200000080oooo
0P0000030?ooo`030000003oool0oooo0080000000<0oooo0000000000002@3oool00`000000oooo
0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool000<0oooo00<000000?ooo`3oool00P3o
ool00`000000oooo0?ooo`040?ooo`050000003oool0oooo0?ooo`0000002@3oool00`000000oooo
0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool000<0oooo00<000000?ooo`3oool00P3o
ool00`000000oooo0?ooo`040?ooo`050000003oool0oooo0?ooo`0000002@3oool400000?l0oooo
Q`3oool4000000D0oooo00030?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0103o
ool00`000000oooo0?ooo`02000000T0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003o
ool0oooo00<0oooo00030?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool01@3oool3
000000X0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo00030?oo
o`030000003oool0oooo0080oooo00<000000?ooo`3oool0103oool200000080oooo00<000000?oo
o`3oool01`3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool000<0
oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`040?ooo`8000000P3oool00`000000
oooo0?ooo`070?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`00
0`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00@0oooo00D000000?ooo`3oool0
oooo000000090?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`00
0`3oool200000080oooo0P0000060?ooo`80000000<0oooo0000000000002@3oool00`000000oooo
0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool000@0oooo100000080?ooo`<000002P3o
ool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<00000
0?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo
0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0
oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000
003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?oo
o`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool0
01d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`03
0000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo
0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3o
oon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool0
0`000000oooo0?ooo`030?ooo`007@3oool300000?l0ooooR@3oool3000000D0oooo000M0?ooo`03
0000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo
0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3o
oon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool0
0`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?oo
o`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0
oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3o
ool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<00000
0?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo
0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0
oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000
003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?oo
o`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool0
01d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`03
0000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo
0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3o
oon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`<00000o`3ooon90?ooo`<000001@3oool0
01d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`03
0000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo
0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3o
oon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool0
0`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?oo
o`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0
oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3o
ool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<00000
0?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo
0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0
oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000
003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?oo
o`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool0
01d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`03
0000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo
0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo0`00003o0?ooohT0oooo0`00
00050?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool0
01d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`03
0000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo
0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3o
oon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool0
0`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?oo
o`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0
oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3o
ool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<00000
0?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo
0?00oooo1@0000030?ooo`H000000`3oool9000000<0oooo0`00001j0?ooo`030000003oool0oooo
00<0oooo000M0?ooo`030000003oool0oooo0=`0oooo100000030?ooo`H000000`3oool400000200
oooo0`0000030?ooo`T00000J`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo
0?ooo`3H0?ooo`@00000@P3oool010000000oooo0?ooo`3oool3000006D0oooo00<000000?ooo`3o
ool00`3oool001d0oooo00<000000?ooo`3oool0c`3oool500000540oooo0`00001R0?ooo`030000
003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0<L0oooo1000001P0?ooo`@00000F`3o
ool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`330?ooo`@00000J03oool5
000005H0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0_03oool30000
0</0oooo00<000000?ooo`3oool00`3oool001d0oooo0`00002h0?ooo`@00000N`3oool3000004h0
oooo0`0000050?ooo`007@3oool00`000000oooo0?ooo`2g0?ooo`030000003oool0oooo0800oooo
0P00001>0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0;40oooo0P00
003G0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0:d0oooo1000002>
0?ooo`<00000B03oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`2[0?oo
o`800000U@3oool4000004@0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3o
ool0Y03oool4000009h0oooo00<000000?ooo`3oool0@@3oool00`000000oooo0?ooo`030?ooo`00
7@3oool00`000000oooo0?ooo`2S0?ooo`030000003oool0oooo0>@0oooo00<000000?ooo`3oool0
0`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M
0?ooo`030000003oool0oooo09d0oooo0P00002[0?ooo`030000003oool0oooo03d0oooo00<00000
0?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0V@3oool400000:h0oooo00<000000?oo
o`3oool0?03oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`2G0?ooo`80
0000/`3oool00`000000oooo0?ooo`0k0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000
003oool0oooo0>l0oooo0P0000040?ooo`800000103oool00`000000oooo0?ooo`1?0?ooo`030000
003oool0oooo03X0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0T@3o
ool3000004X0oooo00<000000?ooo`3oool00P3oool2000000@0oooo0P00000A0?ooo`030000003o
ool0oooo0080oooo0P0000040?ooo`800000P@3oool00`000000oooo0?ooo`030?ooo`007@3oool0
0`000000oooo0?ooo`2@0?ooo`030000003oool0oooo04@0oooo0P0000040?ooo`030000003oool0
oooo02`0oooo0P00001l0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo
08l0oooo00<000000?ooo`3oool0?`3oool2000003/0oooo00<000000?ooo`3oool0@03oool00`00
0000oooo0?ooo`0f0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0</0
oooo0P0000250?ooo`030000003oool0oooo03D0oooo00<000000?ooo`3oool00`3oool001d0oooo
00<000000?ooo`3oool0RP3oool2000003X0oooo0P00001:0?ooo`800000?`3oool2000003D0oooo
00<000000?ooo`3oool00`3oool000@0oooo100000040?ooo`040000003oool00000000000d0oooo
00<000000?ooo`3oool0R03oool2000003/0oooo00<000000?ooo`3oool0S@3oool00`000000oooo
0?ooo`0b0?ooo`030000003oool0oooo00<0oooo00030?ooo`8000000P3oool2000000<0oooo00<0
00000?ooo`3oool00P00000<0?ooo`030000003oool0oooo08H0oooo0P00000g0?ooo`<00000EP3o
ool2000003`0oooo00<000000?ooo`3oool0<@3oool00`000000oooo0?ooo`030?ooo`000`3oool0
0`000000oooo0?ooo`020?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool02@3oool4
000008<0oooo0P00000c0?ooo`<00000V`3oool00`000000oooo0?ooo`0]0?ooo`@000001@3oool0
00<0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo
00P0oooo00<000000?ooo`3oool0^03oool2000006<0oooo0P00001[0?ooo`030000003oool0oooo
00<0oooo00030?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0103oool4000000X0
oooo00<000000?ooo`3oool0o`3ooolP0?ooo`030000003oool0oooo03P0oooo00<000000?ooo`3o
ool0;@3oool00`000000oooo0?ooo`030?ooo`000`3oool00`000000oooo0?ooo`020?ooo`030000
003oool0oooo00<0oooo0P0000020?ooo`8000002@3oool00`000000oooo0?ooo`1o0?ooo`800000
<@3oool200000:H0oooo00<000000?ooo`3oool0;@3oool00`000000oooo0?ooo`030?ooo`000`3o
ool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3o
ool00`000000oooo0?ooo`070?ooo`030000003oool0oooo07d0oooo0P00002S0?ooo`800000=`3o
ool00`000000oooo0?ooo`0/0?ooo`030000003oool0oooo00<0oooo00030?ooo`030000003oool0
oooo0080oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo00L0oooo00<000000?ooo`3oool0O03oool2000002h0oooo0`00001e0?ooo`030000003oool0
oooo03@0oooo00<000000?ooo`3oool0;03oool00`000000oooo0?ooo`030?ooo`000`3oool00`00
0000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool00`00
0000oooo0?ooo`070?ooo`030000003oool0oooo07/0oooo00<000000?ooo`3oool0g@3oool00`00
0000oooo0?ooo`0/0?ooo`030000003oool0oooo00<0oooo00030?ooo`8000000P3oool2000000D0
oooo0P0000020?ooo`8000002@3oool00`000000oooo0?ooo`2W0?ooo`800000/P3oool00`000000
oooo0?ooo`0/0?ooo`030000003oool0oooo00<0oooo00040?ooo`@000001`3oool4000000X0oooo
00<000000?ooo`3oool0o`3ooolW0?ooo`030000003oool0oooo0640oooo00<000000?ooo`3oool0
0`3oool001d0oooo00<000000?ooo`3oool0M`3oool00`000000oooo0?ooo`0X0?ooo`800000P`3o
ool00`000000oooo0?ooo`1P0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0
oooo07H0oooo00<000000?ooo`3oool0:03oool00`000000oooo0?ooo`3V0?ooo`030000003oool0
oooo00<0oooo000M0?ooo`030000003oool0oooo07D0oooo00<000000?ooo`3oool0h`3oool00`00
0000oooo0?ooo`0/0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo07@0
oooo00<000000?ooo`3oool09P3oool00`000000oooo0?ooo`2k0?ooo`030000003oool0oooo02`0
oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0W03oool00`000000oooo
0?ooo`2:0?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool0;03oool00`000000oooo
0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?ooob/0oooo00<000000?ooo`3oool0;P3o
ool00`000000oooo0?ooo`0/0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0
oooo0700oooo00<000000?ooo`3oool09@3oool00`000000oooo0?ooo`2?0?ooo`030000003oool0
oooo02h0oooo00<000000?ooo`3oool0;03oool00`000000oooo0?ooo`030?ooo`007@3oool00`00
0000oooo0?ooo`1_0?ooo`030000003oool0oooo02D0oooo00<000000?ooo`3oool0`@3oool00`00
0000oooo0?ooo`0/0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo06d0
oooo0P00001N0?oooaT00000M@3oool00`000000oooo0?ooo`0/0?ooo`030000003oool0oooo00<0
oooo000M0?ooo`030000003oool0oooo06`0oooo00<000000?ooo`3oool0903oool00`000000oooo
0?ooo`0d0?ooo`<000006@3oool7000006h0oooo00<000000?ooo`3oool0;03oool00`000000oooo
0?ooo`030?ooo`007@3oool3000006/0oooo00<000000?ooo`3oool0903oool00`000000oooo0?oo
o`0b0?ooo`<000008`3oool6000003T0oooo00<000000?ooo`3oool0;03oool00`000000oooo0?oo
o`0Z0?ooo`<000001@3oool001d0oooo00<000000?ooo`3oool0JP3oool00`000000oooo0?ooo`1G
0?ooo`<00000;03oool4000003H0oooo00<000000?ooo`3oool0FP3oool00`000000oooo0?ooo`03
0?ooo`007@3oool00`000000oooo0?ooo`310?ooo`<00000<`3oool200000940oooo00<000000?oo
o`3oool00`3oool001d0oooo00<000000?ooo`3oool0SP3oool00`000000oooo0?ooo`0]0?ooo`<0
0000>03oool2000008l0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0
I`3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02/0oooo0`00000m0?ooo`800000
G@3oool00`000000oooo0?ooo`0]0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003o
ool0oooo06H0oooo00<000000?ooo`3oool0D03oool200000480oooo0P00000`0?ooo`030000003o
ool0oooo02P0oooo00<000000?ooo`3oool0;@3oool00`000000oooo0?ooo`030?ooo`007@3oool0
0`000000oooo0?ooo`1U0?ooo`030000003oool0oooo0240oooo00<000000?ooo`3oool0;03oool0
0`000000oooo0?ooo`140?ooo`030000003oool0oooo02d0oooo0P00000Y0?ooo`030000003oool0
oooo02d0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0I03oool00`00
0000oooo0?ooo`0R0?ooo`030000003oool0oooo02X0oooo0P0000170?ooo`030000003oool0oooo
05P0oooo00<000000?ooo`3oool0;@3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000
oooo0?ooo`280?ooo`030000003oool0oooo02T0oooo0P0000190?ooo`030000003oool0oooo05L0
oooo00<000000?ooo`3oool0;P3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo
0?ooo`2b0?ooo`800000B`3oool00`000000oooo0?ooo`280?ooo`030000003oool0oooo00<0oooo
000M0?ooo`030000003oool0oooo0;40oooo00<000000?ooo`3oool0C03oool00`000000oooo0?oo
o`270?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0680oooo00<00000
0?ooo`3oool0803oool00`000000oooo0?ooo`0W0?ooo`800000C`3oool00`000000oooo0?ooo`0[
0?ooo`030000003oool0oooo05T0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?oo
o`3oool0H@3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo02H0oooo0P00001A0?oo
o`030000003oool0oooo02/0oooo00<000000?ooo`3oool09P3oool00`000000oooo0?ooo`0`0?oo
o`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0600oooo00<000000?ooo`3o
ool0B@3oool00`000000oooo0?ooo`1A0?ooo`030000003oool0oooo05@0oooo00<000000?ooo`3o
ool0<03oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1P0?ooo`030000
003oool0oooo04L0oooo0P00001D0?ooo`030000003oool0oooo05<0oooo00<000000?ooo`3oool0
<@3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1O0?ooo`030000003o
ool0oooo01l0oooo00<000000?ooo`3oool0903oool2000005H0oooo00<000000?ooo`3oool0D`3o
ool00`000000oooo0?ooo`0a0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0
oooo05h0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0S0?ooo`800000F@3oool0
0`000000oooo0?ooo`0X0?ooo`030000003oool0oooo02H0oooo00<000000?ooo`3oool0<P3oool0
0`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1M0?ooo`030000003oool0oooo
04D0oooo00<000000?ooo`3oool0F@3oool00`000000oooo0?ooo`0X0?ooo`030000003oool0oooo
02H0oooo00<000000?ooo`3oool0<P3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000
oooo0?ooo`2T0?ooo`030000003oool0oooo05X0oooo00<000000?ooo`3oool0:03oool00`000000
oooo0?ooo`0U0?ooo`030000003oool0oooo03<0oooo00<000000?ooo`3oool00`3oool001d0oooo
0`00001m0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool0F`3oool00`000000oooo
0?ooo`1@0?ooo`030000003oool0oooo0340oooo0`0000050?ooo`007@3oool00`000000oooo0?oo
o`1m0?ooo`030000003oool0oooo0280oooo00<000000?ooo`3oool0G03oool00`000000oooo0?oo
o`260?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo05/0oooo00<00000
0?ooo`3oool07P3oool00`000000oooo0?ooo`0R0?ooo`030000003oool0oooo05d0oooo00<00000
0?ooo`3oool0QP3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1J0?oo
o`030000003oool0oooo04<0oooo00<000000?ooo`3oool0GP3oool00`000000oooo0?ooo`0W0?oo
o`030000003oool0oooo05`0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3o
ool0FP3oool00`000000oooo0?ooo`120?ooo`030000003oool0oooo0600oooo00<000000?ooo`3o
ool09P3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo03D0oooo00<000000?ooo`3o
ool00`3oool001d0oooo00<000000?ooo`3oool0F@3oool00`000000oooo0?ooo`0N0?ooo`030000
003oool0oooo0240oooo00<000000?ooo`3oool0H@3oool00`000000oooo0?ooo`0U0?ooo`030000
003oool0oooo02@0oooo00<000000?ooo`3oool0=P3oool00`000000oooo0?ooo`030?ooo`007@3o
ool00`000000oooo0?ooo`1H0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool0803o
ool00`000000oooo0?ooo`1R0?ooo`030000003oool0oooo04`0oooo00<000000?ooo`3oool0=P3o
ool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1i0?ooo`030000003oool0
oooo0200oooo00<000000?ooo`3oool0H`3oool00`000000oooo0?ooo`1;0?ooo`030000003oool0
oooo03L0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0V`3oool00`00
0000oooo0?ooo`1T0?ooo`030000003oool0oooo04/0oooo00<000000?ooo`3oool0=`3oool00`00
0000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1F0?ooo`030000003oool0oooo0480
oooo00<000000?ooo`3oool0H`3oool00`000000oooo0?ooo`0U0?ooo`030000003oool0oooo05h0
oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0EP3oool00`000000oooo
0?ooo`0M0?ooo`030000003oool0oooo0240oooo00<000000?ooo`3oool0I03oool00`000000oooo
0?ooo`0T0?ooo`030000003oool0oooo05l0oooo00<000000?ooo`3oool00`3oool001d0oooo00<0
00000?ooo`3oool0E@3oool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo0200oooo00<0
00000?ooo`3oool0I03oool00`000000oooo0?ooo`270?ooo`030000003oool0oooo00<0oooo000M
0?ooo`030000003oool0oooo05D0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`0O
0?ooo`030000003oool0oooo06D0oooo00<000000?ooo`3oool0BP3oool00`000000oooo0?ooo`0j
0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo05@0oooo00<000000?oo
o`3oool0@@3oool00`000000oooo0?ooo`1T0?ooo`030000003oool0oooo04X0oooo00<000000?oo
o`3oool0>`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1D0?ooo`03
0000003oool0oooo0400oooo00<000000?ooo`3oool0I@3oool00`000000oooo0?ooo`0T0?ooo`03
0000003oool0oooo02<0oooo00<000000?ooo`3oool0>`3oool00`000000oooo0?ooo`030?ooo`00
7@3oool00`000000oooo0?ooo`1C0?ooo`030000003oool0oooo0400oooo00<000000?ooo`3oool0
I@3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool0
?03oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1C0?ooo`030000003o
ool0oooo01d0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`1V0?ooo`030000003o
ool0oooo04T0oooo00<000000?ooo`3oool0?@3oool00`000000oooo0?ooo`030?ooo`007@3oool0
0`000000oooo0?ooo`1c0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool0IP3oool0
0`000000oooo0?ooo`190?ooo`030000003oool0oooo03d0oooo00<000000?ooo`3oool00`3oool0
01d0oooo00<000000?ooo`3oool0U03oool00`000000oooo0?ooo`1V0?ooo`030000003oool0oooo
04T0oooo00<000000?ooo`3oool0?P3oool00`000000oooo0?ooo`030?ooo`007@3oool3000009<0
oooo00<000000?ooo`3oool0I`3oool00`000000oooo0?ooo`0R0?ooo`030000003oool0oooo06<0
oooo0`0000050?ooo`007@3oool00`000000oooo0?ooo`1A0?ooo`030000003oool0oooo03h0oooo
00<000000?ooo`3oool0I`3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo06D0oooo
00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0D@3oool00`000000oooo0?oo
o`0M0?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3oool0I`3oool00`000000oooo0?oo
o`2;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0500oooo00<00000
0?ooo`3oool07@3oool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo06L0oooo00<00000
0?ooo`3oool0B@3oool00`000000oooo0?ooo`100?ooo`030000003oool0oooo00<0oooo000M0?oo
o`030000003oool0oooo0500oooo00<000000?ooo`3oool0?@3oool00`000000oooo0?ooo`1X0?oo
o`030000003oool0oooo04P0oooo00<000000?ooo`3oool0@@3oool00`000000oooo0?ooo`030?oo
o`007@3oool00`000000oooo0?ooo`1?0?ooo`030000003oool0oooo03h0oooo00<000000?ooo`3o
ool0I`3oool00`000000oooo0?ooo`0R0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3o
ool0@P3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`2?0?ooo`030000
003oool0oooo06P0oooo00<000000?ooo`3oool08P3oool00`000000oooo0?ooo`0R0?ooo`030000
003oool0oooo04<0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0KP3o
ool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo06L0oooo00<000000?ooo`3oool0SP3o
ool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1]0?ooo`030000003oool0
oooo01h0oooo00<000000?ooo`3oool0J03oool00`000000oooo0?ooo`2>0?ooo`030000003oool0
oooo00<0oooo000M0?ooo`030000003oool0oooo04d0oooo00<000000?ooo`3oool0?@3oool00`00
0000oooo0?ooo`1Y0?ooo`030000003oool0oooo08h0oooo00<000000?ooo`3oool00`3oool001d0
oooo00<000000?ooo`3oool0C@3oool00`000000oooo0?ooo`0m0?ooo`030000003oool0oooo06P0
oooo00<000000?ooo`3oool08@3oool00`000000oooo0?ooo`0R0?ooo`030000003oool0oooo04H0
oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0C@3oool00`000000oooo
0?ooo`0l0?ooo`030000003oool0oooo06T0oooo00<000000?ooo`3oool0803oool00`000000oooo
0?ooo`0R0?ooo`030000003oool0oooo04L0oooo00<000000?ooo`3oool00`3oool001d0oooo00<0
00000?ooo`3oool0C03oool00`000000oooo0?ooo`0m0?ooo`030000003oool0oooo06P0oooo00<0
00000?ooo`3oool0AP3oool00`000000oooo0?ooo`170?ooo`030000003oool0oooo00<0oooo000M
0?ooo`030000003oool0oooo04`0oooo00<000000?ooo`3oool0703oool00`000000oooo0?ooo`0M
0?ooo`030000003oool0oooo06T0oooo00<000000?ooo`3oool0A@3oool00`000000oooo0?ooo`18
0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo04`0oooo00<000000?oo
o`3oool06`3oool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo06P0oooo00<000000?oo
o`3oool0A@3oool00`000000oooo0?ooo`190?ooo`030000003oool0oooo00<0oooo000M0?ooo`03
0000003oool0oooo04`0oooo00<000000?ooo`3oool0>`3oool00`000000oooo0?ooo`1Y0?ooo`03
0000003oool0oooo0200oooo00<000000?ooo`3oool08P3oool00`000000oooo0?ooo`190?ooo`03
0000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo04/0oooo00<000000?ooo`3oool0
?03oool00`000000oooo0?ooo`1X0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool0
8P3oool00`000000oooo0?ooo`1:0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003o
ool0oooo04/0oooo00<000000?ooo`3oool0>`3oool00`000000oooo0?ooo`1Y0?ooo`030000003o
ool0oooo0980oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0J@3oool0
0`000000oooo0?ooo`0M0?ooo`030000003oool0oooo06P0oooo00<000000?ooo`3oool0T`3oool0
0`000000oooo0?ooo`030?ooo`007@3oool3000006P0oooo00<000000?ooo`3oool07@3oool00`00
0000oooo0?ooo`1X0?ooo`030000003oool0oooo0980oooo0`0000050?ooo`007@3oool00`000000
oooo0?ooo`270?ooo`030000003oool0oooo06T0oooo00<000000?ooo`3oool0803oool00`000000
oooo0?ooo`0Q0?ooo`030000003oool0oooo04d0oooo00<000000?ooo`3oool00`3oool001d0oooo
00<000000?ooo`3oool0B@3oool00`000000oooo0?ooo`0k0?ooo`030000003oool0oooo06P0oooo
00<000000?ooo`3oool0803oool00`000000oooo0?ooo`0Q0?ooo`030000003oool0oooo04h0oooo
00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0B@3oool00`000000oooo0?oo
o`0j0?ooo`030000003oool0oooo06P0oooo00<000000?ooo`3oool0A03oool00`000000oooo0?oo
o`1?0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo04T0oooo00<00000
0?ooo`3oool0>P3oool00`000000oooo0?ooo`1W0?ooo`030000003oool0oooo04@0oooo00<00000
0?ooo`3oool0D03oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`180?oo
o`030000003oool0oooo01/0oooo00<000000?ooo`3oool0703oool00`000000oooo0?ooo`1X0?oo
o`030000003oool0oooo09L0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3o
ool0B03oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo01`0oooo00<000000?ooo`3o
ool0I`3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo07D0oooo00<000000?ooo`3o
ool00`3oool001d0oooo00<000000?ooo`3oool0Q03oool00`000000oooo0?ooo`1W0?ooo`030000
003oool0oooo0200oooo00<000000?ooo`3oool0MP3oool00`000000oooo0?ooo`030?ooo`007@3o
ool00`000000oooo0?ooo`240?ooo`030000003oool0oooo06L0oooo00<000000?ooo`3oool0A03o
ool00`000000oooo0?ooo`1B0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0
oooo08<0oooo00<000000?ooo`3oool0I`3oool00`000000oooo0?ooo`140?ooo`030000003oool0
oooo05<0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0AP3oool00`00
0000oooo0?ooo`0K0?ooo`030000003oool0oooo01`0oooo00<000000?ooo`3oool0IP3oool00`00
0000oooo0?ooo`140?ooo`030000003oool0oooo05@0oooo00<000000?ooo`3oool00`3oool001d0
oooo00<000000?ooo`3oool0AP3oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo01/0
oooo00<000000?ooo`3oool0I`3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo0240
oooo00<000000?ooo`3oool0E03oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo
0?ooo`150?ooo`030000003oool0oooo01`0oooo00<000000?ooo`3oool06`3oool00`000000oooo
0?ooo`1V0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool08@3oool00`000000oooo
0?ooo`1E0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo04D0oooo00<0
00000?ooo`3oool0>P3oool00`000000oooo0?ooo`1V0?ooo`030000003oool0oooo04<0oooo00<0
00000?ooo`3oool0EP3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`15
0?ooo`030000003oool0oooo03T0oooo00<000000?ooo`3oool0IP3oool00`000000oooo0?ooo`13
0?ooo`030000003oool0oooo05L0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?oo
o`3oool0A@3oool00`000000oooo0?ooo`0i0?ooo`030000003oool0oooo06H0oooo00<000000?oo
o`3oool0W@3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`140?ooo`03
0000003oool0oooo01/0oooo00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`1V0?ooo`03
0000003oool0oooo0200oooo00<000000?ooo`3oool0N`3oool00`000000oooo0?ooo`030?ooo`00
3`3oool5000000T0oooo00<000000?ooo`3oool0A03oool00`000000oooo0?ooo`0J0?ooo`030000
003oool0oooo01`0oooo00<000000?ooo`3oool0I@3oool00`000000oooo0?ooo`0P0?ooo`030000
003oool0oooo07`0oooo00<000000?ooo`3oool00`3oool00140oooo00<000000?ooo`3oool02@3o
ool00`000000oooo0?ooo`200?ooo`030000003oool0oooo06D0oooo00<000000?ooo`3oool0@`3o
ool00`000000oooo0?ooo`1I0?ooo`030000003oool0oooo00<0oooo000A0?ooo`030000003oool0
oooo00T0oooo1000001n0?ooo`030000003oool0oooo06D0oooo00<000000?ooo`3oool0@`3oool0
0`000000oooo0?ooo`1G0?ooo`@000001@3oool00140oooo00<000000?ooo`3oool02@3oool00`00
0000oooo0?ooo`1o0?ooo`030000003oool0oooo06D0oooo00<000000?ooo`3oool0@P3oool00`00
0000oooo0?ooo`1K0?ooo`030000003oool0oooo00<0oooo000A0?ooo`030000003oool0oooo00T0
oooo00<000000?ooo`3oool0H03oool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo06@0
oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo05`0
oooo00<000000?ooo`3oool00`3oool00140oooo00<000000?ooo`3oool02@3oool00`000000oooo
0?ooo`120?ooo`030000003oool0oooo01/0oooo00<000000?ooo`3oool06`3oool00`000000oooo
0?ooo`1T0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool0O`3oool00`000000oooo
0?ooo`030?ooo`004@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo0480oooo00<0
00000?ooo`3oool06P3oool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo06@0oooo00<0
00000?ooo`3oool0XP3oool00`000000oooo0?ooo`030?ooo`004@3oool00`000000oooo0?ooo`09
0?ooo`030000003oool0oooo0440oooo00<000000?ooo`3oool0>@3oool00`000000oooo0?ooo`1T
0?ooo`030000003oool0oooo0:<0oooo00<000000?ooo`3oool00`3oool00140oooo00<000000?oo
o`3oool02@3oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo03T0oooo00<000000?oo
o`3oool0I03oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo05l0oooo00<000000?oo
o`3oool00`3oool000l0oooo0`00000;0?ooo`030000003oool0oooo0440oooo00<000000?ooo`3o
ool0>@3oool00`000000oooo0?ooo`1S0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3o
ool07`3oool00`000000oooo0?ooo`1P0?ooo`030000003oool0oooo00<0oooo000A0?ooo`030000
003oool0oooo00T0oooo00<000000?ooo`3oool0GP3oool00`000000oooo0?ooo`0K0?ooo`030000
003oool0oooo06@0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0O0?ooo`030000
003oool0oooo0600oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0G@3o
ool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo06<0oooo00<000000?ooo`3oool07`3o
ool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo0640oooo00<000000?ooo`3oool00`3o
ool001d0oooo00<000000?ooo`3oool0N`3oool00`000000oooo0?ooo`1S0?ooo`030000003oool0
oooo0440oooo00<000000?ooo`3oool0HP3oool00`000000oooo0?ooo`030?ooo`007@3oool00`00
0000oooo0?ooo`0o0?ooo`030000003oool0oooo03T0oooo00<000000?ooo`3oool0HP3oool00`00
0000oooo0?ooo`120?ooo`030000003oool0oooo0680oooo00<000000?ooo`3oool00`3oool001d0
oooo00<000000?ooo`3oool0?`3oool00`000000oooo0?ooo`0h0?ooo`030000003oool0oooo06<0
oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo06<0
oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0?P3oool00`000000oooo
0?ooo`0i0?ooo`030000003oool0oooo0680oooo00<000000?ooo`3oool0803oool00`000000oooo
0?ooo`250?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo03h0oooo00<0
00000?ooo`3oool06`3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo06<0oooo00<0
00000?ooo`3oool07`3oool00`000000oooo0?ooo`260?ooo`030000003oool0oooo00<0oooo000M
0?ooo`030000003oool0oooo03h0oooo00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`0K
0?ooo`030000003oool0oooo0680oooo00<000000?ooo`3oool0Z@3oool00`000000oooo0?ooo`03
0?ooo`007@3oool00`000000oooo0?ooo`0n0?ooo`030000003oool0oooo03P0oooo00<000000?oo
o`3oool0HP3oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo06D0oooo00<000000?oo
o`3oool00`3oool001d0oooo00<000000?ooo`3oool0?@3oool00`000000oooo0?ooo`0h0?ooo`03
0000003oool0oooo0680oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0O0?ooo`03
0000003oool0oooo06H0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0
?@3oool00`000000oooo0?ooo`0h0?ooo`030000003oool0oooo0680oooo00<000000?ooo`3oool0
7`3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo06H0oooo00<000000?ooo`3oool0
0`3oool001d0oooo0`00001J0?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool0HP3o
ool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool0I@3o
ool3000000D0oooo000M0?ooo`030000003oool0oooo05X0oooo00<000000?ooo`3oool06P3oool0
0`000000oooo0?ooo`1R0?ooo`030000003oool0oooo0400oooo00<000000?ooo`3oool0J03oool0
0`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1I0?ooo`030000003oool0oooo
01/0oooo00<000000?ooo`3oool0H@3oool00`000000oooo0?ooo`2/0?ooo`030000003oool0oooo
00<0oooo000M0?ooo`030000003oool0oooo07H0oooo00<000000?ooo`3oool0H@3oool00`000000
oooo0?ooo`2]0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo03`0oooo
00<000000?ooo`3oool0=`3oool00`000000oooo0?ooo`1Q0?ooo`030000003oool0oooo01l0oooo
00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`1Z0?ooo`030000003oool0oooo00<0oooo
000M0?ooo`030000003oool0oooo03`0oooo00<000000?ooo`3oool0=P3oool00`000000oooo0?oo
o`1Q0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?oo
o`1[0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo03/0oooo00<00000
0?ooo`3oool06P3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo0640oooo00<00000
0?ooo`3oool0@03oool00`000000oooo0?ooo`1[0?ooo`030000003oool0oooo00<0oooo000M0?oo
o`030000003oool0oooo03/0oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`0K0?oo
o`030000003oool0oooo0600oooo00<000000?ooo`3oool0@03oool00`000000oooo0?ooo`1/0?oo
o`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo03X0oooo00<000000?ooo`3o
ool0=`3oool00`000000oooo0?ooo`1Q0?ooo`030000003oool0oooo0400oooo00<000000?ooo`3o
ool0K03oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1d0?ooo`030000
003oool0oooo0600oooo00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`0O0?ooo`030000
003oool0oooo06d0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0L`3o
ool00`000000oooo0?ooo`1Q0?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3oool07`3o
ool00`000000oooo0?ooo`1]0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0
oooo07<0oooo00<000000?ooo`3oool0H03oool00`000000oooo0?ooo`100?ooo`030000003oool0
oooo06h0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0>@3oool00`00
0000oooo0?ooo`0J0?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool0G`3oool00`00
0000oooo0?ooo`2b0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo03T0
oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo05l0
oooo00<000000?ooo`3oool0/P3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo
0?ooo`0h0?ooo`030000003oool0oooo03L0oooo00<000000?ooo`3oool0G`3oool00`000000oooo
0?ooo`0N0?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3oool0L@3oool00`000000oooo
0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0h0?ooo`030000003oool0oooo03L0oooo00<0
00000?ooo`3oool0G`3oool00`000000oooo0?ooo`0M0?ooo`030000003oool0oooo01l0oooo00<0
00000?ooo`3oool0L@3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0h
0?ooo`030000003oool0oooo03L0oooo00<000000?ooo`3oool0GP3oool00`000000oooo0?ooo`0o
0?ooo`030000003oool0oooo0780oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?oo
o`3oool0>03oool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo01/0oooo00<000000?oo
o`3oool0G@3oool00`000000oooo0?ooo`100?ooo`030000003oool0oooo0780oooo00<000000?oo
o`3oool00`3oool001d0oooo00<000000?ooo`3oool0=`3oool00`000000oooo0?ooo`0J0?ooo`03
0000003oool0oooo01X0oooo00<000000?ooo`3oool0GP3oool00`000000oooo0?ooo`0o0?ooo`03
0000003oool0oooo07<0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0
=`3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool0
G@3oool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo09D0oooo00<000000?ooo`3oool0
0`3oool001d0oooo0`00001a0?ooo`030000003oool0oooo05`0oooo00<000000?ooo`3oool07P3o
ool00`000000oooo0?ooo`2D0?ooo`<000001@3oool001d0oooo00<000000?ooo`3oool0L@3oool0
0`000000oooo0?ooo`1L0?ooo`030000003oool0oooo0;L0oooo00<000000?ooo`3oool00`3oool0
01d0oooo00<000000?ooo`3oool0L03oool00`000000oooo0?ooo`1L0?ooo`030000003oool0oooo
03l0oooo00<000000?ooo`3oool0MP3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000
oooo0?ooo`1C0?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool0G03oool00`000000
oooo0?ooo`0n0?ooo`030000003oool0oooo07L0oooo00<000000?ooo`3oool00`3oool001d0oooo
00<000000?ooo`3oool0=P3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo01X0oooo
00<000000?ooo`3oool0F`3oool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo01h0oooo
00<000000?ooo`3oool0M`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?oo
o`0f0?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3oool06`3oool00`000000oooo0?oo
o`1J0?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?oo
o`1h0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo03H0oooo00<00000
0?ooo`3oool0=P3oool00`000000oooo0?ooo`1K0?ooo`030000003oool0oooo03h0oooo00<00000
0?ooo`3oool0N@3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0e0?oo
o`030000003oool0oooo03L0oooo00<000000?ooo`3oool0FP3oool00`000000oooo0?ooo`0o0?oo
o`030000003oool0oooo07T0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3o
ool0=@3oool00`000000oooo0?ooo`0g0?ooo`030000003oool0oooo05X0oooo00<000000?ooo`3o
ool0?P3oool00`000000oooo0?ooo`1j0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000
003oool0oooo0540oooo00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`1I0?ooo`030000
003oool0oooo01d0oooo00<000000?ooo`3oool0W03oool00`000000oooo0?ooo`030?ooo`007@3o
ool00`000000oooo0?ooo`1A0?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool0F@3o
ool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo09`0oooo00<000000?ooo`3oool00`3o
ool001d0oooo00<000000?ooo`3oool0KP3oool00`000000oooo0?ooo`1I0?ooo`030000003oool0
oooo0;d0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0KP3oool00`00
0000oooo0?ooo`1H0?ooo`030000003oool0oooo03h0oooo00<000000?ooo`3oool0O@3oool00`00
0000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0d0?ooo`030000003oool0oooo03L0
oooo00<000000?ooo`3oool0E`3oool00`000000oooo0?ooo`0n0?ooo`030000003oool0oooo07h0
oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0=03oool00`000000oooo
0?ooo`0g0?ooo`030000003oool0oooo05H0oooo00<000000?ooo`3oool07P3oool00`000000oooo
0?ooo`0M0?ooo`030000003oool0oooo07l0oooo00<000000?ooo`3oool00`3oool001d0oooo00<0
00000?ooo`3oool0=03oool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo01`0oooo00<0
00000?ooo`3oool0E03oool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo01d0oooo00<0
00000?ooo`3oool0P03oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0d
0?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3oool0703oool00`000000oooo0?ooo`1C
0?ooo`030000003oool0oooo0<80oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?oo
o`3oool0=03oool00`000000oooo0?ooo`0h0?ooo`030000003oool0oooo0580oooo00<000000?oo
o`3oool0``3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0d0?ooo`03
0000003oool0oooo03P0oooo00<000000?ooo`3oool0D@3oool00`000000oooo0?ooo`0N0?ooo`03
0000003oool0oooo0:<0oooo00<000000?ooo`3oool00`3oool001d0oooo0`00000d0?ooo`030000
003oool0oooo03P0oooo00<000000?ooo`3oool0D03oool00`000000oooo0?ooo`0O0?ooo`030000
003oool0oooo01h0oooo00<000000?ooo`3oool0P03oool3000000D0oooo000M0?ooo`030000003o
ool0oooo03@0oooo00<000000?ooo`3oool0>@3oool00`000000oooo0?ooo`1>0?ooo`030000003o
ool0oooo01l0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`230?ooo`030000003o
ool0oooo00<0oooo000M0?ooo`030000003oool0oooo0500oooo00<000000?ooo`3oool07@3oool0
0`000000oooo0?ooo`1=0?ooo`030000003oool0oooo0400oooo00<000000?ooo`3oool0Q03oool0
0`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1@0?ooo`030000003oool0oooo
01d0oooo00<000000?ooo`3oool0C03oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo
08@0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0L03oool00`000000
oooo0?ooo`1;0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool07P3oool00`000000
oooo0?ooo`250?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0700oooo
00<000000?ooo`3oool0BP3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo01h0oooo
00<000000?ooo`3oool0QP3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?oo
o`0c0?ooo`030000003oool0oooo03/0oooo00<000000?ooo`3oool0B03oool00`000000oooo0?oo
o`110?ooo`030000003oool0oooo08L0oooo00<000000?ooo`3oool00`3oool001d0oooo00<00000
0?ooo`3oool0<`3oool00`000000oooo0?ooo`0k0?ooo`030000003oool0oooo04L0oooo00<00000
0?ooo`3oool0c03oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0c0?oo
o`030000003oool0oooo01X0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`160?oo
o`030000003oool0oooo0<d0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3o
ool0<`3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3o
ool0A@3oool00`000000oooo0?ooo`0Q0?ooo`030000003oool0oooo01d0oooo00<000000?ooo`3o
ool0RP3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0c0?ooo`030000
003oool0oooo03/0oooo00<000000?ooo`3oool0@`3oool2000002<0oooo00<000000?ooo`3oool0
7@3oool00`000000oooo0?ooo`2;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003o
ool0oooo0780oooo00<000000?ooo`3oool0@@3oool00`000000oooo0?ooo`130?ooo`030000003o
ool0oooo08/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0LP3oool0
0`000000oooo0?ooo`0o0?ooo`800000A@3oool00`000000oooo0?ooo`2<0?ooo`030000003oool0
oooo00<0oooo000M0?ooo`030000003oool0oooo0780oooo00<000000?ooo`3oool0?P3oool00`00
0000oooo0?ooo`0R0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool0S@3oool00`00
0000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0c0?ooo`030000003oool0oooo01X0
oooo00<000000?ooo`3oool0803oool00`000000oooo0?ooo`0k0?ooo`800000903oool00`000000
oooo0?ooo`2`0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo03<0oooo
00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`0Q0?ooo`800000>@3oool200000=T0oooo
00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0<`3oool00`000000oooo0?oo
o`100?ooo`030000003oool0oooo03@0oooo0P0000180?ooo`030000003oool0oooo0900oooo00<0
00000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0<`3oool00`000000oooo0?ooo`11
0?ooo`030000003oool0oooo0380oooo00<000000?ooo`3oool09@3oool00`000000oooo0?ooo`0P
0?ooo`030000003oool0oooo0900oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?oo
o`3oool0=03oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo02l0oooo0P00000W0?oo
o`030000003oool0oooo0200oooo00<000000?ooo`3oool0T@3oool00`000000oooo0?ooo`030?oo
o`007@3oool3000003@0oooo00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`0T0?ooo`03
0000003oool0oooo02`0oooo0P00001:0?ooo`800000TP3oool3000000D0oooo000M0?ooo`030000
003oool0oooo03@0oooo00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`0U0?ooo`800000
:P3oool2000004/0oooo00<000000?ooo`3oool0U03oool00`000000oooo0?ooo`030?ooo`007@3o
ool00`000000oooo0?ooo`0d0?ooo`030000003oool0oooo01/0oooo00<000000?ooo`3oool09`3o
ool00`000000oooo0?ooo`0T0?ooo`<00000:P3oool00`000000oooo0?ooo`0O0?ooo`030000003o
ool0oooo09D0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0=03oool0
0`000000oooo0?ooo`160?ooo`@000007@3oool5000002`0oooo00<000000?ooo`3oool0^03oool0
0`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`210?ooo`L000004@3oool50000
0>`0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0R03oool6000000H0
oooo1@00001F0?ooo`030000003oool0oooo09P0oooo00<000000?ooo`3oool00`3oool001d0oooo
00<000000?ooo`3oool0E03oool00`000000oooo0?ooo`0g0?ooo`H00000=`3oool00`000000oooo
0?ooo`0O0?ooo`800000V`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?oo
o`0e0?ooo`030000003oool0oooo01`0oooo00<000000?ooo`3oool0L`3oool00`000000oooo0?oo
o`0O0?ooo`030000003oool0oooo09/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<00000
0?ooo`3oool0=@3oool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo09@0oooo00<00000
0?ooo`3oool0W03oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0e0?oo
o`030000003oool0oooo08h0oooo00<000000?ooo`3oool0`@3oool00`000000oooo0?ooo`030?oo
o`007@3oool00`000000oooo0?ooo`0f0?ooo`030000003oool0oooo08`0oooo00<000000?ooo`3o
ool0`P3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0f0?ooo`030000
003oool0oooo0:l0oooo00<000000?ooo`3oool0W`3oool00`000000oooo0?ooo`030?ooo`007@3o
ool00`000000oooo0?ooo`0f0?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3oool0I`3o
ool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo0:00oooo00<000000?ooo`3oool00`3o
ool001d0oooo00<000000?ooo`3oool0E`3oool00`000000oooo0?ooo`1V0?ooo`030000003oool0
oooo02<0oooo00<000000?ooo`3oool0X@3oool00`000000oooo0?ooo`030?ooo`007@3oool00`00
0000oooo0?ooo`3U0?ooo`030000003oool0oooo0:80oooo00<000000?ooo`3oool00`3oool001d0
oooo00<000000?ooo`3oool0^`3oool2000002H0oooo0P00002U0?ooo`030000003oool0oooo00<0
oooo00040?ooo`D000000`3oool00`000000oooo0?ooo`05000000T0oooo00<000000?ooo`3oool0
>03oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo05`0oooo00<000000?ooo`3oool0
9@3oool00`000000oooo0?ooo`2U0?ooo`030000003oool0oooo00<0oooo00060?ooo`030000003o
ool0oooo00<0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`090?ooo`030000003o
ool0oooo03T0oooo00<000000?ooo`3oool0803oool00`000000oooo0?ooo`3o0?ooob`0oooo00<0
00000?ooo`3oool00`3oool000H0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`09
0?ooo`030000003oool0oooo03T0oooo00<000000?ooo`3oool0NP3oool00`000000oooo0?ooo`0U
0?ooo`030000003oool0oooo0:T0oooo00<000000?ooo`3oool00`3oool000H0oooo00<000000?oo
o`3oool0203oool00`000000oooo0?ooo`090?ooo`@00000>@3oool00`000000oooo0?ooo`0R0?oo
o`800000E03oool00`000000oooo0?ooo`0U0?ooo`030000003oool0oooo0:L0oooo100000050?oo
o`001P3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3o
ool0>`3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo04`0oooo0P00000Z0?ooo`03
0000003oool0oooo0:/0oooo00<000000?ooo`3oool00`3oool000H0oooo00<000000?ooo`3oool0
203oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo03/0oooo00<000000?ooo`3oool0
L@3oool00`000000oooo0?ooo`0Y0?ooo`030000003oool0oooo0:`0oooo00<000000?ooo`3oool0
0`3oool000H0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`090?ooo`030000003o
ool0oooo03`0oooo00<000000?ooo`3oool0o`3ooom<0?ooo`030000003oool0oooo00<0oooo0006
0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`1T
0?ooo`030000003oool0oooo04<0oooo0P00000[0?ooo`030000003oool0oooo0;00oooo00<00000
0?ooo`3oool00`3oool000H0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`090?oo
o`030000003oool0oooo06D0oooo00<000000?ooo`3oool0K@3oool200000;<0oooo00<000000?oo
o`3oool00`3oool000@0oooo0`0000080?ooo`<000002`3oool00`000000oooo0?ooo`2T0?ooo`<0
0000;03oool200000;D0oooo00<000000?ooo`3oool00`3oool000H0oooo00<000000?ooo`3oool0
203oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo03l0oooo00<000000?ooo`3oool0
G@3oool200000300oooo0P00002g0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003o
ool0oooo0400oooo00<000000?ooo`3oool09P3oool2000003<0oooo00<000000?ooo`3oool0;`3o
ool00`000000oooo0?ooo`2g0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0
oooo0400oooo00<000000?ooo`3oool0;03oool2000002P0oooo0P00003_0?ooo`030000003oool0
oooo00<0oooo000M0?ooo`030000003oool0oooo0440oooo00<000000?ooo`3oool0<@3oool20000
01`0oooo0P00003e0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo07/0
oooo0P0000040?ooo`800000103oool2000000@0oooo0P00000l0?ooo`<00000_03oool00`000000
oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`380?ooo`<00000_`3oool00`000000oooo
0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`150?ooo`030000003oool0oooo0?l0oooo@`3o
ool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`160?ooo`030000003oool0
oooo07/0oooo00<000000?ooo`3oool0``3oool00`000000oooo0?ooo`030?ooo`007@3oool00`00
0000oooo0?ooo`160?ooo`800000NP3oool200000<H0oooo00<000000?ooo`3oool00`3oool001d0
oooo00<000000?ooo`3oool0B03oool2000007D0oooo0`0000380?ooo`030000003oool0oooo00<0
oooo000M0?ooo`030000003oool0oooo04X0oooo0P00001a0?ooo`800000b`3oool00`000000oooo
0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3o
ool001d0oooo0`00002g0?ooo`<00000cP3oool3000000D0oooo000M0?ooo`030000003oool0oooo
04l0oooo0P00001T0?ooo`800000d`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000
oooo0?ooo`1A0?ooo`800000o`3ooolh0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000
003oool0oooo05<0oooo00<000000?ooo`3oool0F@3oool300000=P0oooo00<000000?ooo`3oool0
0`3oool001d0oooo00<000000?ooo`3oool0Z`3oool400000=/0oooo00<000000?ooo`3oool00`3o
ool001d0oooo00<000000?ooo`3oool0E`3oool4000004h0oooo0P00003O0?ooo`030000003oool0
oooo00<0oooo000M0?ooo`030000003oool0oooo05/0oooo100000140?ooo`<00000i03oool00`00
0000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`2Q0?ooo`800000i`3oool00`000000
oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1R0?ooo`<00000=03oool400000>d0oooo
00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0I@3oool3000002d0oooo1000
003a0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo06/0oooo2@000003
0?ooo`<000002P3oool5000000<0oooo1P00003h0?ooo`030000003oool0oooo00<0oooo000M0?oo
o`030000003oool0oooo07X0oooo0`0000030?ooo`@00000o`3oool70?ooo`030000003oool0oooo
00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`00
7@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<0
00000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0
oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oo
oh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`03
0000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo
0?ooo`030?ooo`007@3oool300000?l0ooooR@3oool3000000D0oooo000M0?ooo`030000003oool0
oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oo
oh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`03
0000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo
0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3o
ool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?oo
o`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000
oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0
o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3o
ool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<00000
0?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo
00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`00
7@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<0
00000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0
oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oo
oh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`03
0000003oool0oooo00<0oooo000M0?ooo`<00000o`3ooon90?ooo`<000001@3oool001d0oooo00<0
00000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0
oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oo
oh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`03
0000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo
0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3o
ool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?oo
o`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000
oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0
o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3o
ool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<00000
0?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo
00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`00
7@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<0
00000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0
oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oo
oh/0oooo00<000000?ooo`3oool00`3oool001d0oooo0`00003o0?ooohT0oooo0`0000050?ooo`00
7@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<0
00000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0
oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oo
oh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`03
0000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo
0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3o
ool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?oo
o`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000
oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0
o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3o
ool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<00000
0?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo
00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`00
7@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool000@0oooo1@00
00030?ooo`030000003oool0000000D000002@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<0
00000?ooo`3oool00`3oool000H0oooo00<000000?ooo`3oool00`3oool010000000oooo00000000
00030?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003o
ool0oooo00<0oooo00060?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool02`3oool4
00000?l0ooooQ`3oool4000000D0oooo00060?ooo`030000003oool0oooo00L0oooo00<000000?oo
o`3oool02P3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool000H0
oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo0?l0
ooooR`3oool00`000000oooo0?ooo`030?ooo`001P3oool00`000000oooo0?ooo`080?ooo`800000
2P3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool000H0oooo00<0
00000?ooo`3oool02@3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo0?l0ooooR`3o
ool00`000000oooo0?ooo`030?ooo`001P3oool00`000000oooo0?ooo`090?ooo`030000003oool0
oooo00P0oooo00<000000?ooo`3oool09`3oool00`000000oooo0?ooo`130?ooo`030000003oool0
oooo0480oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`130?ooo`030000003oool0
oooo0480oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`030?ooo`001P3oool00`00
0000oooo0?ooo`050?ooo`050000003oool0oooo0?ooo`0000002P3oool00`000000oooo0?ooo`05
0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0?
0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0?
0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0?
0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0?
0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0?
0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0?
0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0?
0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`03
0?ooo`00103oool3000000L0oooo0P0000000`3oool000000000000:0?ooo`030000003oool0oooo
00D0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo
00l0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo
00l0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo
00l0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo
00l0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo
00l0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo
00l0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo
00l0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo
00<0oooo00060?ooo`030000003oool0oooo00H0oooo0`00000;0?ooool00000S`0000050?ooo`00
o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00
o`3ooona0?ooo`00\
\>"],
  ImageRangeCache->{{{0, 431}, {431, 0}} -> {0.392291, 0.763022, 0.00432743, \
0.00157361}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  ContourGraphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  "Calculating ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "with systematics and correlations: \nThe Minimizers ",
  StyleBox["ChiTheta",
    FontFamily->"Courier"],
  " and ",
  StyleBox["ChiDelta",
    FontFamily->"Courier"]
}], "Section"],

Cell[TextData[{
  "The minimizers ",
  StyleBox["ChiThet",
    FontFamily->"Courier"],
  StyleBox["a",
    FontFamily->"Courier"],
  " and ",
  StyleBox["ChiDelta",
    FontFamily->"Courier"],
  " are especially designed to calculate the ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  " function for ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  " and \[Delta], respectively, including systematics and multi-parameter \
correlations. In order to be fast, they are using a minimizor to find the \
minimum ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "with respect to all priors with the possibility to add external \
information, i.e., to limit certain quantities by adding a Gaussian",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  " (cf., appendix of hep-ph/0204352) .  However, such a method cannot run \
completely independently, i.e., needs external expert knowledge about the \
general contour topology.  The minimization algorithm will usually find the \
correct minimum, but in special cases it jumps do a different contour. This \
can be normally seen in discontinuities in the ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "function. In order to understand these, it is important to know the \
general structure of the underlying parameter space. In comparison to a grid \
based method, which could not handle so many parameters including systematics \
and correlations, this algorithm does therefore not run completely \
independently without expert knowledge!"
}], "Text"],

Cell[TextData[{
  "Before one uses these functions, one should spend some time to incorporate \
the general method of the minimization algorithm. For example, let us take a \
look at the last figure. Let's say we are interested in ",
  Cell[BoxData[
      \(TraditionalForm\`\(sin\^2\)(2  \[Theta]\_13)\)]],
  ", represented by the horizontal axis in this figure, and want to calculate \
the ",
  Cell[BoxData[
      \(TraditionalForm\`\(\[Chi]\^2\)(\(sin\^2\)(2  \[Theta]\_13))\)]],
  " including the two-parameter correlation with ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)]],
  ", represented by the vertical axis. For each individual value on the \
horizontal axis, the minimizor then needs to be set to a starting point and \
will run into the next local minimum parallel to the vertical axis, i.e., we \
calculate Min[",
  Cell[BoxData[
      \(TraditionalForm\`\(\[Chi]\^2\)(\(sin\^2\)(2  \[Theta]\_13))\)]],
  "] with respect to ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)]],
  ". With some imagination, one can easily see that such a method will \
succeed for one parameter as long as the starting value is chosen \
appropriately and the topology is, at least, approximately known. What ",
  StyleBox["ChiThet",
    FontFamily->"Courier"],
  StyleBox["a",
    FontFamily->"Courier"],
  " actually does, is minimzing with respect to",
  StyleBox[" all",
    FontSlant->"Italic"],
  " parameters and systematics priors, excluding ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  " itself, of course.  ",
  StyleBox["ChiDelta",
    FontFamily->"Courier"],
  " is the corresponding function for minimizing with respect to \[Delta]. \n\
\nAs a first step, before ",
  StyleBox["each",
    FontSlant->"Italic"],
  " minimum finder run, the parameters should be res-set to their starting \
values, i.e., ",
  StyleBox["SetVacuumParameters",
    FontFamily->"Courier"],
  ", ",
  StyleBox["SetMasses",
    FontFamily->"Courier"],
  ",  ",
  StyleBox["SetDensity, ",
    FontFamily->"Courier"],
  "and ",
  StyleBox["SetRates ",
    FontFamily->"Courier"],
  "have to be called! Before ",
  StyleBox["any",
    FontSlant->"Italic"],
  " run, i.e., at least once before any run, ",
  StyleBox["SetInputErrorsSet",
    FontFamily->"Courier"],
  " and ",
  StyleBox["StartingValues",
    FontFamily->"Courier"],
  " have to be called (see below)."
}], "Text"],

Cell[TextData[{
  "Before we can use the minimizors, we need to tell the software what values \
for the external errors/input we assume. Especially, the KamLAND results for \
the solar parameters and the matter density uncertainty can be treated this \
way, but also other parameters can be fixed to their central values if one \
does not want to minimize with respect to them, i.e., does not want to take \
into account the respective correlation. The following function needs as \
arguments the absolute precisions of externally measured quantities in the \
order ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)],
    FontWeight->"Bold"],
  StyleBox[", \[Delta], ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_21\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_31\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", \[Rho].",
    FontWeight->"Bold"],
  "  If one does not want to constraint one quantity, one should set it to a \
sufficiently large value. Note that the density uncertainty must be set by \
this function:"
}], "Text"],

Cell[BoxData[
    \(\(SetInputErrors[N[10], N[10], N[10], N[RescaledSMD\ 0.15], N[1], 
        N[DENSITY*0.05]];\)\)], "Input"],

Cell[TextData[{
  "This function call does not constrain ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)]],
  ", \[Delta], and ",
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_31\%2\),
        "Text",
        FontFamily->"Times"]]],
  "because of sufficiently large values. The product ",
  Cell[BoxData[
      \(TraditionalForm\`\(sin(
          2  \[Theta]\_12)\)\[Times]\[CapitalDelta]m\_21\%2\)]],
  "is assumed to be measured with a 15% precision by the KamLAND input and \
the average density of the Earth's matter density profile is assumed to be \
known with 5% precision. \n\nAs a next step, the minimzor needs to be told \
the starting values for the externally constrained quantities. These  are \
normally set to the best fit values. The following call sets the starting \
values to the best-fit values used above, i.e., ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)],
    FontWeight->"Bold"],
  StyleBox[", \[Delta], ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_21\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_31\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", and \[Rho]",
    FontWeight->"Bold"],
  ":"
}], "Text"],

Cell[BoxData[
    \(\(SetStartingValues[ArcSin[Sqrt[0.01]]/2, N[\[Pi]/4], N[0], 
        N[RescaledSMD], N[3.0*10^\(-3\)], DENSITY];\)\)], "Input"],

Cell[TextData[{
  "The actual minimization is then performed by but the algorithm ",
  StyleBox["ChiTheta",
    FontFamily->"Courier"],
  " or ",
  StyleBox["ChiDelta",
    FontFamily->"Courier"],
  ". They are called with the tested value of ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  "or \[Delta], respectively, for which the minimization is to be performed, \
and as a second parameter a vector representing the starting values of the \
minimum finder. The starting values are usually set close to the best-fit \
values, but the algorithm can be faster if they are slightly off. Note that, \
for example, using a negative large mass squared difference while keeping the \
starting values at the positive does not add very much to the ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "as long as the corresponding InputError is large enough! If,for \
topological reasons,the minimum finder does not converge to the correct local \
minimum,the starting values determined by this function will need to be \
correspondingly adjusted! The following demonstrates the application of ",
  StyleBox["ChiTheta",
    FontFamily->"Courier"],
  " for the tested value ",
  Cell[BoxData[
      \(TraditionalForm\`\(sin\^2\)(2  \[Theta]\_13)\)]],
  "=0.05, were the vector of the starting values has to have the form ",
  StyleBox["{",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)],
    FontWeight->"Bold"],
  StyleBox[", \[Delta], ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_21\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_31\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", \[Rho]}",
    FontWeight->"Bold"],
  " and ",
  Cell[BoxData[
      FormBox[
        StyleBox[\(\[Theta]\_13\),
          FontWeight->"Plain"], TraditionalForm]],
    FontWeight->"Bold"],
  "has to be given as angle:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(ChiTheta[
      N[ArcSin[Sqrt[0.05]]/2], {\[Pi]/4, 0, RescaledSMD, 0.003, DENSITY} // 
        N]\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \({211.41785100152367`, 0.5936852395536154`, 2.609579477584059`, 
      0.00006855061209402154`, 0.0031774952612490556`, 4.256908324812384`, 
      887.`}\)], "Output"]
}, Open  ]],

Cell[TextData[{
  "As a result of this function call, a vector of the form ",
  " ",
  StyleBox["{",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)],
    FontWeight->"Bold"],
  StyleBox[",",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\(\(\ \)\(\[Theta]\_23\)\)\)],
    FontWeight->"Bold"],
  StyleBox[", \[Delta], ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_21\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_31\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", \[Rho], Iterations}",
    FontWeight->"Bold"],
  " is supplied, where the first value represents the (minimized) ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "-value found, the last value the number of iterations used (a measure for \
the speed/performance/convergence), and the medium values the vector where \
the starting values finally ended up, i.e., the local minimum was found. For \
most applications, only the first value is interesting, but for test purposes \
also the other ones will be useful, since, up to a certain extend, one can \
also interpret them to find out what actually happened from the topology \
point of view."
}], "Text"],

Cell["\<\
In order to use the minimum finder again, we have learned above \
that the parameters have to be re-set:\
\>", "Text"],

Cell[BoxData[{
    \(\(SetVacuumParameters[N[9999], N[ArcSin[Sqrt[0.01]]/2], N[\[Pi]/4], 
        N[0]];\)\), "\[IndentingNewLine]", 
    \(\(SetMasses[N[RescaledSMD], 
        N[3.0*10^\(-3\)]];\)\), "\[IndentingNewLine]", 
    \(\(SetDensity[DENSITY];\)\), "\[IndentingNewLine]", 
    \(\(SetRates[];\)\)}], "Input"],

Cell[TextData[{
  "Then, we can call ",
  StyleBox["ChiDelta",
    FontFamily->"Courier"],
  " with the tested \[Delta] and the starting vector of the form ",
  StyleBox["{Log[10,",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\(sin\^2\)(2  \[Theta]\_13)\)],
    FontWeight->"Bold"],
  StyleBox["], ",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_21\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_31\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", \[Rho]}",
    FontWeight->"Bold"],
  ". For example, the following routine tests \[Delta]=\[Pi]/2 (maximal CP \
violation):"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ChiDelta[
      N[\[Pi]/2], {Log[10, 0.01], \[Pi]/4, 4.5\ 10^\(-5\), 0.003, DENSITY} // 
        N]\)], "Input"],

Cell[BoxData[
    \({0.6050828458876533`, \(-1.9154819181141707`\), 0.8187559546059352`, 
      0.00004025626952997163`, 0.003010726453227421`, 3.527784292069264`, 
      1595.`}\)], "Output"]
}, Open  ]],

Cell[TextData[{
  "This means that \[CapitalDelta]",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "is too low to distinguish it from CP conservation.\n\nCorresponding to ",
  StyleBox["ChiTheta",
    FontFamily->"Courier"],
  ", the result is returned as a vector composited of the ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "-value, the minimum found (in the format ",
  StyleBox["Log[10,",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\(sin\^2\)(2  \[Theta]\_13)\)],
    FontWeight->"Bold"],
  StyleBox["], ",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_21\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_31\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", \[Rho]",
    FontWeight->"Bold"],
  "), and the number of iterations used. Note that ",
  StyleBox["ChiDelta",
    FontFamily->"Courier"],
  " uses a very special, logarithmic form for ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  ", because it turns out that the algorithm converges faster on logarithmic \
scales."
}], "Text"],

Cell["\<\
BUG note: So far, there is a bug in the sign of \[Delta] in the \
software. Between the oscillation probabilities and the higher-level routines \
a relative sign \[Delta] -> -\[Delta] enters, making it necessary to correct \
this manually! This bug is corrected from version 1.1.\
\>", "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell[CellGroupData[{

Cell["Example", "Subsubsection"],

Cell[TextData[{
  "Let us now show one example: we want to find the sensitivity of our \
neutrino factory to",
  Cell[BoxData[
      \(TraditionalForm\`\(\(\ \)\(\(sin\^2\)(2  \[Theta]\_13)\)\)\)]],
  " for the LMA central values. In order to avoid mistakes, we can use \
wrappers to evaluate certain dependencies, such as for calculating ",
  Cell[BoxData[
      \(TraditionalForm\`\(\[Chi]\^2\)(\(sin\^2\)(2  \[Theta]\_13))\)]],
  " for the LMA values with \[Delta]=0 and ",
  Cell[BoxData[
      \(TraditionalForm\`\(sin\^2\)(2  \[Theta]\_13) = 0\)]],
  " including systematics and multi-parameter correlations, as well as the \
KamLAND results:"
}], "Text"],

Cell[BoxData[
    \(FindChiTheta[thes22theta13_]\  := \ 
      Module[{RSSMD}, \[IndentingNewLine]RSSMD\  = \ 
          Sin[2\ 32.9\ \[Pi]/
                  180]\ 4.5\ 10^\((\(-5\))\); \
\[IndentingNewLine]SetVacuumParameters[N[9999], N[ArcSin[Sqrt[0.0]]/2], 
          N[\[Pi]/4], N[0]]; \[IndentingNewLine]SetMasses[N[RSSMD], 
          N[3.0*10^\(-3\)]]; \[IndentingNewLine]SetDensity[
          DENSITY]; \[IndentingNewLine]SetRates[]; \
\[IndentingNewLine]SetInputErrors[N[10], N[10], N[10], N[RSSMD\ 0.15], N[1], 
          N[DENSITY*0.05]]; \[IndentingNewLine]SetStartingValues[
          ArcSin[Sqrt[0.0]]/2, N[\[Pi]/4], N[0], N[RSSMD], N[3.0*10^\(-3\)], 
          DENSITY]; \[IndentingNewLine]\(ChiTheta[
            N[ArcSin[Sqrt[thes22theta13]]/2], {\[Pi]/4, 0, RSSMD, 0.003, 
                DENSITY} // N]\)[\([1]\)]\ \[IndentingNewLine]]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(res\  = \ 
      Table[{s22th13, FindChiTheta[s22th13]}, {s22th13, 0, 0.003, 
          0.0005}]\)], "Input"],

Cell[BoxData[
    \({{0, 6.395380303039003`*^-10}, {0.0005`, 
        0.14702239100141457`}, {0.001`, 1.9348448583559148`}, {0.0015`, 
        6.815259243098478`}, {0.002`, 13.942697958795158`}, {0.0025`, 
        23.17126243053897`}, {0.003`, 32.90898060905974`}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(ListPlot[res, PlotJoined \[Rule] True]\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 317.46 0.0147151 0.0178858 [
[.18254 .00222 -15.75 -11 ]
[.18254 .00222 15.75 0 ]
[.34127 .00222 -13.25 -10.9375 ]
[.34127 .00222 13.25 0 ]
[.5 .00222 -15.75 -11 ]
[.5 .00222 15.75 0 ]
[.65873 .00222 -13.25 -10.9375 ]
[.65873 .00222 13.25 0 ]
[.81746 .00222 -15.75 -11 ]
[.81746 .00222 15.75 0 ]
[.97619 .00222 -13.25 -10.9375 ]
[.97619 .00222 13.25 0 ]
[.01131 .10414 -9 -5.5 ]
[.01131 .10414 0 5.5 ]
[.01131 .19357 -14 -5.46875 ]
[.01131 .19357 0 5.46875 ]
[.01131 .283 -14 -5.5 ]
[.01131 .283 0 5.5 ]
[.01131 .37243 -14 -5.46875 ]
[.01131 .37243 0 5.46875 ]
[.01131 .46186 -14 -5.5 ]
[.01131 .46186 0 5.5 ]
[.01131 .55129 -14 -5.46875 ]
[.01131 .55129 0 5.46875 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.18254 .01472 m
.18254 .02097 L
s
gsave
.18254 .00222 -76.75 -15 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 19 translate 1 -1 scale
63.000 11.875 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.0005) show
1.000 setlinewidth
grestore
.34127 .01472 m
.34127 .02097 L
s
gsave
.34127 .00222 -74.25 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.001) show
1.000 setlinewidth
grestore
.5 .01472 m
.5 .02097 L
s
gsave
.5 .00222 -76.75 -15 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 19 translate 1 -1 scale
63.000 11.875 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.0015) show
1.000 setlinewidth
grestore
.65873 .01472 m
.65873 .02097 L
s
gsave
.65873 .00222 -74.25 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.002) show
1.000 setlinewidth
grestore
.81746 .01472 m
.81746 .02097 L
s
gsave
.81746 .00222 -76.75 -15 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 19 translate 1 -1 scale
63.000 11.875 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.0025) show
1.000 setlinewidth
grestore
.97619 .01472 m
.97619 .02097 L
s
gsave
.97619 .00222 -74.25 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.003) show
1.000 setlinewidth
grestore
.125 Mabswid
.05556 .01472 m
.05556 .01847 L
s
.0873 .01472 m
.0873 .01847 L
s
.11905 .01472 m
.11905 .01847 L
s
.15079 .01472 m
.15079 .01847 L
s
.21429 .01472 m
.21429 .01847 L
s
.24603 .01472 m
.24603 .01847 L
s
.27778 .01472 m
.27778 .01847 L
s
.30952 .01472 m
.30952 .01847 L
s
.37302 .01472 m
.37302 .01847 L
s
.40476 .01472 m
.40476 .01847 L
s
.43651 .01472 m
.43651 .01847 L
s
.46825 .01472 m
.46825 .01847 L
s
.53175 .01472 m
.53175 .01847 L
s
.56349 .01472 m
.56349 .01847 L
s
.59524 .01472 m
.59524 .01847 L
s
.62698 .01472 m
.62698 .01847 L
s
.69048 .01472 m
.69048 .01847 L
s
.72222 .01472 m
.72222 .01847 L
s
.75397 .01472 m
.75397 .01847 L
s
.78571 .01472 m
.78571 .01847 L
s
.84921 .01472 m
.84921 .01847 L
s
.88095 .01472 m
.88095 .01847 L
s
.9127 .01472 m
.9127 .01847 L
s
.94444 .01472 m
.94444 .01847 L
s
.25 Mabswid
0 .01472 m
1 .01472 L
s
.02381 .10414 m
.03006 .10414 L
s
gsave
.01131 .10414 -70 -9.5 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 19 translate 1 -1 scale
63.000 11.875 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(5) show
1.000 setlinewidth
grestore
.02381 .19357 m
.03006 .19357 L
s
gsave
.01131 .19357 -75 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(10) show
1.000 setlinewidth
grestore
.02381 .283 m
.03006 .283 L
s
gsave
.01131 .283 -75 -9.5 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 19 translate 1 -1 scale
63.000 11.875 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(15) show
1.000 setlinewidth
grestore
.02381 .37243 m
.03006 .37243 L
s
gsave
.01131 .37243 -75 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(20) show
1.000 setlinewidth
grestore
.02381 .46186 m
.03006 .46186 L
s
gsave
.01131 .46186 -75 -9.5 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 19 translate 1 -1 scale
63.000 11.875 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(25) show
1.000 setlinewidth
grestore
.02381 .55129 m
.03006 .55129 L
s
gsave
.01131 .55129 -75 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(30) show
1.000 setlinewidth
grestore
.125 Mabswid
.02381 .0326 m
.02756 .0326 L
s
.02381 .05049 m
.02756 .05049 L
s
.02381 .06837 m
.02756 .06837 L
s
.02381 .08626 m
.02756 .08626 L
s
.02381 .12203 m
.02756 .12203 L
s
.02381 .13992 m
.02756 .13992 L
s
.02381 .1578 m
.02756 .1578 L
s
.02381 .17569 m
.02756 .17569 L
s
.02381 .21146 m
.02756 .21146 L
s
.02381 .22934 m
.02756 .22934 L
s
.02381 .24723 m
.02756 .24723 L
s
.02381 .26512 m
.02756 .26512 L
s
.02381 .30089 m
.02756 .30089 L
s
.02381 .31877 m
.02756 .31877 L
s
.02381 .33666 m
.02756 .33666 L
s
.02381 .35455 m
.02756 .35455 L
s
.02381 .39032 m
.02756 .39032 L
s
.02381 .4082 m
.02756 .4082 L
s
.02381 .42609 m
.02756 .42609 L
s
.02381 .44397 m
.02756 .44397 L
s
.02381 .47975 m
.02756 .47975 L
s
.02381 .49763 m
.02756 .49763 L
s
.02381 .51552 m
.02756 .51552 L
s
.02381 .5334 m
.02756 .5334 L
s
.02381 .56918 m
.02756 .56918 L
s
.02381 .58706 m
.02756 .58706 L
s
.02381 .60495 m
.02756 .60495 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .01472 m
.18254 .01734 L
.34127 .04932 L
.5 .13661 L
.65873 .26409 L
.81746 .42915 L
.97619 .60332 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40006`00012R000`400?l00000o`00003oo`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona
0?ooo`00AP3oool4000000@0oooo00<000000?ooo`3oool0100000040?ooo`@00000103oool40000
00@0oooo0`00000N0?ooo`@00000103oool00`000000oooo0?ooo`04000000@0oooo100000040?oo
o`D00000703oool4000000@0oooo00<000000?ooo`3oool0100000040?ooo`@00000103oool50000
00<0oooo0`00000N0?ooo`@00000103oool00`000000oooo0?ooo`04000000@0oooo100000030?oo
o`H000007@3oool4000000@0oooo00<000000?ooo`3oool0100000040?ooo`@000000`3oool60000
00<0oooo0`00000N0?ooo`@00000103oool00`000000oooo0?ooo`04000000@0oooo100000040?oo
o`@000001P3oool004D0oooo0P0000020?ooo`8000000`3oool010000000oooo0000000000020?oo
o`8000000P3oool200000080oooo0P0000020?ooo`8000000P3oool2000000<0oooo00@000000?oo
o`3oool00000703oool200000080oooo0P0000030?ooo`040000003oool0000000000080oooo0P00
00020?ooo`8000000P3oool2000000D0oooo00<000000?ooo`3oool06`3oool200000080oooo0P00
00030?ooo`040000003oool0000000000080oooo0P0000020?ooo`8000000P3oool2000000D0oooo
00<000000?ooo`3oool00`3oool010000000oooo0?ooo`00000L0?ooo`8000000P3oool2000000<0
oooo00@000000?ooo`00000000000P3oool200000080oooo0P0000020?ooo`8000000P3oool20000
00<0oooo00<000000?ooo`3oool06P3oool200000080oooo0P0000030?ooo`040000003oool00000
00000080oooo0P0000020?ooo`8000000P3oool200000080oooo0P0000030?ooo`050000003oool0
oooo0?ooo`0000000P3oool00`000000oooo0?ooo`0J0?ooo`8000000P3oool2000000<0oooo00@0
00000?ooo`00000000000P3oool200000080oooo0P0000020?ooo`8000000P3oool200000080oooo
0P0000050?ooo`00A@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<0
00000?ooo`3oool00P3oool010000000oooo0?ooo`0000040?ooo`040000003oool0oooo000000@0
oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo0080
oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo0000
00@0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo
0080oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo
000000@0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`070?ooo`030000003oool0
oooo01T0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003oool0
oooo0080oooo00@000000?ooo`3oool00000103oool01@000000oooo0?ooo`3oool000000200oooo
00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0080oooo
00@000000?ooo`3oool00000103oool01@000000oooo0?ooo`3oool0000000/0oooo00<000000?oo
o`3oool06@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?oo
o`3oool00P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00D0oooo00<00000
0?ooo`3oool00`3oool004D0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?oo
o`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103oool010000000oooo0?ooo`00
00040?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool06@3oool00`000000oooo0?oo
o`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool010000000oooo0?oo
o`0000040?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool06`3oool00`000000oooo
0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool010000000oooo
0?ooo`0000040?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool01`3oool00`000000
oooo0?ooo`0I0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`000000
oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool00P3oool00`00
0000oooo0?ooo`0M0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`00
0000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool00P3oool0
0`000000oooo0?ooo`080?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3oool00P3oool0
0`000000oooo0?ooo`030?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103o
ool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00<0oooo00150?ooo`030000003oool0
oooo0080oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`040000003oool0
oooo000000@0oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`040?ooo`800000
6`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0
0P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3o
ool06`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3o
ool00P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00<0oooo00<000000?oo
o`3oool01P3oool2000001/0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?oo
o`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`03
0?ooo`030000003oool0oooo01`0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`03
0?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103oool00`000000oooo0?oo
o`030?ooo`030000003oool0oooo00H0oooo0P00000K0?ooo`030000003oool0oooo0080oooo00<0
00000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo
00<000000?ooo`3oool0103oool00`000000oooo0?ooo`040?ooo`00A@3oool00`000000oooo0?oo
o`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool010000000oooo0?oo
o`0000040?ooo`040000003oool0oooo000000@0oooo00H000000?ooo`3oool0oooo0000003oool2
000001`0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003oool0
oooo0080oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`030?ooo`030000003o
ool0oooo01/0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003o
ool0oooo0080oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`030?ooo`030000
003oool0oooo00<0oooo00@000000?ooo`0000000000703oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool010000000oooo0?ooo`0000040?oo
o`030000003oool0oooo00<0oooo0P00000M0?ooo`030000003oool0oooo0080oooo00<000000?oo
o`3oool00`3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00<00000
0?ooo`3oool00`3oool2000000@0oooo00@000000?ooo`0000000000703oool00`000000oooo0?oo
o`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool010000000oooo0?oo
o`0000040?ooo`030000003oool0oooo0080oooo0P0000070?ooo`00A@3oool00`000000oooo0?oo
o`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool010000000oooo0?oo
o`0000040?ooo`040000003oool0oooo000000@0oooo00@000000?ooo`3oool0oooo0`00000M0?oo
o`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?oo
o`040000003oool0oooo000000@0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0K
0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`02
0?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?oo
o`030?ooo`<000007@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<0
00000?ooo`3oool00P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00@0oooo
00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo
00<000000?ooo`3oool00P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00@0
oooo00<000000?ooo`3oool00P3oool3000001d0oooo00<000000?ooo`3oool00P3oool00`000000
oooo0?ooo`030?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103oool00`00
0000oooo0?ooo`040?ooo`030000003oool0oooo00@0oooo00150?ooo`030000003oool0oooo0080
oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo0000
00@0oooo00@000000?ooo`3oool00000103oool010000000oooo0?ooo`3oool3000001d0oooo00<0
00000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0080oooo00@0
00000?ooo`3oool00000103oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo01/0oooo
00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0080oooo
00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00<0
oooo0`00000M0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`000000
oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool0103oool00`00
0000oooo0?ooo`0K0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`00
0000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool0103oool0
0`000000oooo0?ooo`020?ooo`<000007@3oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo00<0oooo00<000000?ooo`3oool00P3oool010000000oooo0?ooo`0000040?ooo`030000003o
ool0oooo00@0oooo00<000000?ooo`3oool0103oool004D0oooo00<000000?ooo`3oool00P3oool0
0`000000oooo0?ooo`030?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103o
ool010000000oooo0?ooo`0000040?ooo`050000003oool0oooo0?ooo`0000007`3oool00`000000
oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool010000000
oooo0?ooo`0000040?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool06`3oool00`00
0000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool01000
0000oooo0?ooo`0000040?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00`3oool0
0`000000oooo0?ooo`0M0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool0
0`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00@000000?ooo`3oool00000
0`3oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0
0`3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00@000000?ooo`3o
ool000000`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo01d0oooo00<000000?oo
o`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0080oooo00@000000?oo
o`3oool00000103oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00<0oooo000J
0?ooo`030000003oool0oooo02P0oooo0P0000020?ooo`8000001@3oool200000080oooo0P000002
0?ooo`8000000P3oool200000080oooo0P0000020?ooo`800000103oool3000001`0oooo0P000002
0?ooo`8000001@3oool200000080oooo0P0000020?ooo`8000000P3oool2000000<0oooo0`00000M
0?ooo`8000000P3oool2000000D0oooo0P0000020?ooo`8000000P3oool200000080oooo0P000003
0?ooo`<000001P3oool3000001`0oooo0P0000020?ooo`8000001@3oool200000080oooo0P000002
0?ooo`8000000P3oool200000080oooo0P0000000`3oool000000000000M0?ooo`8000000P3oool2
000000D0oooo0P0000020?ooo`8000000P3oool200000080oooo0P0000020?ooo`80000000<0oooo
0000000000001@3oool3000001`0oooo0P0000020?ooo`8000001@3oool200000080oooo0P000002
0?ooo`8000000P3oool200000080oooo0P0000020?ooo`8000001@3oool001X0oooo00<000000?oo
o`3oool0:@3oool4000000L0oooo100000040?ooo`@00000103oool4000000D0oooo1000000L0?oo
o`@000001`3oool4000000@0oooo100000060?ooo`030000003oool0oooo01`0oooo100000070?oo
o`@00000103oool4000000H0oooo00<000000?ooo`3oool0103oool4000001`0oooo100000070?oo
o`@00000103oool4000000@0oooo0`00000O0?ooo`@000001`3oool4000000@0oooo100000040?oo
o`<000001P3oool4000001`0oooo100000070?ooo`@00000103oool4000000@0oooo100000060?oo
o`006P3oool00`000000oooo0?ooo`3o0?oooi@0oooo000J0?ooo`030000003oool0oooo0?l0oooo
U03oool001X0oooo00<000000?ooo`3oool0o`3ooonD0?ooo`006P3oool00`000000oooo0?ooo`3o
0?oooi@0oooo000@0?ooool00000UP00000;0?ooo`006P3oool00`000000oooo0?ooo`090?ooo`03
0000003oool0oooo00X0oooo00<000000?ooo`3oool01@3ooolR000000X0oooo00<000000?ooo`3o
ool02@3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool02P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool02@3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool02P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool02@3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool02P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool02@3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool02P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool04P3oool001X0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`0:0?ooo`030000
003oool0oooo00X0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0:0?ooo`030000
003oool0oooo00D000001@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00X0oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00X0oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00X0oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00X0oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0B0?ooo`006P3oool00`000000oooo0?oo
o`0m0?ooo`030000003oool0oooo00D0oooo1@00000c0?ooo`030000003oool0oooo03d0oooo00<0
00000?ooo`3oool0?@3oool00`000000oooo0?ooo`0m0?ooo`030000003oool0oooo03h0oooo00<0
00000?ooo`3oool04P3oool001X0oooo00<000000?ooo`3oool0BP3oool500000?l0ooooA@3oool0
01X0oooo00<000000?ooo`3oool0C`3oool500000?l0oooo@03oool001X0oooo00<000000?ooo`3o
ool0E03oool500000?l0oooo>`3oool001X0oooo00<000000?ooo`3oool0F@3oool500000?l0oooo
=P3oool001X0oooo0P00001O0?ooo`@00000o`3ooolb0?ooo`006P3oool00`000000oooo0?ooo`1R
0?ooo`D00000o`3oool]0?ooo`006P3oool00`000000oooo0?ooo`1W0?ooo`D00000o`3ooolX0?oo
o`006P3oool00`000000oooo0?ooo`1/0?ooo`D00000o`3ooolS0?ooo`006P3oool00`000000oooo
0?ooo`1a0?ooo`D00000o`3ooolN0?ooo`006P3oool00`000000oooo0?ooo`1f0?ooo`D00000o`3o
oolI0?ooo`006P3oool00`000000oooo0?ooo`1k0?ooo`<00000o`3ooolF0?ooo`006P3oool20000
07l0oooo0P00003o0?oooa@0oooo000J0?ooo`030000003oool0oooo0800oooo0P00003o0?oooa80
oooo000J0?ooo`030000003oool0oooo0880oooo0P00003o0?oooa00oooo000J0?ooo`030000003o
ool0oooo08@0oooo0P00003o0?ooo`h0oooo000J0?ooo`030000003oool0oooo08H0oooo00<00000
0?ooo`3oool0o`3oool;0?ooo`006P3oool00`000000oooo0?ooo`270?ooo`800000o`3oool;0?oo
o`006P3oool00`000000oooo0?ooo`290?ooo`800000o`3oool90?ooo`006P3oool2000008`0oooo
0P00003o0?ooo`L0oooo000J0?ooo`030000003oool0oooo08d0oooo00<000000?ooo`3oool0o`3o
ool40?ooo`006P3oool00`000000oooo0?ooo`2>0?ooo`800000o`3oool40?ooo`006P3oool00`00
0000oooo0?ooo`2@0?ooo`800000o`3oool20?ooo`006P3oool00`000000oooo0?ooo`2B0?ooo`80
0000o`3oool001X0oooo00<000000?ooo`3oool0U03oool200000?d0oooo000J0?ooo`030000003o
ool0oooo09H0oooo00<000000?ooo`3oool0nP3oool001X0oooo0P00002H0?ooo`800000nP3oool0
01X0oooo00<000000?ooo`3oool0V@3oool200000?P0oooo000J0?ooo`030000003oool0oooo09/0
oooo0P00003f0?ooo`006P3oool00`000000oooo0?ooo`2M0?ooo`030000003oool0oooo0?<0oooo
000J0?ooo`030000003oool0oooo09h0oooo0P00003c0?ooo`002`3oool3000000`0oooo00<00000
0?ooo`3oool0X03oool200000?40oooo000;0?ooo`040000003oool0oooo000000/0oooo00<00000
0?ooo`3oool0XP3oool200000>l0oooo000?0?ooo`030000003oool0oooo00P0oooo00<000000?oo
o`3oool0Y03oool200000>d0oooo000?0?ooo`030000003oool0oooo00P0oooo0`00002V0?ooo`03
0000003oool0oooo0>X0oooo000>0?ooo`8000002P3oool00`000000oooo0?ooo`2W0?ooo`800000
jP3oool000/0oooo00@000000?ooo`00000000002`3oool00`000000oooo0?ooo`2Y0?ooo`800000
j03oool000/0oooo0`00000<0?ooo`030000003oool0oooo0:/0oooo0P00003V0?ooo`002`3oool3
000000`0oooo00<000000?ooo`3oool0[@3oool00`000000oooo0?ooo`3S0?ooo`002`3oool00`00
0000oooo0?ooo`0<0?ooo`030000003oool0oooo0:h0oooo0P00003S0?ooo`00303oool3000000/0
oooo00<000000?ooo`3oool0/03oool200000>40oooo000<0?ooo`@000002P3oool200000;<0oooo
0P00003O0?ooo`006P3oool00`000000oooo0?ooo`2d0?ooo`800000g@3oool001X0oooo00<00000
0?ooo`3oool0]P3oool00`000000oooo0?ooo`3J0?ooo`006P3oool00`000000oooo0?ooo`2g0?oo
o`800000fP3oool001X0oooo00<000000?ooo`3oool0^@3oool200000=P0oooo000J0?ooo`030000
003oool0oooo0;/0oooo0P00003F0?ooo`006P3oool00`000000oooo0?ooo`2m0?ooo`030000003o
ool0oooo0=<0oooo000J0?ooo`800000_`3oool00`000000oooo0?ooo`3B0?ooo`006P3oool00`00
0000oooo0?ooo`2o0?ooo`800000dP3oool001X0oooo00<000000?ooo`3oool0`@3oool00`000000
oooo0?ooo`3?0?ooo`006P3oool00`000000oooo0?ooo`320?ooo`030000003oool0oooo0<h0oooo
000J0?ooo`030000003oool0oooo0<<0oooo00<000000?ooo`3oool0c@3oool001X0oooo00<00000
0?ooo`3oool0a03oool200000<d0oooo000J0?ooo`030000003oool0oooo0<H0oooo00<000000?oo
o`3oool0bP3oool001X0oooo0P0000380?ooo`030000003oool0oooo0<T0oooo000J0?ooo`030000
003oool0oooo0<P0oooo00<000000?ooo`3oool0b03oool001X0oooo00<000000?ooo`3oool0b@3o
ool200000<P0oooo000J0?ooo`030000003oool0oooo0</0oooo00<000000?ooo`3oool0a@3oool0
01X0oooo00<000000?ooo`3oool0c03oool00`000000oooo0?ooo`340?ooo`006P3oool00`000000
oooo0?ooo`3=0?ooo`030000003oool0oooo0<<0oooo000J0?ooo`030000003oool0oooo0<h0oooo
0P0000330?ooo`006P3oool200000=40oooo00<000000?ooo`3oool0`03oool001X0oooo00<00000
0?ooo`3oool0d@3oool00`000000oooo0?ooo`2o0?ooo`006P3oool00`000000oooo0?ooo`3B0?oo
o`030000003oool0oooo0;h0oooo000J0?ooo`030000003oool0oooo0=<0oooo0P00002n0?ooo`00
6P3oool00`000000oooo0?ooo`3E0?ooo`030000003oool0oooo0;/0oooo00040?ooo`D000000`3o
ool4000000X0oooo00<000000?ooo`3oool0eP3oool00`000000oooo0?ooo`2j0?ooo`001P3oool0
0`000000oooo0?ooo`020?ooo`8000000P3oool2000000T0oooo00<000000?ooo`3oool0e`3oool0
0`000000oooo0?ooo`2i0?ooo`001P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo
0080oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`3H0?ooo`800000^@3oool000H0
oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00L0
oooo0`00003J0?ooo`030000003oool0oooo0;H0oooo00060?ooo`030000003oool0oooo0080oooo
00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo0=/0oooo
00<000000?ooo`3oool0]@3oool000H0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?oo
o`020?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0g03oool200000;D0oooo0006
0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`07
0?ooo`030000003oool0oooo0=h0oooo00<000000?ooo`3oool0/P3oool000H0oooo00<000000?oo
o`3oool00P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00L0oooo00<000000?oo
o`3oool0g`3oool00`000000oooo0?ooo`2a0?ooo`001P3oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo0080oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`3P0?ooo`03
0000003oool0oooo0;00oooo00040?ooo`<00000103oool200000080oooo0P0000090?ooo`030000
003oool0oooo0>40oooo0P00002`0?ooo`001P3oool00`000000oooo0?ooo`030?ooo`@000002P3o
ool200000>@0oooo00<000000?ooo`3oool0[@3oool001X0oooo00<000000?ooo`3oool0i03oool0
0`000000oooo0?ooo`2/0?ooo`006P3oool00`000000oooo0?ooo`3U0?ooo`030000003oool0oooo
0:/0oooo000J0?ooo`030000003oool0oooo0>H0oooo0P00002[0?ooo`006P3oool00`000000oooo
0?ooo`3X0?ooo`030000003oool0oooo0:P0oooo000J0?ooo`030000003oool0oooo0>T0oooo00<0
00000?ooo`3oool0Y`3oool001X0oooo00<000000?ooo`3oool0jP3oool00`000000oooo0?ooo`2V
0?ooo`006P3oool200000>`0oooo0P00002V0?ooo`006P3oool00`000000oooo0?ooo`3]0?ooo`03
0000003oool0oooo0:<0oooo000J0?ooo`030000003oool0oooo0>h0oooo00<000000?ooo`3oool0
XP3oool001X0oooo00<000000?ooo`3oool0k`3oool00`000000oooo0?ooo`2Q0?ooo`006P3oool0
0`000000oooo0?ooo`3`0?ooo`800000X@3oool001X0oooo00<000000?ooo`3oool0lP3oool00`00
0000oooo0?ooo`2N0?ooo`006P3oool00`000000oooo0?ooo`3c0?ooo`030000003oool0oooo09d0
oooo000J0?ooo`800000m@3oool00`000000oooo0?ooo`2L0?ooo`006P3oool00`000000oooo0?oo
o`3e0?ooo`800000W03oool001X0oooo00<000000?ooo`3oool0m`3oool00`000000oooo0?ooo`2I
0?ooo`006P3oool00`000000oooo0?ooo`3h0?ooo`030000003oool0oooo09P0oooo000J0?ooo`03
0000003oool0oooo0?T0oooo00<000000?ooo`3oool0U`3oool001X0oooo00<000000?ooo`3oool0
nP3oool2000009L0oooo000J0?ooo`030000003oool0oooo0?`0oooo00<000000?ooo`3oool0U03o
ool001X0oooo00<000000?ooo`3oool0o@3oool00`000000oooo0?ooo`2C0?ooo`006P3oool20000
0?l0oooo00<000000?ooo`3oool0TP3oool001X0oooo00<000000?ooo`3oool0o`3oool00`000000
oooo0?ooo`2A0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooo`40oooo00<000000?ooo`3oool0
T03oool001X0oooo00<000000?ooo`3oool0o`3oool20?ooo`030000003oool0oooo08l0oooo0004
0?ooo`D000000`3oool3000000/0oooo00<000000?ooo`3oool0o`3oool30?ooo`030000003oool0
oooo08h0oooo00060?ooo`030000003oool0oooo00<0oooo00@000000?ooo`3oool000002P3oool0
0`000000oooo0?ooo`3o0?ooo`@0oooo00<000000?ooo`3oool0S@3oool000H0oooo00<000000?oo
o`3oool01`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo0?l0oooo1@3oool00`00
0000oooo0?ooo`2<0?ooo`001P3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0
oooo0`00003o0?ooo`H0oooo00<000000?ooo`3oool0R`3oool000H0oooo00<000000?ooo`3oool0
1P3oool2000000T0oooo00<000000?ooo`3oool0o`3oool70?ooo`030000003oool0oooo08X0oooo
00060?ooo`030000003oool0oooo00<0oooo00@000000?ooo`00000000002P3oool00`000000oooo
0?ooo`3o0?ooo`P0oooo00<000000?ooo`3oool0R@3oool000H0oooo00<000000?ooo`3oool00`3o
ool3000000/0oooo00<000000?ooo`3oool0o`3oool90?ooo`030000003oool0oooo08P0oooo0006
0?ooo`030000003oool0oooo00<0oooo0`00000;0?ooo`030000003oool0oooo0?l0oooo2@3oool0
0`000000oooo0?ooo`280?ooo`001P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo
00/0oooo00<000000?ooo`3oool0o`3oool:0?ooo`030000003oool0oooo08L0oooo00040?ooo`<0
00001P3oool3000000X0oooo00<000000?ooo`3oool0o`3oool;0?ooo`030000003oool0oooo08H0
oooo00060?ooo`030000003oool0oooo00@0oooo100000090?ooo`800000o`3oool=0?ooo`030000
003oool0oooo08D0oooo000J0?ooo`030000003oool0oooo0?l0oooo3@3oool00`000000oooo0?oo
o`240?ooo`006P3oool00`000000oooo0?ooo`3o0?ooo`h0oooo00<000000?ooo`3oool0P`3oool0
01X0oooo00<000000?ooo`3oool0o`3oool?0?ooo`030000003oool0oooo0880oooo000J0?ooo`03
0000003oool0oooo0?l0oooo403oool00`000000oooo0?ooo`210?ooo`006P3oool00`000000oooo
0?ooo`3o0?oooa40oooo00<000000?ooo`3oool0P03oool001X0oooo00<000000?ooo`3oool0o`3o
oolB0?ooo`030000003oool0oooo07l0oooo000J0?ooo`800000o`3ooolD0?ooo`030000003oool0
oooo07h0oooo000J0?ooo`030000003oool0oooo0?l0oooo503oool00`000000oooo0?ooo`1m0?oo
o`006P3oool00`000000oooo0?ooo`3o0?oooaD0oooo00<000000?ooo`3oool0O03oool001X0oooo
00<000000?ooo`3oool0o`3ooolF0?ooo`030000003oool0oooo07/0oooo000J0?ooo`030000003o
ool0oooo0?l0oooo5`3oool00`000000oooo0?ooo`1j0?ooo`006P3oool00`000000oooo0?ooo`3o
0?oooaP0oooo00<000000?ooo`3oool0N@3oool001X0oooo00<000000?ooo`3oool0o`3ooolI0?oo
o`030000003oool0oooo07P0oooo000J0?ooo`030000003oool0oooo0?l0oooo6P3oool00`000000
oooo0?ooo`1g0?ooo`006P3oool200000?l0oooo703oool00`000000oooo0?ooo`1f0?ooo`006P3o
ool00`000000oooo0?ooo`3o0?oooa`0oooo00<000000?ooo`3oool0M@3oool001X0oooo00<00000
0?ooo`3oool0o`3ooolM0?ooo`030000003oool0oooo07@0oooo000J0?ooo`030000003oool0oooo
0?l0oooo7P3oool00`000000oooo0?ooo`1c0?ooo`006P3oool00`000000oooo0?ooo`3o0?oooah0
oooo00<000000?ooo`3oool0L`3oool001X0oooo00<000000?ooo`3oool0o`3ooolO0?ooo`030000
003oool0oooo0780oooo000J0?ooo`030000003oool0oooo0?l0oooo803oool00`000000oooo0?oo
o`1a0?ooo`006P3oool200000?l0oooo8P3oool00`000000oooo0?ooo`1`0?ooo`006P3oool00`00
0000oooo0?ooo`3o0?ooob80oooo00<000000?ooo`3oool0K`3oool001X0oooo00<000000?ooo`3o
ool0o`3ooolS0?ooo`030000003oool0oooo06h0oooo000J0?ooo`030000003oool0oooo0?l0oooo
903oool00`000000oooo0?ooo`1]0?ooo`000`3oool6000000<0oooo1000000:0?ooo`030000003o
ool0oooo0?l0oooo9@3oool00`000000oooo0?ooo`1/0?ooo`000`3oool2000000<0oooo00<00000
0?ooo`3oool00P0000020?ooo`8000002@3oool00`000000oooo0?ooo`3o0?ooobH0oooo00<00000
0?ooo`3oool0J`3oool000@0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`020?oo
o`030000003oool0oooo00L0oooo00<000000?ooo`3oool0o`3ooolW0?ooo`030000003oool0oooo
06X0oooo00050?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool00`000000
oooo0?ooo`070?ooo`<00000o`3ooolX0?ooo`030000003oool0oooo06T0oooo00060?ooo`030000
003oool0oooo0080oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`070?ooo`030000
003oool0oooo0?l0oooo:@3oool00`000000oooo0?ooo`1X0?ooo`001P3oool2000000<0oooo00<0
00000?ooo`3oool00P3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo0?l0oooo:P3o
ool00`000000oooo0?ooo`1W0?ooo`001`3oool01@000000oooo0?ooo`3oool0000000@0oooo00<0
00000?ooo`3oool01`3oool00`000000oooo0?ooo`3o0?ooob/0oooo00<000000?ooo`3oool0IP3o
ool000L0oooo00D000000?ooo`3oool0oooo000000040?ooo`030000003oool0oooo00L0oooo00<0
00000?ooo`3oool0o`3oool/0?ooo`030000003oool0oooo06D0oooo00030?ooo`050000003oool0
oooo0?ooo`0000000`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00L0oooo00<0
00000?ooo`3oool0o`3oool]0?ooo`030000003oool0oooo06@0oooo00030?ooo`80000000<0oooo
0000000000000`3oool200000080oooo0P0000090?ooo`030000003oool0oooo0?l0oooo;P3oool0
0`000000oooo0?ooo`1S0?ooo`00103oool3000000D0oooo1000000:0?ooo`800000o`3oool`0?oo
o`030000003oool0oooo0680oooo000J0?ooo`030000003oool0oooo0?l0oooo<03oool00`000000
oooo0?ooo`1Q0?ooo`006P3oool00`000000oooo0?ooo`3o0?oooc40oooo00<000000?ooo`3oool0
H03oool001X0oooo00<000000?ooo`3oool0o`3ooolb0?ooo`030000003oool0oooo05l0oooo000J
0?ooo`030000003oool0oooo0?l0oooo<`3oool00`000000oooo0?ooo`1N0?ooo`006P3oool00`00
0000oooo0?ooo`3o0?oooc<0oooo00<000000?ooo`3oool0GP3oool001X0oooo00<000000?ooo`3o
ool0o`3ooold0?ooo`030000003oool0oooo05d0oooo000J0?ooo`800000o`3ooolf0?ooo`030000
003oool0oooo05`0oooo000J0?ooo`030000003oool0oooo0?l0oooo=P3oool00`000000oooo0?oo
o`1K0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooocL0oooo00<000000?ooo`3oool0FP3oool0
01X0oooo00<000000?ooo`3oool0o`3ooolh0?ooo`030000003oool0oooo05T0oooo000J0?ooo`03
0000003oool0oooo0?l0oooo>@3oool00`000000oooo0?ooo`1H0?ooo`006P3oool00`000000oooo
0?ooo`3o0?ooocX0oooo00<000000?ooo`3oool0E`3oool001X0oooo00<000000?ooo`3oool0o`3o
oolk0?ooo`030000003oool0oooo05H0oooo000J0?ooo`030000003oool0oooo0?l0oooo?03oool0
0`000000oooo0?ooo`1E0?ooo`006P3oool200000?l0oooo?P3oool00`000000oooo0?ooo`1D0?oo
o`006P3oool00`000000oooo0?ooo`3o0?oooch0oooo00<000000?ooo`3oool0D`3oool001X0oooo
00<000000?ooo`3oool0o`3ooolo0?ooo`030000003oool0oooo0580oooo000J0?ooo`030000003o
ool0oooo0?l0oooo@03oool00`000000oooo0?ooo`1A0?ooo`006P3oool00`000000oooo0?ooo`3o
0?oood40oooo00<000000?ooo`3oool0D03oool001X0oooo00<000000?ooo`3oool0o`3ooom20?oo
o`030000003oool0oooo04l0oooo000J0?ooo`030000003oool0oooo0?l0oooo@`3oool00`000000
oooo0?ooo`1>0?ooo`006P3oool200000?l0ooooA@3oool00`000000oooo0?ooo`1=0?ooo`006P3o
ool00`000000oooo0?ooo`3o0?ooodD0oooo00<000000?ooo`3oool0C03oool001X0oooo00<00000
0?ooo`3oool0o`3ooom50?ooo`030000003oool0oooo04`0oooo000J0?ooo`030000003oool0oooo
0?l0ooooAP3oool00`000000oooo0?ooo`1;0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooodL0
oooo00<000000?ooo`3oool0BP3oool000<0oooo1P0000030?ooo`<000002`3oool00`000000oooo
0?ooo`3o0?ooodP0oooo00<000000?ooo`3oool0B@3oool000<0oooo0P0000030?ooo`050000003o
ool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo0?l0oooo
B@3oool00`000000oooo0?ooo`180?ooo`00103oool00`000000oooo0?ooo`090?ooo`030000003o
ool0oooo00L0oooo0`00003o0?ooodX0oooo00<000000?ooo`3oool0A`3oool000D0oooo00<00000
0?ooo`3oool0203oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo0?l0ooooB`3oool0
0`000000oooo0?ooo`160?ooo`001P3oool00`000000oooo0?ooo`060?ooo`8000002@3oool00`00
0000oooo0?ooo`3o0?oood`0oooo00<000000?ooo`3oool0A@3oool000H0oooo0P0000040?ooo`04
0000003oool00000000000X0oooo00<000000?ooo`3oool0o`3ooom=0?ooo`030000003oool0oooo
04@0oooo00070?ooo`030000003oool0oooo0080oooo0`00000;0?ooo`030000003oool0oooo0?l0
ooooCP3oool00`000000oooo0?ooo`130?ooo`001`3oool00`000000oooo0?ooo`020?ooo`<00000
2`3oool00`000000oooo0?ooo`3o0?ooodl0oooo00<000000?ooo`3oool0@P3oool000<0oooo00D0
00000?ooo`3oool0oooo000000040?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0
o`3ooom@0?ooo`030000003oool0oooo0440oooo00030?ooo`80000000<0oooo0000000000001@3o
ool3000000X0oooo0P00003o0?oooe80oooo00<000000?ooo`3oool0@03oool000@0oooo0`000006
0?ooo`@000002@3oool00`000000oooo0?ooo`3o0?oooe80oooo00<000000?ooo`3oool0?`3oool0
01X0oooo00<000000?ooo`3oool0o`3ooomB0?ooo`030000003oool0oooo03l0oooo000J0?ooo`03
0000003oool0oooo0?l0ooooD`3oool00`000000oooo0?ooo`0n0?ooo`006P3oool00`000000oooo
0?ooo`3o0?oooe@0oooo00<000000?ooo`3oool0?@3oool001X0oooo00<000000?ooo`3oool0o`3o
oomE0?ooo`030000003oool0oooo03`0oooo000J0?ooo`030000003oool0oooo0?l0ooooEP3oool0
0`000000oooo0?ooo`0k0?ooo`006P3oool00`000000oooo0?ooo`3o0?oooeL0oooo00<000000?oo
o`3oool0>P3oool001X0oooo0P00003o0?oooeT0oooo00<000000?ooo`3oool0>@3oool001X0oooo
00<000000?ooo`3oool0o`3ooomI0?ooo`030000003oool0oooo03P0oooo000J0?ooo`030000003o
ool0oooo0?l0ooooFP3oool00`000000oooo0?ooo`0g0?ooo`006P3oool00`000000oooo0?ooo`3o
0?oooe/0oooo00<000000?ooo`3oool0=P3oool001X0oooo00<000000?ooo`3oool0o`3ooomL0?oo
o`030000003oool0oooo03D0oooo000J0?ooo`030000003oool0oooo0?l0ooooG@3oool00`000000
oooo0?ooo`0d0?ooo`006P3oool00`000000oooo0?ooo`3o0?oooeh0oooo00<000000?ooo`3oool0
<`3oool001X0oooo0P00003o0?ooof00oooo00<000000?ooo`3oool0<P3oool001X0oooo00<00000
0?ooo`3oool0o`3ooomO0?ooo`030000003oool0oooo0380oooo000J0?ooo`030000003oool0oooo
0?l0ooooH03oool00`000000oooo0?ooo`0a0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooof40
oooo00<000000?ooo`3oool0<03oool001X0oooo00<000000?ooo`3oool0o`3ooomR0?ooo`030000
003oool0oooo02l0oooo000J0?ooo`030000003oool0oooo0?l0ooooH`3oool00`000000oooo0?oo
o`0^0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooof@0oooo00<000000?ooo`3oool0;@3oool0
01X0oooo0P00003o0?ooofH0oooo00<000000?ooo`3oool0;03oool001X0oooo00<000000?ooo`3o
ool0o`3ooomV0?ooo`030000003oool0oooo02/0oooo000J0?ooo`030000003oool0oooo0?l0oooo
I`3oool00`000000oooo0?ooo`0Z0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooofP0oooo00<0
00000?ooo`3oool0:@3oool001X0oooo00<000000?ooo`3oool0o`3ooomY0?ooo`030000003oool0
oooo02P0oooo00040?ooo`@00000103oool4000000X0oooo00<000000?ooo`3oool0o`3ooomZ0?oo
o`030000003oool0oooo02L0oooo00030?ooo`8000000P3oool200000080oooo0P0000020?ooo`80
00002@3oool00`000000oooo0?ooo`3o0?ooof/0oooo00<000000?ooo`3oool09P3oool000P0oooo
00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`070?ooo`<00000o`3ooom/0?ooo`03
0000003oool0oooo02D0oooo00080?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3o
ool01`3oool00`000000oooo0?ooo`3o0?ooof`0oooo00<000000?ooo`3oool09@3oool000L0oooo
00D000000?ooo`3oool0oooo000000040?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3o
ool0o`3ooom]0?ooo`030000003oool0oooo02@0oooo00050?ooo`800000103oool00`000000oooo
0?ooo`020?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0o`3ooom^0?ooo`030000
003oool0oooo02<0oooo00070?ooo`050000003oool0oooo0?ooo`000000103oool00`000000oooo
0?ooo`070?ooo`030000003oool0oooo0?l0ooooK`3oool00`000000oooo0?ooo`0R0?ooo`001`3o
ool01@000000oooo0?ooo`3oool0000000@0oooo00<000000?ooo`3oool01`3oool00`000000oooo
0?ooo`3o0?ooog00oooo00<000000?ooo`3oool08@3oool000<0oooo00<000000?ooo`3oool00P3o
ool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0
o`3oooma0?ooo`030000003oool0oooo0200oooo00030?ooo`8000000P3oool200000080oooo0P00
00020?ooo`8000002@3oool00`000000oooo0?ooo`3o0?ooog80oooo00<000000?ooo`3oool07`3o
ool000@0oooo100000040?ooo`@000002P3oool200000?l0ooooM03oool00`000000oooo0?ooo`0N
0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooog@0oooo00<000000?ooo`3oool07@3oool001X0
oooo00<000000?ooo`3oool0o`3ooome0?ooo`030000003oool0oooo01`0oooo000J0?ooo`030000
003oool0oooo0?l0ooooMP3oool00`000000oooo0?ooo`0K0?ooo`006P3oool00`000000oooo0?oo
o`3o0?ooogL0oooo00<000000?ooo`3oool06P3oool001X0oooo00<000000?ooo`3oool0o`3ooomh
0?ooo`030000003oool0oooo01T0oooo000J0?ooo`030000003oool0oooo0?l0ooooN@3oool00`00
0000oooo0?ooo`0H0?ooo`006P3oool200000?l0ooooNP3oool00`000000oooo0?ooo`0H0?ooo`00
6P3oool00`000000oooo0?ooo`3o0?ooogX0oooo00<000000?ooo`3oool05`3oool001X0oooo00<0
00000?ooo`3oool0o`3ooomk0?ooo`030000003oool0oooo01H0oooo000J0?ooo`030000003oool0
oooo0?l0ooooO03oool00`000000oooo0?ooo`0E0?ooo`006P3oool00`000000oooo0?ooo`3o0?oo
ogd0oooo00<000000?ooo`3oool0503oool001X0oooo00<000000?ooo`3oool0o`3ooomn0?ooo`03
0000003oool0oooo01<0oooo000J0?ooo`030000003oool0oooo0?l0ooooO`3oool00`000000oooo
0?ooo`0B0?ooo`006P3oool200000?l0ooooU@3oool001X0oooo00<000000?ooo`3oool0o`3ooonD
0?ooo`006P3oool00`000000oooo0?ooo`3o0?oooi@0oooo000J0?ooo`030000003oool0oooo0?l0
ooooU03oool001X0oooo00<000000?ooo`3oool0o`3ooonD0?ooo`006P3oool00`000000oooo0?oo
o`3o0?oooi@0oooo0000\
\>"],
  ImageRangeCache->{{{0, 431}, {265.875, 0}} -> {-0.000202997, -3.00723, \
1.16863*^-5, 0.207423}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[TextData[{
  "Now we can easily obtain the sensitivity to ",
  Cell[BoxData[
      \(TraditionalForm\`\(sin\^2\)(2  \[Theta]\_13)\)]],
  " at the 3\[Sigma] confidence level:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Sensitivity\  = \ 
      x\  /. \ FindRoot[\(Interpolation[res]\)[x] \[Equal] 
            9, {x, {0.001, 0.0015}}]\)], "Input"],

Cell[BoxData[
    \(0.001670458125038562`\)], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  "Finding degenerate solutions: ",
  StyleBox["ChiAll",
    FontFamily->"Courier"]
}], "Section"],

Cell[TextData[{
  "In the last section, one parameter (",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  " or \[Delta]) was kept fixed and the ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  " was minimized with respect to all the other parameter values. In this \
section, we introduce ",
  StyleBox["ChiAll",
    FontFamily->"Courier"],
  ", which minimizes over ",
  StyleBox["all",
    FontSlant->"Italic"],
  " parameters. This function is especially used to find degenerate solutions \
with some input expert knowledge from the respective papers (e.g., \
hep-ph/0112119). After setting some starting values within ",
  StyleBox["ChiAll",
    FontFamily->"Courier"],
  ", it runs into the local minimum in the direction of the strongiest \
gradient. Thus, a fortunate topology assumed, knowing the",
  StyleBox[" approximate",
    FontSlant->"Italic"],
  " position of the degeneracy, such as from analytical approximations at the \
peak of the spectrum, allows us to find the ",
  StyleBox["exact",
    FontSlant->"Italic"],
  " position with ",
  StyleBox["ChiAll",
    FontFamily->"Courier"],
  ". This knowledge can then be used for further evaluations."
}], "Text"],

Cell[TextData[{
  StyleBox["ChiAll",
    FontFamily->"Courier"],
  " requires the same preparations as the other minimziers in the last \
section:"
}], "Text"],

Cell[BoxData[{
    \(\(SetVacuumParameters[N[9999], N[ArcSin[Sqrt[0.01]]/2], 
        N[\[Pi]/4 - 0.2], N[\(-\[Pi]\)/4]];\)\), "\[IndentingNewLine]", 
    \(\(SetMasses[N[RescaledSMD], 
        N[3.0*10^\(-3\)]];\)\), "\[IndentingNewLine]", 
    \(\(SetDensity[DENSITY];\)\), "\[IndentingNewLine]", 
    \(\(SetRates[];\)\), "\[IndentingNewLine]", 
    \(\(SetInputErrors[N[10], N[10], N[10], N[RescaledSMD\ 0.15], N[1], 
        N[DENSITY*0.05]];\)\), "\[IndentingNewLine]", 
    \(\(SetStartingValues[ArcSin[Sqrt[0.01]]/2, N[\[Pi]/4 - 0.2], 
        N[\(-\[Pi]\)/4], N[RescaledSMD], N[3.0*10^\(-3\)], 
        DENSITY];\)\)}], "Input"],

Cell[TextData[{
  "Note that we used ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23 = \[Pi]/4 - 0.2\)]],
  " and \[Delta]=\[Pi]/4 (sign change because of \[Delta]-big!) here, since \
otherwise we couldn't observe all degeneracies."
}], "Text"],

Cell[TextData[{
  "The following function call demonstrates how to find the sgn(",
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_31\%2\),
        "Text",
        FontFamily->"Times",
        FontWeight->"Plain"]],
    FontWeight->"Bold"],
  ") degeneracy with setting the starting values at the best-fit values with \
the sign of ",
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_31\%2\),
        "Text",
        FontFamily->"Times",
        FontWeight->"Plain"]],
    FontWeight->"Bold"],
  "inverted, using the fact that the degenerate solution essentially close to \
the best-fit point except from the \[Delta]-value.  ",
  StyleBox["ChiAll",
    FontFamily->"Courier"],
  " requires the parameter list ",
  StyleBox["{Log[10,",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\(sin\^2\)(2  \[Theta]\_13)\)],
    FontWeight->"Bold"],
  StyleBox["], ",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)],
    FontWeight->"Bold"],
  StyleBox[", \[Delta], ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_21\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_31\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", \[Rho]} ",
    FontWeight->"Bold"],
  "as the starting vector for the minimizor",
  ":"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ChiAll[{Log[10, 0.01], \[Pi]/4 - 0.2, \(-\[Pi]\)/4, 
          RescaledSMD, \(-3\)*10^\(-3\), DENSITY} // N]\)], "Input"],

Cell[BoxData[
    \({31.5903857632362`, \(-1.9349139770429056`\), 
      0.5861877681682914`, \(-1.7159860262162938`\), 
      0.000049935156689806985`, \(-0.003040710417285849`\), 
      3.2925766660550564`, 1335.`}\)], "Output"]
}, Open  ]],

Cell[TextData[{
  "The result again comes as vector of the form ",
  StyleBox["{",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)],
    FontWeight->"Bold"],
  StyleBox[",",
    FontWeight->"Bold"],
  Cell[BoxData[
      FormBox[
        RowBox[{" ", 
          RowBox[{
            StyleBox["Log",
              FontWeight->"Bold"], 
            StyleBox["[",
              FontWeight->"Bold"], 
            RowBox[{
              StyleBox["10",
                FontWeight->"Bold"], 
              StyleBox[",",
                FontWeight->"Bold"], 
              FormBox[\(\(sin\^2\)(2  \[Theta]\_13)\),
                "TraditionalForm"]}], 
            StyleBox["]",
              FontWeight->"Bold"]}]}], TraditionalForm]],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)],
    FontWeight->"Bold"],
  StyleBox[" \[Delta], ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_21\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_31\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", \[Rho], Iterations}",
    FontWeight->"Bold"],
  ". In this case, the ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "-",
  "value tells us that the degeneracy will not be observable at the 3\[Sigma] \
level with the neutrino factory chosen."
}], "Text"],

Cell[TextData[{
  "Similarly, we can try to find the (",
  Cell[BoxData[
      FormBox[
        StyleBox[\(\[Theta]\_23\),
          FontWeight->"Plain"], TraditionalForm]],
    FontWeight->"Bold"],
  ", \[Pi]/2-",
  Cell[BoxData[
      FormBox[
        StyleBox[\(\[Theta]\_23\),
          FontWeight->"Plain"], TraditionalForm]],
    FontWeight->"Bold"],
  ") degeneracy using an estimated starting value of 1.0 for ",
  Cell[BoxData[
      FormBox[
        StyleBox[\(\[Theta]\_23\),
          FontWeight->"Plain"], TraditionalForm]],
    FontWeight->"Bold"],
  ":"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(SetVacuumParameters[N[9999], N[ArcSin[Sqrt[0.01]]/2], 
        N[\[Pi]/4 - 0.2], N[\(-\[Pi]\)/4]];\)\), "\[IndentingNewLine]", 
    \(\(SetMasses[N[RescaledSMD], 
        N[3.0*10^\(-3\)]];\)\), "\[IndentingNewLine]", 
    \(\(SetDensity[DENSITY];\)\), "\[IndentingNewLine]", 
    \(\(SetRates[];\)\), "\[IndentingNewLine]", 
    \(\(SetInputErrors[N[10], N[10], N[10], N[RescaledSMD\ 0.15], N[1], 
        N[DENSITY*0.05]];\)\), "\[IndentingNewLine]", 
    \(\(\(SetStartingValues[ArcSin[Sqrt[0.01]]/2, N[\[Pi]/4 - 0.2], 
        N[\(-\[Pi]\)/4], N[RescaledSMD], N[3.0*10^\(-3\)], 
        DENSITY];\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(deg\  = 
      ChiAll[{Log[10, 0.01], 1.0, \(-\[Pi]\)/4, RescaledSMD, 3*10^\(-3\), 
            DENSITY} // N]\)}], "Input"],

Cell[BoxData[
    \({0.019773438847506767`, \(-2.309053605725235`\), 
      0.9881268843549805`, \(-0.8822262397836624`\), 0.00004105611296040998`, 
      0.003002125969547311`, 3.4999569653071405`, 1491.`}\)], "Output"]
}, Open  ]],

Cell[TextData[{
  "This result demonstrates that we can observe this ambiguity with the \
chosen neutrino factory and that it appears at approximately the same value \
of \[Delta] with a different value of ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  ", what is quite characteristic for this degeneracy. "
}], "Text"],

Cell[TextData[{
  "The (\[Delta], ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  ") can be found with a different method, which will be described in the \
next section."
}], "Text"],

Cell[TextData[{
  "In summary, we can write a routine to find the two introduced \
degeneracies. It requires as a parameter the mode (1=sgn(",
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_31\%2\),
        "Text",
        FontFamily->"Times",
        FontWeight->"Plain"]],
    FontWeight->"Bold"],
  "), 2=(",
  Cell[BoxData[
      FormBox[
        StyleBox[\(\[Theta]\_23\),
          FontWeight->"Plain"], TraditionalForm]],
    FontWeight->"Bold"],
  ", \[Pi]/2-",
  Cell[BoxData[
      FormBox[
        StyleBox[\(\[Theta]\_23\),
          FontWeight->"Plain"], TraditionalForm]],
    FontWeight->"Bold"],
  ")) and the values of ",
  Cell[BoxData[
      \(TraditionalForm\`\(sin\^2\)(2  \[Theta]\_13)\)]],
  ", \[Delta], and ",
  Cell[BoxData[
      FormBox[
        StyleBox[\(\[Theta]\_23\),
          FontWeight->"Plain"], TraditionalForm]],
    FontWeight->"Bold"],
  ". As results, it returns the vector obtained from ",
  StyleBox["ChiAll",
    FontFamily->"Courier"],
  ":"
}], "Text"],

Cell[BoxData[
    \(FindDeg[mode_, \ thes22\[Theta]13_, \ the\[Delta]_, \ 
        the\[Theta]23_]\  := \ 
      Module[{}, \[IndentingNewLine]SetVacuumParameters[N[9999], 
          N[ArcSin[Sqrt[thes22\[Theta]13]]/2], N[the\[Theta]23], 
          N[the\[Delta]]]; \[IndentingNewLine]SetMasses[N[RescaledSMD], 
          N[3.0*10^\(-3\)]]; \[IndentingNewLine]SetDensity[
          DENSITY]; \[IndentingNewLine]SetRates[]; \
\[IndentingNewLine]SetInputErrors[N[10], N[10], N[10], N[RescaledSMD\ 0.15], 
          N[1], N[DENSITY*0.05]]; \[IndentingNewLine]SetStartingValues[
          ArcSin[Sqrt[thes22\[Theta]13]]/2, N[the\[Theta]23], 
          N[\(-\[Pi]\)/4], N[RescaledSMD], N[3.0*10^\(-3\)], 
          DENSITY]; \[IndentingNewLine]If[mode \[Equal] 1, 
          ChiAll[{Log[10, thes22\[Theta]13], the\[Theta]23, the\[Delta], 
                RescaledSMD, \(-3\)*10^\(-3\), DENSITY} // 
              N], \[IndentingNewLine]ChiAll[{Log[10, 
                  thes22\[Theta]13], \[Pi]/2 - the\[Theta]23, the\[Delta], 
                RescaledSMD, 3*10^\(-3\), DENSITY} // 
              N]]\[IndentingNewLine]]\)], "Input"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection"],

Cell[TextData[{
  "In this example, we demonstrate the effect of the  (",
  Cell[BoxData[
      FormBox[
        StyleBox[\(\[Theta]\_23\),
          FontWeight->"Plain"], TraditionalForm]],
    FontWeight->"Bold"],
  ", \[Pi]/2-",
  Cell[BoxData[
      FormBox[
        StyleBox[\(\[Theta]\_23\),
          FontWeight->"Plain"], TraditionalForm]],
    FontWeight->"Bold"],
  ") degeneracy on the ",
  Cell[BoxData[
      FormBox[
        RowBox[{" ", 
          StyleBox[\(\[Theta]\_13\),
            FontWeight->"Plain"]}], TraditionalForm]],
    FontWeight->"Bold"],
  " sensitivity limit of our advanced state neutrino factory. First, we need \
to change the experiment:"
}], "Text"],

Cell[BoxData[
    \(InitExperiment[NuFact2]; InitMemory[]\)], "Input"],

Cell[TextData[{
  "Then, we need to find the position of the degeneracy for the chosen \
parameter values. Here, we take the LMA values with",
  Cell[BoxData[
      FormBox[
        RowBox[{" ", 
          StyleBox[\(\[Theta]\_13 = 0\),
            FontWeight->"Plain"]}], TraditionalForm]],
    FontWeight->"Bold"],
  " and \[Delta]=0, except from ",
  Cell[BoxData[
      FormBox[
        StyleBox[\(\[Theta]\_23 = \[Pi]/4 - 0.25\),
          FontWeight->"Plain"], TraditionalForm]],
    FontWeight->"Bold"],
  ":"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(SetVacuumParameters[N[9999], N[ArcSin[Sqrt[0.0]]/2], 
        N[\[Pi]/4 - 0.25], N[0]];\)\), "\[IndentingNewLine]", 
    \(\(SetMasses[N[RescaledSMD], 
        N[3.0*10^\(-3\)]];\)\), "\[IndentingNewLine]", 
    \(\(SetDensity[DENSITY];\)\), "\[IndentingNewLine]", 
    \(\(SetRates[];\)\), "\[IndentingNewLine]", 
    \(\(SetInputErrors[N[10], N[10], N[10], N[RescaledSMD\ 0.15], N[1], 
        N[DENSITY*0.05]];\)\), "\[IndentingNewLine]", 
    \(SetStartingValues[ArcSin[Sqrt[0.0]]/2, N[\[Pi]/4 - 0.25], N[0], 
      N[RescaledSMD], N[3.0*10^\(-3\)], DENSITY]; 
    thedeg = ChiAll[{\(-12\), \[Pi]/2 - \((\[Pi]/4 - 0.25)\), 0, RescaledSMD, 
            3*10^\(-3\), DENSITY} // N]\)}], "Input"],

Cell[BoxData[
    \({2.201366660720774`, \(-4.471953025055347`\), 1.0353336930681882`, 
      0.22380512858009435`, 0.00004306172642692832`, 0.0029986793136657698`, 
      3.4886952637647055`, 2012.`}\)], "Output"]
}, Open  ]],

Cell[TextData[{
  "Keeping one of the quantities fixed, such as ",
  Cell[BoxData[
      FormBox[
        StyleBox[\(\[Theta]\_13\),
          FontWeight->"Plain"], TraditionalForm]],
    FontWeight->"Bold"],
  ", and setting the starting values for the minimum finder to the respective \
values found for the degenerate solution should then find the local minimum \
with respect to ",
  Cell[BoxData[
      FormBox[
        StyleBox[\(\[Theta]\_13\),
          FontWeight->"Plain"], TraditionalForm]],
    FontWeight->"Bold"],
  " fixed.  This is, what is done for ",
  StyleBox["mode",
    FontFamily->"Courier"],
  "=2 in the following procedure:"
}], "Text"],

Cell[BoxData[
    \(FindDegTheta[thes22theta13_, \ mode_]\  := \ 
      Module[{RSSMD}, \[IndentingNewLine]RSSMD\  = \ 
          Sin[2\ 32.9\ \[Pi]/
                  180]\ 4.5\ 10^\((\(-5\))\); \
\[IndentingNewLine]SetVacuumParameters[N[9999], N[ArcSin[Sqrt[0.0]]/2], 
          N[\[Pi]/4 - 0.25], N[0]]; \[IndentingNewLine]SetMasses[N[RSSMD], 
          N[3.0*10^\(-3\)]]; \[IndentingNewLine]SetDensity[
          DENSITY]; \[IndentingNewLine]SetRates[]; \
\[IndentingNewLine]SetInputErrors[N[10], N[10], N[10], N[RSSMD\ 0.15], N[1], 
          N[DENSITY*0.05]]; \[IndentingNewLine]SetStartingValues[
          ArcSin[Sqrt[0.0]]/2, N[\[Pi]/4 - 0.25], N[0], N[RSSMD], 
          N[3.0*10^\(-3\)], DENSITY]; \[IndentingNewLine]If[
          mode \[Equal] 
            1, \[IndentingNewLine]\(ChiTheta[
              N[ArcSin[Sqrt[thes22theta13]]/2], {\[Pi]/4 - 0.25, 0, RSSMD, 
                  0.003, DENSITY} // 
                N]\)[\([1]\)]\ , \[IndentingNewLine]\(ChiTheta[
              N[ArcSin[Sqrt[thes22theta13]]/2], {thedeg[\([3]\)], 
                  thedeg[\([4]\)], thedeg[\([5]\)], thedeg[\([6]\)], 
                  thedeg[\([7]\)]} // 
                N]\)[\([1]\)]]\[IndentingNewLine]]\)], "Input"],

Cell[TextData[{
  "Using ",
  StyleBox["mode",
    FontFamily->"Courier"],
  "=1 finds the ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  " of the best-fit solution:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(FindDegTheta[0.00015, 1]\)], "Input"],

Cell[BoxData[
    \(6.653664545641374`\)], "Output"]
}, Open  ]],

Cell[TextData[{
  "Using ",
  StyleBox["mode",
    FontFamily->"Courier"],
  "=2 the one of the degenerate solution:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(FindDegTheta[0.00015, 2]\)], "Input"],

Cell[BoxData[
    \(4.215188420552004`\)], "Output"]
}, Open  ]],

Cell["\<\
To find the sensitivity limit for the parameter values chosen, we \
compute the tables for both the best-fit and degenerate solution:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(res1\  = \ 
      Table[{s22th13, FindDegTheta[s22th13, 1]}, {s22th13, 0, 0.0005, 
          0.00005}]\)], "Input"],

Cell[BoxData[
    \({{0, 5.518082591123369`*^-9}, {0.00005`, 
        2.5147921855248456`}, {0.0001`, 
        4.727126026687926`}, {0.00015000000000000001`, 
        6.653664545641374`}, {0.0002`, 8.285809125761729`}, {0.00025`, 
        9.616979054000483`}, {0.00030000000000000003`, 
        10.643675261497345`}, {0.00035`, 11.386439463308546`}, {0.0004`, 
        11.875811252504057`}, {0.00045000000000000004`, 
        12.102337147045896`}, {0.0005`, 12.139479211659996`}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(res2\  = \ 
      Table[{s22th13, FindDegTheta[s22th13, 2]}, {s22th13, 0, 0.0005, 
          0.00005}]\)], "Input"],

Cell[BoxData[
    \({{0, 13.835671352919865`}, {0.00005`, 2.424986882931048`}, {0.0001`, 
        3.7725339824526816`}, {0.00015000000000000001`, 
        4.215188420552004`}, {0.0002`, 3.5541936753782686`}, {0.00025`, 
        2.1307905903021833`}, {0.00030000000000000003`, 
        0.7771544292216127`}, {0.00035`, 0.8882977894911913`}, {0.0004`, 
        3.239431343368136`}, {0.00045000000000000004`, 
        7.7895218990971085`}, {0.0005`, 14.305375600078241`}}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(<< \ Graphics`MultipleListPlot`\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(MultipleListPlot[res1, res2, \ PlotJoined \[Rule] True, \ 
      SymbolShape \[Rule] None, \ 
      Epilog \[Rule] {Line[{{0, 2.7}, {0.0005, 2.7}}]}]\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 1904.76 0.0147151 0.0411456 [
[.21429 .00222 -15.75 -10.9375 ]
[.21429 .00222 15.75 0 ]
[.40476 .00222 -15.75 -10.9375 ]
[.40476 .00222 15.75 0 ]
[.59524 .00222 -15.75 -10.9375 ]
[.59524 .00222 15.75 0 ]
[.78571 .00222 -15.75 -10.9375 ]
[.78571 .00222 15.75 0 ]
[.97619 .00222 -15.75 -11 ]
[.97619 .00222 15.75 0 ]
[.01131 .09701 -9 -5.46875 ]
[.01131 .09701 0 5.46875 ]
[.01131 .1793 -9 -5.46875 ]
[.01131 .1793 0 5.46875 ]
[.01131 .26159 -9 -5.46875 ]
[.01131 .26159 0 5.46875 ]
[.01131 .34388 -9 -5.46875 ]
[.01131 .34388 0 5.46875 ]
[.01131 .42617 -14 -5.46875 ]
[.01131 .42617 0 5.46875 ]
[.01131 .50846 -14 -5.46875 ]
[.01131 .50846 0 5.46875 ]
[.01131 .59075 -14 -5.46875 ]
[.01131 .59075 0 5.46875 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.21429 .01472 m
.21429 .02097 L
s
gsave
.21429 .00222 -76.75 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.0001) show
1.000 setlinewidth
grestore
.40476 .01472 m
.40476 .02097 L
s
gsave
.40476 .00222 -76.75 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.0002) show
1.000 setlinewidth
grestore
.59524 .01472 m
.59524 .02097 L
s
gsave
.59524 .00222 -76.75 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.0003) show
1.000 setlinewidth
grestore
.78571 .01472 m
.78571 .02097 L
s
gsave
.78571 .00222 -76.75 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.0004) show
1.000 setlinewidth
grestore
.97619 .01472 m
.97619 .02097 L
s
gsave
.97619 .00222 -76.75 -15 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 19 translate 1 -1 scale
63.000 11.875 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.0005) show
1.000 setlinewidth
grestore
.125 Mabswid
.0619 .01472 m
.0619 .01847 L
s
.1 .01472 m
.1 .01847 L
s
.1381 .01472 m
.1381 .01847 L
s
.17619 .01472 m
.17619 .01847 L
s
.25238 .01472 m
.25238 .01847 L
s
.29048 .01472 m
.29048 .01847 L
s
.32857 .01472 m
.32857 .01847 L
s
.36667 .01472 m
.36667 .01847 L
s
.44286 .01472 m
.44286 .01847 L
s
.48095 .01472 m
.48095 .01847 L
s
.51905 .01472 m
.51905 .01847 L
s
.55714 .01472 m
.55714 .01847 L
s
.63333 .01472 m
.63333 .01847 L
s
.67143 .01472 m
.67143 .01847 L
s
.70952 .01472 m
.70952 .01847 L
s
.74762 .01472 m
.74762 .01847 L
s
.82381 .01472 m
.82381 .01847 L
s
.8619 .01472 m
.8619 .01847 L
s
.9 .01472 m
.9 .01847 L
s
.9381 .01472 m
.9381 .01847 L
s
.25 Mabswid
0 .01472 m
1 .01472 L
s
.02381 .09701 m
.03006 .09701 L
s
gsave
.01131 .09701 -70 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(2) show
1.000 setlinewidth
grestore
.02381 .1793 m
.03006 .1793 L
s
gsave
.01131 .1793 -70 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(4) show
1.000 setlinewidth
grestore
.02381 .26159 m
.03006 .26159 L
s
gsave
.01131 .26159 -70 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(6) show
1.000 setlinewidth
grestore
.02381 .34388 m
.03006 .34388 L
s
gsave
.01131 .34388 -70 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(8) show
1.000 setlinewidth
grestore
.02381 .42617 m
.03006 .42617 L
s
gsave
.01131 .42617 -75 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(10) show
1.000 setlinewidth
grestore
.02381 .50846 m
.03006 .50846 L
s
gsave
.01131 .50846 -75 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(12) show
1.000 setlinewidth
grestore
.02381 .59075 m
.03006 .59075 L
s
gsave
.01131 .59075 -75 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(14) show
1.000 setlinewidth
grestore
.125 Mabswid
.02381 .03529 m
.02756 .03529 L
s
.02381 .05586 m
.02756 .05586 L
s
.02381 .07643 m
.02756 .07643 L
s
.02381 .11758 m
.02756 .11758 L
s
.02381 .13815 m
.02756 .13815 L
s
.02381 .15872 m
.02756 .15872 L
s
.02381 .19987 m
.02756 .19987 L
s
.02381 .22044 m
.02756 .22044 L
s
.02381 .24102 m
.02756 .24102 L
s
.02381 .28216 m
.02756 .28216 L
s
.02381 .30273 m
.02756 .30273 L
s
.02381 .32331 m
.02756 .32331 L
s
.02381 .36445 m
.02756 .36445 L
s
.02381 .38503 m
.02756 .38503 L
s
.02381 .4056 m
.02756 .4056 L
s
.02381 .44674 m
.02756 .44674 L
s
.02381 .46732 m
.02756 .46732 L
s
.02381 .48789 m
.02756 .48789 L
s
.02381 .52904 m
.02756 .52904 L
s
.02381 .54961 m
.02756 .54961 L
s
.02381 .57018 m
.02756 .57018 L
s
.02381 .61133 m
.02756 .61133 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.001 w
.02381 .01472 m
.11905 .11819 L
.21429 .20922 L
.30952 .28848 L
.40476 .35564 L
.5 .41041 L
.59524 .45266 L
.69048 .48322 L
.78571 .50335 L
.88095 .51267 L
.97619 .5142 L
s
[ .5 3 ] 0 Mabsdash
.02381 .58399 m
.11905 .11449 L
.21429 .16994 L
.30952 .18815 L
.40476 .16095 L
.5 .10239 L
.59524 .04669 L
.69048 .05126 L
.78571 .148 L
.88095 .33522 L
.97619 .60332 L
s
.5 Mabswid
[ ] 0 setdash
.02381 .12581 m
.97619 .12581 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40006`00012R000`400?l00000o`00003oo`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona
0?ooo`00o`3ooona0?ooo`00DP3oool4000000@0oooo00<000000?ooo`3oool0100000040?ooo`@0
0000103oool4000000@0oooo1@00000T0?ooo`@00000103oool00`000000oooo0?ooo`04000000@0
oooo100000040?ooo`@000000`3oool6000002D0oooo100000040?ooo`030000003oool0oooo00@0
0000103oool4000000@0oooo100000040?ooo`@000009@3oool4000000@0oooo00<000000?ooo`3o
ool0100000040?ooo`@00000103oool4000000L0oooo00<000000?ooo`3oool08`3oool4000000@0
oooo00<000000?ooo`3oool0100000040?ooo`@00000103oool4000000@0oooo0`0000070?ooo`00
D@3oool200000080oooo0P0000030?ooo`040000003oool0000000000080oooo0P0000020?ooo`80
00000P3oool200000080oooo0P0000020?ooo`8000001@3oool00`000000oooo0?ooo`0S0?ooo`80
00000P3oool2000000<0oooo00@000000?ooo`00000000000P3oool200000080oooo0P0000020?oo
o`8000000P3oool200000080oooo0P0000020?ooo`8000000`3oool00`000000oooo0?ooo`0R0?oo
o`8000000P3oool2000000<0oooo00@000000?ooo`00000000000P3oool200000080oooo0P000002
0?ooo`8000000P3oool200000080oooo0P0000020?ooo`8000000P3oool2000002<0oooo0P000002
0?ooo`8000000`3oool010000000oooo0000000000020?ooo`8000000P3oool200000080oooo0P00
00020?ooo`8000000P3oool2000000H0oooo00<000000?ooo`3oool08P3oool200000080oooo0P00
00030?ooo`040000003oool0000000000080oooo0P0000020?ooo`8000000P3oool200000080oooo
0P0000020?ooo`8000000`3oool010000000oooo0?ooo`0000060?ooo`00D@3oool00`000000oooo
0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool010000000oooo
0?ooo`0000040?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool00`3oool00`00
0000oooo0?ooo`0S0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`00
0000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00@000000?ooo`3oool00000103o
ool01@000000oooo0?ooo`3oool0000002P0oooo00<000000?ooo`3oool00P3oool00`000000oooo
0?ooo`030?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103oool010000000
oooo0?ooo`0000040?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool08@3oool00`00
0000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool01000
0000oooo0?ooo`0000040?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool01P00
000S0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`000000oooo0?oo
o`020?ooo`040000003oool0oooo000000@0oooo00@000000?ooo`3oool00000103oool00`000000
oooo0?ooo`050?ooo`030000003oool0oooo00<0oooo001A0?ooo`030000003oool0oooo0080oooo
00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0
oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo
02<0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo
0080oooo00@000000?ooo`3oool00000103oool010000000oooo0?ooo`0000040?ooo`030000003o
ool0oooo0080oooo00<000000?ooo`3oool09@3oool00`000000oooo0?ooo`020?ooo`030000003o
ool0oooo00<0oooo00<000000?ooo`3oool00P3oool010000000oooo0?ooo`0000040?ooo`040000
003oool0oooo000000@0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0Q0?ooo`03
0000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`04
0000003oool0oooo000000@0oooo00@000000?ooo`3oool00000103oool010000000oooo0?ooo`00
00030?ooo`030000003oool0oooo0280oooo00<000000?ooo`3oool00P3oool00`000000oooo0?oo
o`030?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103oool010000000oooo
0?ooo`0000040?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool00`3oool00540oooo
00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0080oooo
00@000000?ooo`3oool00000103oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo
00<0oooo00<000000?ooo`3oool08`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo
00<0oooo00<000000?ooo`3oool00P3oool010000000oooo0?ooo`0000040?ooo`040000003oool0
oooo000000@0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0T0?ooo`030000003o
ool0oooo0080oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`040000003o
ool0oooo000000@0oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`040?ooo`03
0000003oool0oooo0280oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`03
0000003oool0oooo0080oooo00@000000?ooo`3oool00000103oool010000000oooo0?ooo`000004
0?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`0R0?ooo`030000003o
ool0oooo0080oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`040000003o
ool0oooo000000@0oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`040?ooo`80
00001@3oool00540oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000
003oool0oooo0080oooo00@000000?ooo`3oool00000103oool010000000oooo0?ooo`0000040?oo
o`030000003oool0oooo00<0oooo00<000000?ooo`3oool08`3oool00`000000oooo0?ooo`020?oo
o`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool010000000oooo0?ooo`000004
0?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool00`3oool2000002D0oooo00<0
00000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0080oooo00@0
00000?ooo`3oool00000103oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo0080
oooo0P00000U0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`000000
oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00@000000?ooo`3oool00000103oool0
10000000oooo0?ooo`3oool2000000030?ooo`000000oooo02<0oooo00<000000?ooo`3oool00P3o
ool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000
103oool010000000oooo0?ooo`0000040?ooo`060000003oool0oooo0?ooo`000000oooo0P000006
0?ooo`00D@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?oo
o`3oool00P3oool010000000oooo0?ooo`0000040?ooo`040000003oool0oooo000000@0oooo00<0
00000?ooo`3oool00`3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo0080oooo00<0
00000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo
00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo02<0
oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0080
oooo00@000000?ooo`3oool00000103oool010000000oooo0?ooo`0000040?ooo`030000003oool0
oooo00@0oooo00<000000?ooo`3oool08P3oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo00<0oooo00<000000?ooo`3oool00P3oool010000000oooo0?ooo`0000040?ooo`040000003o
ool0oooo000000@0oooo00<000000?ooo`3oool00P3oool00`000000oooo0000000T0?ooo`030000
003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`040000
003oool0oooo000000@0oooo00@000000?ooo`3oool00000103oool010000000oooo0?ooo`3oool3
000000L0oooo001A0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`00
0000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00@000000?ooo`3oool00000103o
ool00`000000oooo0?ooo`030?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool00P3o
ool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000
103oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3o
ool08`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3o
ool00P3oool010000000oooo0?ooo`0000040?ooo`040000003oool0oooo000000@0oooo00<00000
0?ooo`3oool0103oool00`000000oooo0?ooo`0R0?ooo`030000003oool0oooo0080oooo00<00000
0?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00@0
00000?ooo`3oool00000103oool00`000000oooo0?ooo`020?ooo`030000003oool0000002@0oooo
00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0080oooo
00@000000?ooo`3oool00000103oool010000000oooo0?ooo`0000040?ooo`040000003oool0oooo
0?ooo`<000001`3oool00540oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?oo
o`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103oool010000000oooo0?ooo`00
00040?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool08`3oool00`000000oooo0?oo
o`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool010000000oooo0?oo
o`0000040?ooo`040000003oool0oooo000000@0oooo00@000000?ooo`3oool000000`3oool00`00
0000oooo0?ooo`0S0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`00
0000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00@000000?ooo`3oool00000103o
ool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo0240oooo00<000000?ooo`3oool0
0P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool0
0000103oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00<0oooo0P00000T0?oo
o`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?oo
o`040000003oool0oooo000000@0oooo00@000000?ooo`3oool00000103oool01@000000oooo0?oo
o`3oool0000000T0oooo001A0?ooo`8000000P3oool2000000D0oooo0P0000020?ooo`8000000P3o
ool200000080oooo0P0000020?ooo`8000000P3oool2000000<0oooo0`00000U0?ooo`8000000P3o
ool2000000D0oooo0P0000020?ooo`8000000P3oool200000080oooo0P0000020?ooo`8000000P3o
ool200000080oooo0P0000000`3oool000000000000U0?ooo`8000000P3oool2000000D0oooo0P00
00020?ooo`8000000P3oool200000080oooo0P0000020?ooo`8000000P3oool200000080oooo0P00
00020?ooo`8000008`3oool200000080oooo0P0000050?ooo`8000000P3oool200000080oooo0P00
00020?ooo`8000000P3oool200000080oooo0P0000050?ooo`800000903oool200000080oooo0P00
00050?ooo`8000000P3oool200000080oooo0P0000020?ooo`8000000P3oool200000080oooo0P00
00040?ooo`<000001P3oool001X0oooo00<000000?ooo`3oool0=@3oool4000000L0oooo10000004
0?ooo`@00000103oool4000000H0oooo00<000000?ooo`3oool0903oool4000000L0oooo10000004
0?ooo`@00000103oool4000000@0oooo0`00000W0?ooo`@000001`3oool4000000@0oooo10000004
0?ooo`@00000103oool4000002D0oooo100000070?ooo`@00000103oool4000000@0oooo10000007
0?ooo`030000003oool0oooo02<0oooo100000070?ooo`@00000103oool4000000@0oooo10000005
0?ooo`@000001@3oool001X0oooo00<000000?ooo`3oool0o`3ooonD0?ooo`006P3oool00`000000
oooo0?ooo`3o0?oooi@0oooo000J0?ooo`030000003oool0oooo0?l0ooooU03oool001X0oooo00<0
00000?ooo`3oool0o`3ooonD0?ooo`006P3oool00`000000oooo0?ooo`3o0?oooi@0oooo000@0?oo
ool00000TP00000?0?ooo`006P3oool2000000d0oooo00<000000?ooo`3oool0303oool00`000000
oooo0?ooo`0<0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool0303oool00`000000
oooo0?ooo`0<0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool03@3oool00`000000
oooo0?ooo`0<0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool0303oool00`000000
oooo0?ooo`0=0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool0303oool00`000000
oooo0?ooo`0<0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool0303oool00`000000
oooo0?ooo`0<0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool03@3oool00`000000
oooo0?ooo`0<0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool0303oool00`000000
oooo0?ooo`0=0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool05P3oool001X0oooo
00<000000?ooo`000000B@3oool00`000000oooo0?ooo`190?ooo`030000003oool0oooo04T0oooo
00<000000?ooo`3oool0BP3oool00`000000oooo0?ooo`190?ooo`030000003oool0oooo01H0oooo
000J0?ooo`040000003oool0oooo00000?l0ooooT`3oool001X0oooo00D000000?ooo`3oool0oooo
0000003o0?oooi80oooo000J0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0o`3o
oon?0?ooo`006P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0?l0ooooSP3oool0
01X0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`3o0?ooohh0oooo000J0?ooo`80
00001@3oool00`000000oooo0?ooo`3o0?ooohd0oooo000J0?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool0o`3ooon<0?ooo`006P3oool00`000000oooo0?ooo`060?ooo`030000003o
ool0oooo0?l0ooooR`3oool001X0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`3o
0?ooohX0oooo000J0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0e`3oool20000
0:l0oooo000J0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0f`3oool2000000@0
oooo00<000000?ooo`3oool00P3oool2000000<0oooo0P00002J0?ooo`006P3oool00`000000oooo
0?ooo`0:0?ooo`030000003oool0oooo0=40oooo00<000000?ooo`3oool06`3oool2000000@0oooo
00<000000?ooo`3oool00P3oool2000008X0oooo000J0?ooo`030000003oool0oooo00/0oooo00<0
00000?ooo`3oool0d03oool00`000000oooo0?ooo`2b0?ooo`006P3oool2000000d0oooo00<00000
0?ooo`3oool0o`3ooon50?ooo`006P3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo
0<T0oooo0P00002h0?ooo`006P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo0?X0
oooo00<000000?ooo`3oool0Q@3oool001X0oooo00<000000?ooo`3oool03`3oool00`000000oooo
0?ooo`3o0?oooh80oooo000J0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool0`@3o
ool200000;d0oooo000J0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool0n`3oool0
0`000000oooo0?ooo`220?ooo`006P3oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo
0;d0oooo00<000000?ooo`3oool0>`3oool00`000000oooo0?ooo`210?ooo`006P3oool00`000000
oooo0?ooo`0B0?ooo`030000003oool0oooo0;/0oooo00<000000?ooo`3oool0`03oool001X0oooo
0P00000D0?ooo`030000003oool0oooo0?l0ooooOP3oool001X0oooo00<000000?ooo`3oool0503o
ool00`000000oooo0?ooo`2d0?ooo`800000A@3oool00`000000oooo0?ooo`1n0?ooo`006P3oool0
0`000000oooo0?ooo`0E0?ooo`030000003oool0oooo0?/0oooo00<000000?ooo`3oool0O@3oool0
01X0oooo00<000000?ooo`3oool05P3oool00`000000oooo0?ooo`2_0?ooo`030000003oool0oooo
0<P0oooo000J0?ooo`030000003oool0oooo01L0oooo00<000000?ooo`3oool0[@3oool00`000000
oooo0?ooo`390?ooo`006P3oool00`000000oooo0?ooo`0H0?ooo`030000003oool0oooo0?/0oooo
00<000000?ooo`3oool0NP3oool000X0oooo1P00000:0?ooo`030000003oool0oooo01T0oooo00<0
00000?ooo`3oool0YP3oool200000<l0oooo000:0?ooo`8000000`3oool00`000000oooo0?ooo`08
0?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool0o`3ooomg0?ooo`002`3oool00`00
0000oooo0?ooo`0<0?ooo`<000006`3oool00`000000oooo0?ooo`3o0?ooogH0oooo000<0?ooo`03
0000003oool0oooo00/0oooo00<000000?ooo`3oool0703oool00`000000oooo0?ooo`2O0?ooo`03
0000003oool0oooo05P0oooo0P00001h0?ooo`003@3oool00`000000oooo0?ooo`0:0?ooo`030000
003oool0oooo01d0oooo00<000000?ooo`3oool0o`3ooomd0?ooo`003@3oool2000000/0oooo00<0
00000?ooo`3oool07@3oool00`000000oooo0?ooo`2J0?ooo`030000003oool0oooo0=H0oooo000>
0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`2H
0?ooo`030000003oool0oooo0640oooo00<000000?ooo`3oool0L`3oool000h0oooo00<000000?oo
o`3oool02@3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo0?`0oooo00<000000?oo
o`3oool0LP3oool000X0oooo00D000000?ooo`3oool0oooo0000000;0?ooo`030000003oool0oooo
0200oooo00<000000?ooo`3oool0TP3oool00`000000oooo0?ooo`3K0?ooo`002P3oool200000003
0?ooo`000000000000/0oooo00<000000?ooo`3oool08@3oool00`000000oooo0?ooo`2A0?ooo`03
0000003oool0oooo0=/0oooo000;0?ooo`<00000303oool00`000000oooo0?ooo`0R0?ooo`030000
003oool0oooo0?`0oooo00<000000?ooo`3oool0K`3oool001X0oooo0P00000T0?ooo`030000003o
ool0000008X0oooo0P00001_0?ooo`030000003oool0oooo06l0oooo000J0?ooo`030000003oool0
oooo0280oooo00<000000?ooo`000000o`3ooom_0?ooo`006P3oool00`000000oooo0?ooo`0U0?oo
o`050000003oool0oooo0?ooo`000000o`3ooomZ0?ooo`006P3ooooo000007l00000603oool001X0
oooo00<000000?ooo`3oool09`3oool00`000000oooo0?ooo`3o0?ooofX0oooo000J0?ooo`030000
003oool0oooo02P0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`1g0?ooo`030000
003oool0oooo0>P0oooo000J0?ooo`030000003oool0oooo0240oooo00<000000?ooo`3oool01@3o
ool00`000000oooo0?ooo`1k0?ooo`030000003oool0oooo07h0oooo00<000000?ooo`3oool0J03o
ool001X0oooo00<000000?ooo`3oool0:P3oool00`000000oooo0?ooo`3l0?ooo`030000003oool0
oooo06L0oooo000J0?ooo`800000;03oool00`000000oooo0?ooo`040?ooo`800000L03oool00`00
0000oooo0?ooo`3/0?ooo`006P3oool00`000000oooo0?ooo`0/0?ooo`800000M@3oool00`000000
oooo0?ooo`3]0?ooo`006P3oool00`000000oooo0?ooo`0^0?ooo`030000003oool0oooo00H0oooo
00<000000?ooo`3oool0lP3oool00`000000oooo0?ooo`1T0?ooo`006P3oool00`000000oooo0?oo
o`0P0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?oo
o`1S0?ooo`800000S03oool00`000000oooo0?ooo`1T0?ooo`006P3oool00`000000oooo0?ooo`0P
0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool0o`3ooomQ0?ooo`006P3oool00`00
0000oooo0?ooo`0a0?ooo`030000003oool0oooo00L0oooo0P00003o0?oooeL0oooo000J0?ooo`03
0000003oool0oooo0380oooo00<000000?ooo`3oool0I@3oool2000009<0oooo00<000000?ooo`3o
ool0H@3oool001X0oooo00<000000?ooo`3oool0<`3oool00`000000oooo0?ooo`3i0?ooo`030000
003oool0oooo0640oooo000J0?ooo`800000803oool00`000000oooo0?ooo`0B0?ooo`030000003o
ool0oooo00T0oooo0P00001D0?ooo`030000003oool0oooo0?X0oooo000J0?ooo`030000003oool0
oooo01l0oooo00<000000?ooo`3oool04`3oool00`000000oooo0?ooo`1N0?ooo`030000003oool0
oooo0?X0oooo000J0?ooo`030000003oool0oooo03H0oooo00<000000?ooo`3oool02`3oool00`00
0000oooo0?ooo`1:0?ooo`030000003oool0oooo0?l0oooo000J0?ooo`030000003oool0oooo03L0
oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`3Y0?ooo`030000003oool0oooo05l0
oooo000J0?ooo`030000003oool0oooo03P0oooo00<000000?ooo`3oool0D03oool200000:D0oooo
00<000000?ooo`3oool0GP3oool001X0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?oo
o`0H0?ooo`030000003oool0oooo00d0oooo0P00000k0?ooo`800000o`3oool<0?ooo`003P3oool0
0`000000oooo0?ooo`090?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3oool06@3oool0
0`000000oooo0?ooo`0A0?ooo`800000o`3ooom40?ooo`003P3oool00`000000oooo0?ooo`090?oo
o`030000003oool0oooo03/0oooo00<000000?ooo`3oool05@3oool2000002`0oooo0P00003o0?oo
oa40oooo000:0?ooo`H000002P3oool3000003`0oooo00<000000?ooo`3oool06P3oool00`000000
oooo0?ooo`0P0?ooo`800000]P3oool00`000000oooo0?ooo`1L0?ooo`002P3oool01@000000oooo
0?ooo`3oool0000000/0oooo00<000000?ooo`3oool0?@3oool00`000000oooo0?ooo`0N0?ooo`03
0000003oool0oooo01L0oooo00<000000?ooo`3oool0o`3ooolI0?ooo`002`3oool010000000oooo
0?ooo`00000;0?ooo`030000003oool0oooo01d0oooo00<000000?ooo`3oool07P3oool00`000000
oooo0?ooo`0R0?ooo`8000004P3oool00`000000oooo0?ooo`3o0?oooaX0oooo000;0?ooo`800000
00<0oooo0000003oool02P3oool00`000000oooo0?ooo`0M0?ooo`030000003oool0oooo01l0oooo
0P00000W0?ooo`800000203oool200000?l0oooo803oool000`0oooo00<000000?ooo`0000002`3o
ool00`000000oooo0?ooo`110?ooo`030000003oool0oooo02T0oooo0P00003o0?ooobD0oooo000<
0?ooo`030000003oool0000000/0oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`3a
0?ooo`030000003oool0oooo05X0oooo000=0?ooo`8000002`3oool00`000000oooo0?ooo`130?oo
o`030000003oool0oooo0?l0ooooCP3oool000d0oooo0P00000;0?ooo`030000003oool0oooo01`0
oooo00<000000?ooo`3oool09@3oool00`000000oooo0?ooo`3o0?ooodd0oooo000>0?ooo`030000
003oool0oooo00T0oooo00<000000?ooo`3oool0703oool00`000000oooo0?ooo`0V0?ooo`030000
003oool0oooo0?l0ooooC03oool001X0oooo0P0000170?ooo`030000003oool0oooo0>l0oooo00<0
00000?ooo`3oool0F03oool001X0oooo00<000000?ooo`3oool0A`3oool00`000000oooo0?ooo`3_
0?ooo`030000003oool0oooo05L0oooo000J0?ooo`030000003oool0oooo04P0oooo00<000000?oo
o`3oool0o`3ooom90?ooo`006P3oool00`000000oooo0?ooo`190?ooo`030000003oool0oooo0?l0
ooooB03oool001X0oooo00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`0/0?ooo`030000
003oool0oooo0?l0ooooA`3oool001X0oooo00<000000?ooo`3oool0B`3oool00`000000oooo0?oo
o`3]0?ooo`030000003oool0oooo05D0oooo000J0?ooo`030000003oool0oooo04`0oooo0P00003]
0?ooo`030000003oool0oooo05D0oooo000J0?ooo`030000003oool0oooo04h0oooo00<000000?oo
o`3oool0o`3ooom30?ooo`006P3oool200000500oooo00<000000?ooo`3oool0o`3ooom20?ooo`00
6P3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo03<0oooo00<000000?ooo`3oool0
o`3ooom10?ooo`006P3oool00`000000oooo0?ooo`1A0?ooo`030000003oool0oooo0>T0oooo00<0
00000?ooo`3oool0D`3oool001X0oooo00<000000?ooo`3oool0DP3oool200000?l0oooo@03oool0
01X0oooo00<000000?ooo`3oool0E03oool00`000000oooo0?ooo`3o0?ooocd0oooo000J0?ooo`03
0000003oool0oooo05D0oooo00<000000?ooo`3oool0o`3oooll0?ooo`006P3oool00`000000oooo
0?ooo`0I0?ooo`030000003oool0oooo03X0oooo00<000000?ooo`3oool0i`3oool00`000000oooo
0?ooo`1@0?ooo`006P3oool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo03/0oooo00<0
00000?ooo`3oool0iP3oool00`000000oooo0?ooo`1@0?ooo`006P3oool2000005T0oooo0P00003o
0?ooocX0oooo000J0?ooo`030000003oool0oooo05X0oooo00<000000?ooo`3oool0o`3ooolg0?oo
o`006P3oool00`000000oooo0?ooo`1K0?ooo`030000003oool0oooo0?l0oooo=P3oool001X0oooo
00<000000?ooo`3oool0603oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo0><0oooo
00<000000?ooo`3oool0CP3oool001X0oooo00<000000?ooo`3oool0603oool00`000000oooo0?oo
o`120?ooo`030000003oool0oooo0>80oooo00<000000?ooo`3oool0CP3oool001X0oooo00<00000
0?ooo`3oool0GP3oool00`000000oooo0?ooo`3o0?oooc<0oooo000;0?ooo`@000002`3oool00`00
0000oooo0?ooo`1O0?ooo`800000o`3ooolc0?ooo`002P3oool200000080oooo0P00000:0?ooo`03
0000003oool0oooo0640oooo00<000000?ooo`3oool0o`3oool`0?ooo`002P3oool00`000000oooo
0?ooo`020?ooo`030000003oool0oooo00P0oooo0`00000G0?ooo`030000003oool0oooo04P0oooo
00<000000?ooo`3oool0g`3oool2000004d0oooo000:0?ooo`030000003oool0oooo0080oooo00<0
00000?ooo`3oool0203oool00`000000oooo0?ooo`0G0?ooo`030000003oool0oooo04T0oooo00<0
00000?ooo`3oool0o`3oool^0?ooo`002P3oool200000080oooo0P00000:0?ooo`030000003oool0
oooo06@0oooo00<000000?ooo`3oool0o`3oool]0?ooo`002`3oool4000000/0oooo00<000000?oo
o`3oool0I@3oool200000?l0oooo;@3oool000/0oooo00<000000?ooo`3oool0303oool00`000000
oooo0?ooo`1W0?ooo`030000003oool0oooo0=d0oooo00<000000?ooo`3oool0B@3oool000/0oooo
00<000000?ooo`3oool0303oool00`000000oooo0?ooo`0F0?ooo`030000003oool0oooo04l0oooo
00<000000?ooo`3oool0g03oool00`000000oooo0?ooo`190?ooo`00303oool00`000000oooo0?oo
o`0;0?ooo`030000003oool0oooo01H0oooo00<000000?ooo`3oool0D03oool00`000000oooo0?oo
o`3o0?ooobP0oooo000=0?ooo`8000002`3oool00`000000oooo0?ooo`1Z0?ooo`030000003oool0
oooo0?l0oooo9`3oool000h0oooo0P00000:0?ooo`030000003oool0oooo06/0oooo0P00003o0?oo
obL0oooo000J0?ooo`800000KP3oool00`000000oooo0?ooo`3I0?ooo`030000003oool0oooo04L0
oooo000J0?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3oool0EP3oool00`000000oooo
0?ooo`3H0?ooo`030000003oool0oooo04L0oooo000J0?ooo`030000003oool0oooo01D0oooo00<0
00000?ooo`3oool0E`3oool00`000000oooo0?ooo`3o0?ooob80oooo000J0?ooo`030000003oool0
oooo0700oooo0P00003o0?ooob80oooo000J0?ooo`030000003oool0oooo0780oooo00<000000?oo
o`3oool0o`3ooolO0?ooo`006P3oool00`000000oooo0?ooo`1c0?ooo`030000003oool0oooo0=D0
oooo0P0000160?ooo`006P3oool00`000000oooo0?ooo`1d0?ooo`800000o`3ooolN0?ooo`006P3o
ool00`000000oooo0?ooo`0C0?ooo`800000H@3oool00`000000oooo0?ooo`3o0?oooa/0oooo000J
0?ooo`800000N03oool200000?l0oooo6`3oool001X0oooo00<000000?ooo`3oool0N@3oool00`00
0000oooo0?ooo`3B0?ooo`030000003oool0oooo0480oooo000J0?ooo`030000003oool0oooo07X0
oooo00<000000?ooo`3oool0d@3oool00`000000oooo0?ooo`120?ooo`006P3oool00`000000oooo
0?ooo`1k0?ooo`800000o`3ooolG0?ooo`006P3oool00`000000oooo0?ooo`0B0?ooo`800000J@3o
ool00`000000oooo0?ooo`3o0?oooa@0oooo000J0?ooo`030000003oool0oooo07h0oooo0P00003o
0?oooa@0oooo000J0?ooo`030000003oool0oooo0800oooo00<000000?ooo`3oool0c@3oool00`00
0000oooo0?ooo`100?ooo`006P3oool00`000000oooo0?ooo`210?ooo`800000cP3oool00`000000
oooo0?ooo`0o0?ooo`006P3oool2000008@0oooo00<000000?ooo`3oool0o`3oool>0?ooo`006P3o
ool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo06l0oooo00<000000?ooo`3oool0o`3o
ool=0?ooo`006P3oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo0740oooo0P00003o
0?ooo`d0oooo000J0?ooo`030000003oool0oooo08L0oooo00<000000?ooo`3oool0b@3oool00`00
0000oooo0?ooo`0m0?ooo`006P3oool00`000000oooo0?ooo`280?ooo`800000o`3oool:0?ooo`00
6P3oool00`000000oooo0?ooo`2:0?ooo`030000003oool0oooo0?l0oooo1`3oool000`0oooo0`00
000;0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool0N03oool00`000000oooo0?oo
o`3o0?ooo`H0oooo000;0?ooo`80000000<0oooo0000000000002P3oool00`000000oooo0?ooo`0@
0?ooo`030000003oool0oooo07T0oooo0P0000370?ooo`030000003oool0oooo03/0oooo000;0?oo
o`050000003oool0oooo0?ooo`0000002P3oool3000008h0oooo00<000000?ooo`3oool0a03oool0
0`000000oooo0?ooo`0k0?ooo`002`3oool01@000000oooo0?ooo`3oool0000000X0oooo00<00000
0?ooo`3oool0S`3oool200000?l0oooo0`3oool000/0oooo00<000000?ooo`3oool00P00000:0?oo
o`030000003oool0oooo0940oooo00<000000?ooo`3oool0o`3oool000`0oooo0`00000;0?ooo`03
0000003oool0oooo00l0oooo00<000000?ooo`3oool0P03oool00`000000oooo0?ooo`3n0?ooo`00
2`3oool200000080oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`0?0?ooo`030000
003oool0oooo0840oooo0P0000310?ooo`030000003oool0oooo03X0oooo000;0?ooo`8000000P3o
ool00`000000oooo0?ooo`080?ooo`030000003oool0oooo09D0oooo00<000000?ooo`3oool0_`3o
ool00`000000oooo0?ooo`0i0?ooo`002`3oool01@000000oooo0?ooo`3oool0000000X0oooo00<0
00000?ooo`3oool0UP3oool200000?/0oooo000;0?ooo`80000000<0oooo0000000000002P3oool0
0`000000oooo0?ooo`2H0?ooo`800000n@3oool000`0oooo0`00000;0?ooo`030000003oool0oooo
00h0oooo00<000000?ooo`3oool0R@3oool200000?L0oooo000J0?ooo`8000003`3oool00`000000
oooo0?ooo`2;0?ooo`030000003oool0oooo0;T0oooo00<000000?ooo`3oool0>03oool001X0oooo
00<000000?ooo`3oool0W@3oool200000;T0oooo00<000000?ooo`3oool0>03oool001X0oooo00<0
00000?ooo`3oool0W`3oool200000?80oooo000J0?ooo`030000003oool0oooo0:40oooo00<00000
0?ooo`3oool0k`3oool001X0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`2B0?oo
o`800000k`3oool001X0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`2D0?ooo`80
0000]03oool00`000000oooo0?ooo`0f0?ooo`006P3oool00`000000oooo0?ooo`2V0?ooo`800000
/P3oool00`000000oooo0?ooo`0f0?ooo`006P3oool00`000000oooo0?ooo`2X0?ooo`030000003o
ool0oooo0>P0oooo000J0?ooo`800000ZP3oool200000>P0oooo000J0?ooo`030000003oool0oooo
0:/0oooo0P00003V0?ooo`006P3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo09h0
oooo0P00002]0?ooo`030000003oool0oooo03@0oooo000J0?ooo`030000003oool0oooo0:l0oooo
00<000000?ooo`3oool0ZP3oool00`000000oooo0?ooo`0d0?ooo`006P3oool00`000000oooo0?oo
o`2`0?ooo`800000h@3oool001X0oooo00<000000?ooo`3oool0/P3oool200000=l0oooo000J0?oo
o`030000003oool0oooo0;@0oooo00<000000?ooo`3oool0g03oool001X0oooo00<000000?ooo`3o
ool02`3oool00`000000oooo0?ooo`2W0?ooo`800000YP3oool00`000000oooo0?ooo`0c0?ooo`00
6P3oool200000;P0oooo0P00002U0?ooo`030000003oool0oooo0380oooo000J0?ooo`030000003o
ool0oooo0;T0oooo0P00003H0?ooo`006P3oool00`000000oooo0?ooo`2k0?ooo`800000eP3oool0
01X0oooo00<000000?ooo`3oool0_@3oool200000=@0oooo000J0?ooo`030000003oool0oooo00X0
oooo00<000000?ooo`3oool0/P3oool2000009h0oooo00<000000?ooo`3oool0<@3oool001X0oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`2d0?ooo`800000W03oool00`000000oooo
0?ooo`0a0?ooo`00103oool5000000<0oooo1000000:0?ooo`030000003oool0oooo0<<0oooo0`00
003=0?ooo`001P3oool00`000000oooo0?ooo`020?ooo`8000000P3oool2000000T0oooo00<00000
0?ooo`3oool0aP3oool200000</0oooo00060?ooo`030000003oool0oooo0080oooo00<000000?oo
o`3oool00P3oool00`000000oooo0?ooo`070?ooo`<00000b03oool200000<T0oooo00060?ooo`03
0000003oool0oooo0080oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`070?ooo`03
0000003oool0oooo00T0oooo00<000000?ooo`3oool0_P3oool2000009D0oooo00<000000?ooo`3o
ool0;`3oool000H0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`020?ooo`030000
003oool0oooo00L0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`300?ooo`<00000
TP3oool00`000000oooo0?ooo`0_0?ooo`001P3oool00`000000oooo0?ooo`020?ooo`030000003o
ool0oooo0080oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`3?0?ooo`800000`P3o
ool000H0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo00L0oooo00<000000?ooo`3oool0d@3oool200000<00oooo00060?ooo`030000003oool0oooo
0080oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo
0=<0oooo0P00002n0?ooo`001P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0080
oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo0<X0
oooo0P00002<0?ooo`030000003oool0oooo02d0oooo00040?ooo`<00000103oool200000080oooo
0P0000090?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0c03oool3000008T0oooo
00<000000?ooo`3oool0;@3oool000H0oooo00<000000?ooo`3oool00`3oool4000000X0oooo00<0
00000?ooo`3oool0fP3oool200000;L0oooo000J0?ooo`800000g@3oool200000;D0oooo000J0?oo
o`030000003oool0oooo0=h0oooo0P00002c0?ooo`006P3oool00`000000oooo0?ooo`070?ooo`03
0000003oool0oooo0=H0oooo0`0000210?ooo`030000003oool0oooo02`0oooo000J0?ooo`030000
003oool0oooo00L0oooo00<000000?ooo`3oool0f@3oool3000007l0oooo00<000000?ooo`3oool0
:`3oool001X0oooo00<000000?ooo`3oool0iP3oool300000:X0oooo000J0?ooo`030000003oool0
oooo0>T0oooo1000002V0?ooo`006P3oool00`000000oooo0?ooo`3]0?ooo`<00000X`3oool001X0
oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`3W0?ooo`<00000L`3oool00`000000
oooo0?ooo`0Z0?ooo`006P3oool2000000L0oooo00<000000?ooo`3oool0jP3oool300000700oooo
00<000000?ooo`3oool0:P3oool001X0oooo00<000000?ooo`3oool0mP3oool3000009X0oooo000J
0?ooo`030000003oool0oooo0?T0oooo0`00002G0?ooo`006P3oool00`000000oooo0?ooo`3l0?oo
o`@00000T`3oool001X0oooo00<000000?ooo`3oool0o`3oool10?ooo`<00000I@3oool00`000000
oooo0?ooo`0X0?ooo`006P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo0?/0oooo
0`00001R0?ooo`030000003oool0oooo02P0oooo000J0?ooo`030000003oool0oooo0?l0oooo1`3o
ool4000008T0oooo000J0?ooo`030000003oool0oooo0?l0oooo2`3oool5000008@0oooo000J0?oo
o`800000o`3ooolA0?ooo`D00000O`3oool001X0oooo00<000000?ooo`3oool0o`3ooolE0?ooo`D0
0000D@3oool00`000000oooo0?ooo`0V0?ooo`006P3oool00`000000oooo0?ooo`040?ooo`030000
003oool0oooo0?l0oooo4`3oool4000004d0oooo00<000000?ooo`3oool09P3oool001X0oooo00<0
00000?ooo`3oool0o`3ooolN0?ooo`D00000L@3oool001X0oooo00<000000?ooo`3oool0o`3ooolS
0?ooo`D00000K03oool001X0oooo00<000000?ooo`3oool0o`3ooolX0?ooo`D00000I`3oool000@0
oooo1@0000020?ooo`H000002@3oool00`000000oooo0?ooo`3o0?ooobd0oooo1`00000h0?ooo`80
00009P3oool000H0oooo00<000000?ooo`3oool00P3oool2000000<0oooo00<000000?ooo`3oool0
1`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0?l0oooo;P3oool:000005H0oooo
00060?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool02`3oool3000000<0oooo00<0
00000?ooo`3oool0o`3ooolh0?ooo`T00000C@3oool000H0oooo00<000000?ooo`3oool0103oool0
0`000000oooo0?ooo`0:0?ooo`030000003oool0oooo0?l0ooooA`3oool:000004<0oooo00060?oo
o`030000003oool0oooo00D0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`3o0?oo
oe40oooo6000000[0?ooo`001P3oool00`000000oooo0?ooo`050?ooo`8000002P3oool00`000000
oooo0?ooo`3o0?ooofT0oooo4`00000H0?ooo`001P3oool00`000000oooo0?ooo`060?ooo`030000
003oool0oooo00P0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`3o0?ooohl0oooo
00060?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0203oool00`000000oooo0?oo
o`020?ooo`030000003oool0oooo0?l0ooooS`3oool000H0oooo00<000000?ooo`3oool00P3oool0
1@000000oooo0?ooo`3oool0000000X0oooo00<000000?ooo`3oool0o`3ooonD0?ooo`00103oool3
000000@0oooo0P0000000`3oool000000000000:0?ooo`030000003oool0oooo0?l0ooooU03oool0
00H0oooo00<000000?ooo`3oool00`3oool3000000/0oooo0P00003o0?ooog40oooo00<000000?oo
o`3oool08@3oool001X0oooo00D000000?ooo`3oool0oooo0000003o0?oooi80oooo000J0?ooo`05
0000003oool0oooo0?ooo`000000o`3ooonB0?ooo`006P3oool00`000000oooo0?ooo`3o0?oooi@0
oooo000J0?ooo`030000003oool0oooo0?l0ooooU03oool001X0oooo00<000000?ooo`3oool0o`3o
oomb0?ooo`030000003oool0oooo01l0oooo000J0?ooo`040000003oool0oooo00000?l0ooooT`3o
ool001X0oooo00@000000?ooo`3oool00000o`3ooonC0?ooo`006P3oool00`000000oooo0?ooo`3o
0?oooi@0oooo000J0?ooo`800000o`3ooonE0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooog@0
oooo00<000000?ooo`3oool07@3oool001X0oooo00<000000?ooo`000000o`3ooonD0?ooo`006P3o
ool00`000000oooo0000003o0?oooi@0oooo000J0?ooo`030000003oool0oooo0?l0ooooU03oool0
01X0oooo00<000000?ooo`3oool0o`3ooonD0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooogD0
oooo0P00000M0?ooo`006P3oool00`000000oooo0?ooo`3o0?oooi@0oooo000J0?ooo`800000o`3o
oonE0?ooo`006P3oool00`000000oooo0?ooo`3o0?oooi@0oooo000J0?ooo`030000003oool0oooo
0?l0ooooM`3oool00`000000oooo0?ooo`0J0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooogL0
oooo00<000000?ooo`3oool06P3oool001X0oooo00<000000?ooo`3oool0o`3ooonD0?ooo`006P3o
ool00`000000oooo0?ooo`3o0?oooi@0oooo00040?ooo`D000001P3oool00`000000oooo0?ooo`08
0?ooo`030000003oool0oooo0?l0ooooU03oool000H0oooo00<000000?ooo`3oool01P3oool00`00
0000oooo0?ooo`080?ooo`030000003oool0oooo0?l0ooooN@3oool00`000000oooo0?ooo`0H0?oo
o`001P3oool00`000000oooo0?ooo`020?ooo`H000002@3oool300000?l0ooooN@3oool00`000000
oooo0?ooo`0H0?ooo`001P3oool00`000000oooo0?ooo`020?ooo`050000003oool0oooo0?ooo`00
00002P3oool00`000000oooo0?ooo`3o0?oooi@0oooo00060?ooo`030000003oool0oooo00<0oooo
00@000000?ooo`3oool000002P3oool00`000000oooo0?ooo`3o0?oooi@0oooo00060?ooo`030000
003oool0oooo00<0oooo0P0000000`3oool000000?ooo`090?ooo`030000003oool0oooo0?l0oooo
U03oool000H0oooo00<000000?ooo`3oool0103oool00`000000oooo0000000:0?ooo`030000003o
ool0oooo0?l0ooooN`3oool00`000000oooo0?ooo`0F0?ooo`001P3oool00`000000oooo0?ooo`04
0?ooo`030000003oool0000000X0oooo00<000000?ooo`3oool0o`3ooomk0?ooo`030000003oool0
oooo01H0oooo00060?ooo`030000003oool0oooo00D0oooo0P00000:0?ooo`030000003oool0oooo
0?l0ooooU03oool000@0oooo0`0000070?ooo`8000002P3oool00`000000oooo0?ooo`3o0?oooi@0
oooo00060?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0203oool200000?l0oooo
U@3oool001X0oooo00<000000?ooo`3oool0o`3ooonD0?ooo`006P3oool00`000000oooo0?ooo`3o
0?oooi@0oooo000J0?ooo`030000003oool0oooo0?l0ooooU03oool00?l0oooo/@3oool00001\
\>"],
  ImageRangeCache->{{{0, 431}, {265.875, 0}} -> {-3.40974*^-5, -1.3896, \
1.96662*^-6, 0.0910409}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell["\<\
Now we can calculate the sensitivity at the 90% confidence level \
(see horizontal line) without and with degeneracy:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(sens1\  = \ 
      x\  /. \ FindRoot[\(Interpolation[res1]\)[x] \[Equal] 
            2.7, {x, {0.0001, 0.0002}}]\)], "Input"],

Cell[BoxData[
    \(0.00005394246480389395`\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(sens2\  = \ 
      x\  /. \ FindRoot[\(Interpolation[res2]\)[x] \[Equal] 
            2.7, {x, {0.0004, 0.00045}}]\)], "Input"],

Cell[BoxData[
    \(0.000391767517607483`\)], "Output"]
}, Open  ]],

Cell["\<\
There is about one order of magnitude in between these results, \
i.e., the degenerate solution worsens the results by about one order of \
magnitude! Note, however, that this strongly depends on the chosen confidence \
level!\
\>", "Text"],

Cell[TextData[{
  "Finally, one remark about the convergence of the minimizor: In the last \
figure, it is abvious that the function for the degeneracy is discontinuous \
at ",
  Cell[BoxData[
      FormBox[
        RowBox[{
          StyleBox[\(\[Theta]\_13\),
            FontWeight->"Plain"], 
          StyleBox["=",
            FontWeight->"Plain"], 
          StyleBox["0",
            FontWeight->"Plain"]}], TraditionalForm]],
    FontWeight->"Bold"],
  ". This can essentially have two different reasons: either the resolution \
of this calculuation is too low or the minimizor runs in the wrong local \
minimum. To check this, one can either increase the resolution or play around \
with the starting values to make the minimizor converge into the correct \
minimum. For the sensitivity, however, it does not matter in this case. Thus, \
we do not want to go into greater detail here."
}], "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  "Returning rates/total rates and the (\[Delta], ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  ")",
  " ambiguity"
}], "Section"],

Cell[TextData[{
  "The commands for returning rates are just being changed in GLOBES (e.g., \
",
  StyleBox["ReturnZero",
    FontFamily->"Courier"],
  " in this version, ",
  StyleBox["RatesInfo",
    FontFamily->"Courier"],
  " in the newest versions). Thus, we only describe qualitatively how to \
access the (\[Delta], ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  ") ambiguity."
}], "Text"],

Cell[TextData[{
  "Version remark: The commands for returning rates are just being changed in \
the current GLOBES versions! ",
  StyleBox["ReturnZero",
    FontFamily->"Courier"],
  " will be replaced by",
  " ",
  StyleBox["RatesInfo",
    FontFamily->"Courier"],
  "."
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell[TextData[{
  "For obtaining the position of the (\[Delta], ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  ") ambigue solution, we draw the total rate curves in (\[Delta], ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  ") space for the dominant neutrino and antineutrino channels (e.g., \
signal/background of dominant channel). The curves through the best-fit \
point, i.e., the true  (\[Delta], ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  "), intersect at a different point which can be identified as the \
degenerate solution. It is obvious that including energy resolution helps to \
resolve this degeneracy!"
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Changing other parameters", "Section"],

Cell[TextData[{
  "In this section, we show with some examples how to modify the standard \
parameters initialized by ",
  StyleBox["InitExperiment",
    FontFamily->"Courier"],
  ". We believe that it is quite straightforward to extend these examples to \
other routines by using ",
  StyleBox["LinkPatterns[vlbl]",
    FontFamily->"Courier"],
  "."
}], "Text"],

Cell[TextData[{
  "Changes of parameters should, in general, be done directly after ",
  StyleBox["InitExperiment",
    FontFamily->"Courier"],
  " and ",
  StyleBox["InitMemory!",
    FontFamily->"Courier"]
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell[CellGroupData[{

Cell["Changing the luminosity", "Subsubsection"],

Cell["\<\
The following routine changes the luminosity relatively by a \
certain factor:\
\>", "Text"],

Cell[BoxData[
    \(ChangeLuminosity[factor_]\  := \ 
      Module[{l}, l = CheckTargetMass[]; 
        SetTargetMass[N[l*factor]]]\)], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Changing the baseline", "Subsubsection"],

Cell[BoxData[
    \(SetBaseline[N[4000]]\)], "Input"],

Cell["sets the baseline length to 4000 km.", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manipulating rules", "Subsubsection"],

Cell["\<\
This command switches off all uncertainties allowed for signal and \
background normalizations and tilts: \
\>", "Text"],

Cell[BoxData[
    \(StatErrorsOff := 
      Module[{i}, 
        For[i = 0, i < CheckNumberOfRules[], \(i++\), 
          SetBGErrors[i, 1. \ 10^\(-8\), 1. \ 10^\(-8\)]; 
          SetSignalErrors[i, 1. \ 10^\(-8\), 1. \ 10^\(-8\)]]]\)], "Input"],

Cell[TextData[{
  "Note that the first parameter in ",
  StyleBox["Set...Errors",
    FontFamily->"Courier"],
  " refers to the rule number, the second to the normalization, and the third \
to the tilt. In addition, the signal and tilt uncertainties are not allowed \
to be set to zero, but only to very small values. To obtain the currently set \
parameter values to be modified here, one can use the ",
  StyleBox["Check...Errors",
    FontFamily->"Courier"],
  " routines."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Switching certain correlations off for the minimum finders", \
"Subsubsection"],

Cell[TextData[{
  "To switch a correlation off, the corresponding value in ",
  StyleBox["SetInputErrors",
    FontFamily->"Courier"],
  " should be set to a very small value. For example, the following line \
switches the ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)]],
  "-correlation off:"
}], "Text"],

Cell[BoxData[
    \(\(SetInputErrors[N[10], N[10\ ^{\(-4\)}], N[10], N[RSSMD\ 0.15], N[1], 
        N[DENSITY*0.05]];\)\)], "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multiple experiment support (MES)", "Subtitle"],

Cell["\<\
This part deals with handling one or more experiments at once. It \
essentially represents the software from Version 1.1, i.e., though the old \
routines for the analyzation of a single experiment still should work, the \
new ones should be used.\
\>", "Text"],

Cell["\<\
Version warning: GLOBES 1.1 and higher allows to analyze more than \
one experiment at once. Thus many routines are re-defined for this purpose. \
It is essential to note with which version of GLOBES you are working!\
\>", \
"Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell["\<\
In this part, we will especially focus on the differences between \
the old and new versions of the software, since most functions, in principle, \
work in a very similar way. Thus, for didactical purposes we recommend to \
read the first part first. Since this part is organized in a parallel manner, \
it should not be difficult to find the corresponding single experiment \
section. \
\>", "Text"],

Cell[CellGroupData[{

Cell["Software initialization", "Section"],

Cell["\<\
Before we start the software, we again have to tell Mathematica \
were to find the GLOBES files. Here:\
\>", "Text"],

Cell[BoxData[
    \(SetDirectory["\</home/t30/lin/wwinter/GLOBES/User/Mathematica\>"]; 
    AppendTo[$Path, "\</home/t30/lin/wwinter/Software/User\>"];\)], "Input"],

Cell["Then, we can start the new software:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(<< GlobesMESbeta`\)], "Input"],

Cell[BoxData[
    \("GLoBES 1.1.beta.beta"\)], "Print"],

Cell[BoxData[
    \("(c) M. Freund & P. Huber 2002"\)], "Print"],

Cell[BoxData[
    \("now starting user interface ..."\)], "Print"],

Cell[BoxData[
    \("installing C-programe ..."\)], "Print"],

Cell[BoxData[
    \("ready"\)], "Print"]
}, Open  ]],

Cell[TextData[{
  "Since we were using the old version of the software before, we have to \
make sure that we use the correct ",
  StyleBox["MathLink",
    FontSlant->"Italic"],
  " interface:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Uninstall[vlbl]; 
    vlbl = Install["\<./MESvlbl_ml\>", LinkMode \[Rule] Launch]\)], "Input"],

Cell[BoxData[
    \(LinkObject["./MESvlbl_ml", 4, 3]\)], "Output"]
}, Open  ]],

Cell["\<\
Without using the software before within the same session, this \
step is obsolete!\
\>", "Text"],

Cell["One can get the detailed version information with:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Version[]\)], "Input"],

Cell[BoxData[
    \("GLoBES 1.1.beta (c)\nBy M. Freund and P. Huber\n\ncompiled on Sep 23 \
2002\nat 11:17:02\n"\)], "Output"]
}, Open  ]],

Cell["\<\
The new software gets its experiment definitions from a file in \
order to be able to update experiment data quickly. The database is loaded by\
\
\>", "Text"],

Cell[BoxData[
    \(\(Get["\<database\>"];\)\)], "Input"],

Cell["One can get a list of possible experiments with", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(dbnames\)], "Input"],

Cell[BoxData[
    \({"NuFact", "NuFact2", "JHFSK", "JHFHKAll", "NUMI"}\)], "Output"]
}, Open  ]],

Cell["and the time the database was provided at with", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(dbtime\)], "Input"],

Cell[BoxData[
    \("Mon Sep 23 14:21:32 2002"\)], "Output"]
}, Open  ]],

Cell["\<\
The experiment itself is in the new version not just a parameter \
anymore, but a list of replacement rules containing the necessary information \
for the experiment (excluding spectral information, etc.). For example,\
\>", \
"Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(NuFact2\)], "Input"],

Cell[BoxData[
    \({Baseline \[Rule] 3000.`, Profile \[Rule] Constant, 
      Density \[Rule] 3.5`, TargetMass \[Rule] 50.`, 
      Muons \[Rule] 4.264`*^21, BeamType \[Rule] 1, ErrorFunction \[Rule] 1, 
      EnergyTreshold \[Rule] 4.`, BeamEnergy \[Rule] 50.`, 
      Channels \[Rule] {{1, 1, 1, 2, 1}, {\(-1\), \(-1\), 1, 2, 
            1}, {1, \(-1\), 2, 2, 1}, {\(-1\), 1, 2, 2, 1}}, 
      ErrorDim \[Rule] 0, Bins \[Rule] 20, EnergyResolution \[Rule] 0.15`, 
      EnergyResolutionFunction \[Rule] Linear, 
      TresholdCenter \[Rule] {12.`, 8.`}, TresholdErrors \[Rule] {0.`, 0.`}, 
      Rules \[Rule] {Hold[{0}, {0.45`}, {1, 0.001`, 0, 0.0001`}, 1], 
          Hold[{2}, {1.`}, {cid, 0.2`\ cid, 0, 0.0001`}, 0], 
          Hold[{1}, {0.35`}, {1, 0.001`, 0, 0.0001`}, 1], 
          Hold[{3}, {1.`}, {cid, 0.2`\ cid, 0, 0.0001`}, 0], 
          Hold[{2}, {0.45`}, {1, 0.001`, 0, 0.0001`}, 1], 
          Hold[{0}, {0.00001`}, {1, 0.001`, 0, 0.0001`}, 0], 
          Hold[{3}, {0.35`}, {1, 0.001`, 0, 0.0001`}, 1], 
          Hold[{1}, {0.00001`}, {1, 0.001`, 0, 0.0001`}, 0]}, 
      CID \[Rule] 1\/100000}\)], "Output"]
}, Open  ]],

Cell[TextData[{
  "gives the (Mathematica) rules for the advanced stage neutrino factory. \
These can be modified with ",
  StyleBox["MakeExperiment",
    FontFamily->"Courier"],
  " ",
  StyleBox["before",
    FontWeight->"Bold"],
  " the actual experiment initialization. For example, the following command \
creates a neutrino factory at a longer baseline:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(NuFactverylongbaseline\  = \ 
      MakeExperiment[NuFact2, Baseline \[Rule] 8000]\)], "Input"],

Cell[BoxData[
    \({Baseline \[Rule] 8000, Profile \[Rule] Constant, Density \[Rule] 3.5`, 
      TargetMass \[Rule] 50.`, Muons \[Rule] 4.264`*^21, BeamType \[Rule] 1, 
      ErrorFunction \[Rule] 1, EnergyTreshold \[Rule] 4.`, 
      BeamEnergy \[Rule] 50.`, 
      Channels \[Rule] {{1, 1, 1, 2, 1}, {\(-1\), \(-1\), 1, 2, 
            1}, {1, \(-1\), 2, 2, 1}, {\(-1\), 1, 2, 2, 1}}, 
      ErrorDim \[Rule] 0, Bins \[Rule] 20, EnergyResolution \[Rule] 0.15`, 
      EnergyResolutionFunction \[Rule] Linear, 
      TresholdCenter \[Rule] {12.`, 8.`}, TresholdErrors \[Rule] {0.`, 0.`}, 
      Rules \[Rule] {Hold[{0}, {0.45`}, {1, 0.001`, 0, 0.0001`}, 1], 
          Hold[{2}, {1.`}, {cid, 0.2`\ cid, 0, 0.0001`}, 0], 
          Hold[{1}, {0.35`}, {1, 0.001`, 0, 0.0001`}, 1], 
          Hold[{3}, {1.`}, {cid, 0.2`\ cid, 0, 0.0001`}, 0], 
          Hold[{2}, {0.45`}, {1, 0.001`, 0, 0.0001`}, 1], 
          Hold[{0}, {0.00001`}, {1, 0.001`, 0, 0.0001`}, 0], 
          Hold[{3}, {0.35`}, {1, 0.001`, 0, 0.0001`}, 1], 
          Hold[{1}, {0.00001`}, {1, 0.001`, 0, 0.0001`}, 0]}, 
      CID \[Rule] 1\/100000}\)], "Output"]
}, Open  ]],

Cell["Before any experiment is initialized, we have to call", "Text"],

Cell[BoxData[
    \(ClearExp[]\)], "Input"],

Cell["\<\
to allocate the memory and re-set the number of experiments to \
zero.\
\>", "Text"],

Cell["\<\
Then, we can add experiments to be analyzed simultaneously, such as \
two advanced stage neutrino factory baselines here:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(MInitExperiment[NuFact2, ShowTab \[Rule] True, 
      MES \[Rule] True]\)], "Input"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {
            InterpretationBox[GridBox[{
                  {"\<\"NuFact\"\>", "\<\"\"\>"},
                  {"\<\"-------------\"\>", "\<\"\"\>"},
                  {GridBox[{
                        {
                          InterpretationBox[GridBox[{
                                {"\<\"Baseline 3000. km\"\>"},
                                {"\<\"Average Density 3.5 \
g/\\!\\(cm\\^\\(-3\\)\\)\"\>"},
                                {"\<\"Profile Type Constant\"\>"}
                                },
                              RowSpacings->1,
                              ColumnSpacings->3,
                              RowAlignments->Baseline,
                              ColumnAlignments->{Left}],
                            
                            TableForm[ {"Baseline 3000. km", 
                              "Average Density 3.5 g/\!\(cm\^\(-3\)\)", 
                              "Profile Type Constant"}]]},
                        {
                          InterpretationBox[GridBox[{
                                {"\<\"Target mass 50. kt\"\>"},
                                {"\<\"Useful Muons 4.264e21\"\>"},
                                {"\<\"Nkt 2.132e23\"\>"}
                                },
                              RowSpacings->1,
                              ColumnSpacings->3,
                              RowAlignments->Baseline,
                              ColumnAlignments->{Left}],
                            
                            TableForm[ {"Target mass 50. kt", 
                              "Useful Muons 4.264e21", "Nkt 2.132e23"}]]}
                        },
                      RowSpacings->0.25,
                      ColumnSpacings->1,
                      RowAlignments->Baseline,
                      ColumnAlignments->{Left}], 
                    InterpretationBox[GridBox[{
                          {"\<\"Energy treshold 4. GeV\"\>"},
                          {"\<\"Beam energy 50. GeV\"\>"},
                          {"\<\"Bins 20\"\>"},
                          {"\<\"Binwidth 2.3 GeV\"\>"},
                          {"\<\"Energy resolution 0.15\"\>"},
                          {"\<\"Energy resolution function Linear\"\>"}
                          },
                        RowSpacings->1,
                        ColumnSpacings->3,
                        RowAlignments->Baseline,
                        ColumnAlignments->{Left}],
                      
                      TableForm[ {"Energy treshold 4. GeV", 
                        "Beam energy 50. GeV", "Bins 20", "Binwidth 2.3 GeV", 
                        "Energy resolution 0.15", 
                        "Energy resolution function Linear"}]]}
                  },
                RowSpacings->1,
                ColumnSpacings->3,
                RowAlignments->Baseline,
                ColumnAlignments->{Left}],
              TableForm[ {{"NuFact", ""}, {"-------------"}, {{
                
                TableForm[ {"Baseline 3000. km", 
                  "Average Density 3.5 g/\!\(cm\^\(-3\)\)", 
                  "Profile Type Constant"}], 
                
                TableForm[ {"Target mass 50. kt", "Useful Muons 4.264e21", 
                  "Nkt 2.132e23"}]}, 
                
                TableForm[ {"Energy treshold 4. GeV", "Beam energy 50. GeV", 
                  "Bins 20", "Binwidth 2.3 GeV", "Energy resolution 0.15", 
                  "Energy resolution function Linear"}]}}, 
                TableDirections -> {Column, Row}]]},
          {"\<\"--------------\"\>"},
          {
            InterpretationBox[GridBox[{
                  {"0", 
                    TagBox[GridBox[{
                          {"\<\"Signal\"\>", "\<\"1\[PlusMinus]0.001\"\>", \
"\<\"0\[PlusMinus]0.0001\"\>", "\<\"0.45\[CircleTimes]-\[Nu]e\[Mu]CC\"\>"},
                          {"\<\"Background\"\>", \
"\<\"0.00001\[PlusMinus]2.e-6\"\>", "\<\"0.\[PlusMinus]0.0001\"\>", "\<\"1.\
\[CircleTimes]-\\!\\(\\(\[Nu]\\&-\\)\\)\[Mu]\[Mu]CC\"\>"}
                          },
                        RowSpacings->1,
                        ColumnSpacings->3,
                        RowAlignments->Baseline,
                        ColumnAlignments->{Left}],
                      Function[ BoxForm`e$, 
                        TableForm[ 
                        BoxForm`e$, TableHeadings -> {{"Signal", 
                          "Background"}}]]]},
                  {"1", 
                    TagBox[GridBox[{
                          {"\<\"Signal\"\>", "\<\"1\[PlusMinus]0.001\"\>", \
"\<\"0\[PlusMinus]0.0001\"\>", \
"\<\"0.35\[CircleTimes]+\\!\\(\\(\[Nu]\\&-\\)\\)e\[Mu]CC\"\>"},
                          {"\<\"Background\"\>", \
"\<\"0.00001\[PlusMinus]2.e-6\"\>", "\<\"0.\[PlusMinus]0.0001\"\>", "\<\"1.\
\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC\"\>"}
                          },
                        RowSpacings->1,
                        ColumnSpacings->3,
                        RowAlignments->Baseline,
                        ColumnAlignments->{Left}],
                      Function[ BoxForm`e$, 
                        TableForm[ 
                        BoxForm`e$, TableHeadings -> {{"Signal", 
                          "Background"}}]]]},
                  {"2", 
                    TagBox[GridBox[{
                          {"\<\"Signal\"\>", "\<\"1\[PlusMinus]0.001\"\>", \
"\<\"0\[PlusMinus]0.0001\"\>", \
"\<\"0.45\[CircleTimes]-\\!\\(\\(\[Nu]\\&-\\)\\)\[Mu]\[Mu]CC\"\>"},
                          {"\<\"Background\"\>", \
"\<\"1.\[PlusMinus]0.001\"\>", "\<\"0.\[PlusMinus]0.0001\"\>", "\<\"0.00001\
\[CircleTimes]-\[Nu]e\[Mu]CC\"\>"}
                          },
                        RowSpacings->1,
                        ColumnSpacings->3,
                        RowAlignments->Baseline,
                        ColumnAlignments->{Left}],
                      Function[ BoxForm`e$, 
                        TableForm[ 
                        BoxForm`e$, TableHeadings -> {{"Signal", 
                          "Background"}}]]]},
                  {"3", 
                    TagBox[GridBox[{
                          {"\<\"Signal\"\>", "\<\"1\[PlusMinus]0.001\"\>", \
"\<\"0\[PlusMinus]0.0001\"\>", \
"\<\"0.35\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC\"\>"},
                          {"\<\"Background\"\>", \
"\<\"1.\[PlusMinus]0.001\"\>", "\<\"0.\[PlusMinus]0.0001\"\>", "\<\"0.00001\
\[CircleTimes]+\\!\\(\\(\[Nu]\\&-\\)\\)e\[Mu]CC\"\>"}
                          },
                        RowSpacings->1,
                        ColumnSpacings->3,
                        RowAlignments->Baseline,
                        ColumnAlignments->{Left}],
                      Function[ BoxForm`e$, 
                        TableForm[ 
                        BoxForm`e$, TableHeadings -> {{"Signal", 
                          "Background"}}]]]}
                  },
                RowSpacings->1,
                ColumnSpacings->3,
                RowAlignments->Baseline,
                ColumnAlignments->{Left}],
              TableForm[ {
                
                TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
                  "0.45\[CircleTimes]-\[Nu]e\[Mu]CC"}, {
                  "0.00001\[PlusMinus]2.e-6", "0.\[PlusMinus]0.0001", 
                  "1.\[CircleTimes]-\!\(\(\[Nu]\&-\)\)\[Mu]\[Mu]CC"}}, 
                  TableHeadings -> {{"Signal", "Background"}}], 
                
                TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
                  "0.35\[CircleTimes]+\!\(\(\[Nu]\&-\)\)e\[Mu]CC"}, {
                  "0.00001\[PlusMinus]2.e-6", "0.\[PlusMinus]0.0001", 
                  "1.\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC"}}, TableHeadings -> {{
                  "Signal", "Background"}}], 
                
                TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
                  "0.45\[CircleTimes]-\!\(\(\[Nu]\&-\)\)\[Mu]\[Mu]CC"}, {
                  "1.\[PlusMinus]0.001", "0.\[PlusMinus]0.0001", 
                  "0.00001\[CircleTimes]-\[Nu]e\[Mu]CC"}}, TableHeadings -> {{
                  "Signal", "Background"}}], 
                
                TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
                  "0.35\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC"}, {
                  "1.\[PlusMinus]0.001", "0.\[PlusMinus]0.0001", 
                  "0.00001\[CircleTimes]+\!\(\(\[Nu]\&-\)\)e\[Mu]CC"}}, 
                  TableHeadings -> {{"Signal", "Background"}}]}, 
                TableHeadings -> {{0, 1, 2, 3}}]]}
          },
        RowSpacings->1,
        ColumnSpacings->3,
        RowAlignments->Baseline,
        ColumnAlignments->{Left}],
      TableForm[ {
        TableForm[ {{"NuFact", ""}, {"-------------"}, {{
          
          TableForm[ {"Baseline 3000. km", 
            "Average Density 3.5 g/\!\(cm\^\(-3\)\)", 
            "Profile Type Constant"}], 
          
          TableForm[ {"Target mass 50. kt", "Useful Muons 4.264e21", 
            "Nkt 2.132e23"}]}, 
          
          TableForm[ {"Energy treshold 4. GeV", "Beam energy 50. GeV", 
            "Bins 20", "Binwidth 2.3 GeV", "Energy resolution 0.15", 
            "Energy resolution function Linear"}]}}, TableDirections -> {
          Column, Row}], "--------------", 
        TableForm[ {
          
          TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
            "0.45\[CircleTimes]-\[Nu]e\[Mu]CC"}, {"0.00001\[PlusMinus]2.e-6", 
            "0.\[PlusMinus]0.0001", 
            "1.\[CircleTimes]-\!\(\(\[Nu]\&-\)\)\[Mu]\[Mu]CC"}}, 
            TableHeadings -> {{"Signal", "Background"}}], 
          
          TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
            "0.35\[CircleTimes]+\!\(\(\[Nu]\&-\)\)e\[Mu]CC"}, {
            "0.00001\[PlusMinus]2.e-6", "0.\[PlusMinus]0.0001", 
            "1.\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC"}}, TableHeadings -> {{
            "Signal", "Background"}}], 
          
          TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
            "0.45\[CircleTimes]-\!\(\(\[Nu]\&-\)\)\[Mu]\[Mu]CC"}, {
            "1.\[PlusMinus]0.001", "0.\[PlusMinus]0.0001", 
            "0.00001\[CircleTimes]-\[Nu]e\[Mu]CC"}}, TableHeadings -> {{
            "Signal", "Background"}}], 
          
          TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
            "0.35\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC"}, {"1.\[PlusMinus]0.001", 
            "0.\[PlusMinus]0.0001", 
            "0.00001\[CircleTimes]+\!\(\(\[Nu]\&-\)\)e\[Mu]CC"}}, 
            TableHeadings -> {{"Signal", "Background"}}]}, TableHeadings -> {{
          0, 1, 2, 3}}]}]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(MInitExperiment[NuFactverylongbaseline, ShowTab \[Rule] True, 
      MES \[Rule] True]\)], "Input"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {
            InterpretationBox[GridBox[{
                  {"\<\"NuFact\"\>", "\<\"\"\>"},
                  {"\<\"-------------\"\>", "\<\"\"\>"},
                  {GridBox[{
                        {
                          InterpretationBox[GridBox[{
                                {"\<\"Baseline 8000. km\"\>"},
                                {"\<\"Average Density 3.5 \
g/\\!\\(cm\\^\\(-3\\)\\)\"\>"},
                                {"\<\"Profile Type Constant\"\>"}
                                },
                              RowSpacings->1,
                              ColumnSpacings->3,
                              RowAlignments->Baseline,
                              ColumnAlignments->{Left}],
                            
                            TableForm[ {"Baseline 8000. km", 
                              "Average Density 3.5 g/\!\(cm\^\(-3\)\)", 
                              "Profile Type Constant"}]]},
                        {
                          InterpretationBox[GridBox[{
                                {"\<\"Target mass 50. kt\"\>"},
                                {"\<\"Useful Muons 4.264e21\"\>"},
                                {"\<\"Nkt 2.132e23\"\>"}
                                },
                              RowSpacings->1,
                              ColumnSpacings->3,
                              RowAlignments->Baseline,
                              ColumnAlignments->{Left}],
                            
                            TableForm[ {"Target mass 50. kt", 
                              "Useful Muons 4.264e21", "Nkt 2.132e23"}]]}
                        },
                      RowSpacings->0.25,
                      ColumnSpacings->1,
                      RowAlignments->Baseline,
                      ColumnAlignments->{Left}], 
                    InterpretationBox[GridBox[{
                          {"\<\"Energy treshold 4. GeV\"\>"},
                          {"\<\"Beam energy 50. GeV\"\>"},
                          {"\<\"Bins 20\"\>"},
                          {"\<\"Binwidth 2.3 GeV\"\>"},
                          {"\<\"Energy resolution 0.15\"\>"},
                          {"\<\"Energy resolution function Linear\"\>"}
                          },
                        RowSpacings->1,
                        ColumnSpacings->3,
                        RowAlignments->Baseline,
                        ColumnAlignments->{Left}],
                      
                      TableForm[ {"Energy treshold 4. GeV", 
                        "Beam energy 50. GeV", "Bins 20", "Binwidth 2.3 GeV", 
                        "Energy resolution 0.15", 
                        "Energy resolution function Linear"}]]}
                  },
                RowSpacings->1,
                ColumnSpacings->3,
                RowAlignments->Baseline,
                ColumnAlignments->{Left}],
              TableForm[ {{"NuFact", ""}, {"-------------"}, {{
                
                TableForm[ {"Baseline 8000. km", 
                  "Average Density 3.5 g/\!\(cm\^\(-3\)\)", 
                  "Profile Type Constant"}], 
                
                TableForm[ {"Target mass 50. kt", "Useful Muons 4.264e21", 
                  "Nkt 2.132e23"}]}, 
                
                TableForm[ {"Energy treshold 4. GeV", "Beam energy 50. GeV", 
                  "Bins 20", "Binwidth 2.3 GeV", "Energy resolution 0.15", 
                  "Energy resolution function Linear"}]}}, 
                TableDirections -> {Column, Row}]]},
          {"\<\"--------------\"\>"},
          {
            InterpretationBox[GridBox[{
                  {"0", 
                    TagBox[GridBox[{
                          {"\<\"Signal\"\>", "\<\"1\[PlusMinus]0.001\"\>", \
"\<\"0\[PlusMinus]0.0001\"\>", "\<\"0.45\[CircleTimes]-\[Nu]e\[Mu]CC\"\>"},
                          {"\<\"Background\"\>", \
"\<\"0.00001\[PlusMinus]2.e-6\"\>", "\<\"0.\[PlusMinus]0.0001\"\>", "\<\"1.\
\[CircleTimes]-\\!\\(\\(\[Nu]\\&-\\)\\)\[Mu]\[Mu]CC\"\>"}
                          },
                        RowSpacings->1,
                        ColumnSpacings->3,
                        RowAlignments->Baseline,
                        ColumnAlignments->{Left}],
                      Function[ BoxForm`e$, 
                        TableForm[ 
                        BoxForm`e$, TableHeadings -> {{"Signal", 
                          "Background"}}]]]},
                  {"1", 
                    TagBox[GridBox[{
                          {"\<\"Signal\"\>", "\<\"1\[PlusMinus]0.001\"\>", \
"\<\"0\[PlusMinus]0.0001\"\>", \
"\<\"0.35\[CircleTimes]+\\!\\(\\(\[Nu]\\&-\\)\\)e\[Mu]CC\"\>"},
                          {"\<\"Background\"\>", \
"\<\"0.00001\[PlusMinus]2.e-6\"\>", "\<\"0.\[PlusMinus]0.0001\"\>", "\<\"1.\
\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC\"\>"}
                          },
                        RowSpacings->1,
                        ColumnSpacings->3,
                        RowAlignments->Baseline,
                        ColumnAlignments->{Left}],
                      Function[ BoxForm`e$, 
                        TableForm[ 
                        BoxForm`e$, TableHeadings -> {{"Signal", 
                          "Background"}}]]]},
                  {"2", 
                    TagBox[GridBox[{
                          {"\<\"Signal\"\>", "\<\"1\[PlusMinus]0.001\"\>", \
"\<\"0\[PlusMinus]0.0001\"\>", \
"\<\"0.45\[CircleTimes]-\\!\\(\\(\[Nu]\\&-\\)\\)\[Mu]\[Mu]CC\"\>"},
                          {"\<\"Background\"\>", \
"\<\"1.\[PlusMinus]0.001\"\>", "\<\"0.\[PlusMinus]0.0001\"\>", "\<\"0.00001\
\[CircleTimes]-\[Nu]e\[Mu]CC\"\>"}
                          },
                        RowSpacings->1,
                        ColumnSpacings->3,
                        RowAlignments->Baseline,
                        ColumnAlignments->{Left}],
                      Function[ BoxForm`e$, 
                        TableForm[ 
                        BoxForm`e$, TableHeadings -> {{"Signal", 
                          "Background"}}]]]},
                  {"3", 
                    TagBox[GridBox[{
                          {"\<\"Signal\"\>", "\<\"1\[PlusMinus]0.001\"\>", \
"\<\"0\[PlusMinus]0.0001\"\>", \
"\<\"0.35\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC\"\>"},
                          {"\<\"Background\"\>", \
"\<\"1.\[PlusMinus]0.001\"\>", "\<\"0.\[PlusMinus]0.0001\"\>", "\<\"0.00001\
\[CircleTimes]+\\!\\(\\(\[Nu]\\&-\\)\\)e\[Mu]CC\"\>"}
                          },
                        RowSpacings->1,
                        ColumnSpacings->3,
                        RowAlignments->Baseline,
                        ColumnAlignments->{Left}],
                      Function[ BoxForm`e$, 
                        TableForm[ 
                        BoxForm`e$, TableHeadings -> {{"Signal", 
                          "Background"}}]]]}
                  },
                RowSpacings->1,
                ColumnSpacings->3,
                RowAlignments->Baseline,
                ColumnAlignments->{Left}],
              TableForm[ {
                
                TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
                  "0.45\[CircleTimes]-\[Nu]e\[Mu]CC"}, {
                  "0.00001\[PlusMinus]2.e-6", "0.\[PlusMinus]0.0001", 
                  "1.\[CircleTimes]-\!\(\(\[Nu]\&-\)\)\[Mu]\[Mu]CC"}}, 
                  TableHeadings -> {{"Signal", "Background"}}], 
                
                TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
                  "0.35\[CircleTimes]+\!\(\(\[Nu]\&-\)\)e\[Mu]CC"}, {
                  "0.00001\[PlusMinus]2.e-6", "0.\[PlusMinus]0.0001", 
                  "1.\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC"}}, TableHeadings -> {{
                  "Signal", "Background"}}], 
                
                TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
                  "0.45\[CircleTimes]-\!\(\(\[Nu]\&-\)\)\[Mu]\[Mu]CC"}, {
                  "1.\[PlusMinus]0.001", "0.\[PlusMinus]0.0001", 
                  "0.00001\[CircleTimes]-\[Nu]e\[Mu]CC"}}, TableHeadings -> {{
                  "Signal", "Background"}}], 
                
                TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
                  "0.35\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC"}, {
                  "1.\[PlusMinus]0.001", "0.\[PlusMinus]0.0001", 
                  "0.00001\[CircleTimes]+\!\(\(\[Nu]\&-\)\)e\[Mu]CC"}}, 
                  TableHeadings -> {{"Signal", "Background"}}]}, 
                TableHeadings -> {{0, 1, 2, 3}}]]}
          },
        RowSpacings->1,
        ColumnSpacings->3,
        RowAlignments->Baseline,
        ColumnAlignments->{Left}],
      TableForm[ {
        TableForm[ {{"NuFact", ""}, {"-------------"}, {{
          
          TableForm[ {"Baseline 8000. km", 
            "Average Density 3.5 g/\!\(cm\^\(-3\)\)", 
            "Profile Type Constant"}], 
          
          TableForm[ {"Target mass 50. kt", "Useful Muons 4.264e21", 
            "Nkt 2.132e23"}]}, 
          
          TableForm[ {"Energy treshold 4. GeV", "Beam energy 50. GeV", 
            "Bins 20", "Binwidth 2.3 GeV", "Energy resolution 0.15", 
            "Energy resolution function Linear"}]}}, TableDirections -> {
          Column, Row}], "--------------", 
        TableForm[ {
          
          TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
            "0.45\[CircleTimes]-\[Nu]e\[Mu]CC"}, {"0.00001\[PlusMinus]2.e-6", 
            "0.\[PlusMinus]0.0001", 
            "1.\[CircleTimes]-\!\(\(\[Nu]\&-\)\)\[Mu]\[Mu]CC"}}, 
            TableHeadings -> {{"Signal", "Background"}}], 
          
          TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
            "0.35\[CircleTimes]+\!\(\(\[Nu]\&-\)\)e\[Mu]CC"}, {
            "0.00001\[PlusMinus]2.e-6", "0.\[PlusMinus]0.0001", 
            "1.\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC"}}, TableHeadings -> {{
            "Signal", "Background"}}], 
          
          TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
            "0.45\[CircleTimes]-\!\(\(\[Nu]\&-\)\)\[Mu]\[Mu]CC"}, {
            "1.\[PlusMinus]0.001", "0.\[PlusMinus]0.0001", 
            "0.00001\[CircleTimes]-\[Nu]e\[Mu]CC"}}, TableHeadings -> {{
            "Signal", "Background"}}], 
          
          TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
            "0.35\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC"}, {"1.\[PlusMinus]0.001", 
            "0.\[PlusMinus]0.0001", 
            "0.00001\[CircleTimes]+\!\(\(\[Nu]\&-\)\)e\[Mu]CC"}}, 
            TableHeadings -> {{"Signal", "Background"}}]}, TableHeadings -> {{
          0, 1, 2, 3}}]}]]], "Output"]
}, Open  ]],

Cell[TextData[{
  "The flag",
  " ",
  StyleBox["ShowTab",
    FontFamily->"Courier"],
  " (",
  StyleBox["True",
    FontFamily->"Courier"],
  "/",
  StyleBox["False",
    FontFamily->"Courier"],
  ") tells the software if we want to see an initialization summary of the \
experiment, the flag ",
  StyleBox["MES",
    FontFamily->"Courier"],
  " (",
  StyleBox["True",
    FontFamily->"Courier"],
  "/",
  StyleBox["False",
    FontFamily->"Courier"],
  ") refers to \"",
  StyleBox["Multiple Experiment Support",
    FontWeight->"Bold"],
  "\". If it is ",
  StyleBox["True",
    FontFamily->"Courier"],
  ", each consecutive call of ",
  StyleBox["MInitExperiment",
    FontFamily->"Courier"],
  " will add a new experiment, if it is ",
  StyleBox["False",
    FontFamily->"Courier"],
  ", the existing experiment (if any) will be replaced. "
}], "Text"],

Cell["We can immediately check what we have initialized so far:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(MInfoExperiment[]\)], "Input"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {
            InterpretationBox[GridBox[{
                  {GridBox[{
                        {
                          TagBox[
                            StyleBox["\<\"0 NuFact\"\>",
                              FontWeight->"Heavy"],
                            (StyleForm[ #, FontWeight -> Heavy]&)]},
                        {
                          InterpretationBox[GridBox[{
                                {"\<\"Baseline 3000. km\"\>"},
                                {"\<\"Average Density 3.5 \
g/\\!\\(cm\\^\\(-3\\)\\)\"\>"},
                                {"\<\"Profile Type Constant\"\>"}
                                },
                              RowSpacings->1,
                              ColumnSpacings->3,
                              RowAlignments->Baseline,
                              ColumnAlignments->{Left}],
                            
                            TableForm[ {"Baseline 3000. km", 
                              "Average Density 3.5 g/\!\(cm\^\(-3\)\)", 
                              "Profile Type Constant"}]]},
                        {
                          InterpretationBox[GridBox[{
                                {"\<\"Target mass 50. kt\"\>"},
                                {"\<\"Useful Muons 4.264e21\"\>"},
                                {"\<\"Nkt 2.132e23\"\>"}
                                },
                              RowSpacings->1,
                              ColumnSpacings->3,
                              RowAlignments->Baseline,
                              ColumnAlignments->{Left}],
                            
                            TableForm[ {"Target mass 50. kt", 
                              "Useful Muons 4.264e21", "Nkt 2.132e23"}]]}
                        },
                      RowSpacings->0.25,
                      ColumnSpacings->1,
                      RowAlignments->Baseline,
                      ColumnAlignments->{Left}], 
                    InterpretationBox[GridBox[{
                          {"\<\"Energy treshold 4. GeV\"\>"},
                          {"\<\"Beam energy 50. GeV\"\>"},
                          {"\<\"Bins 20\"\>"},
                          {"\<\"Binwidth 2.3 GeV\"\>"},
                          {"\<\"Energy resolution 0.15\"\>"},
                          {"\<\"Energy resolution function Linear\"\>"}
                          },
                        RowSpacings->1,
                        ColumnSpacings->3,
                        RowAlignments->Baseline,
                        ColumnAlignments->{Left}],
                      
                      TableForm[ {"Energy treshold 4. GeV", 
                        "Beam energy 50. GeV", "Bins 20", "Binwidth 2.3 GeV", 
                        "Energy resolution 0.15", 
                        "Energy resolution function Linear"}]]},
                  {"\<\"                                        \"\>", \
"\<\"\"\>"}
                  },
                RowSpacings->1,
                ColumnSpacings->3,
                RowAlignments->Baseline,
                ColumnAlignments->{Left}],
              TableForm[ {{{
                StyleForm[ "0 NuFact", FontWeight -> Heavy], 
                
                TableForm[ {"Baseline 3000. km", 
                  "Average Density 3.5 g/\!\(cm\^\(-3\)\)", 
                  "Profile Type Constant"}], 
                
                TableForm[ {"Target mass 50. kt", "Useful Muons 4.264e21", 
                  "Nkt 2.132e23"}]}, 
                
                TableForm[ {"Energy treshold 4. GeV", "Beam energy 50. GeV", 
                  "Bins 20", "Binwidth 2.3 GeV", "Energy resolution 0.15", 
                  "Energy resolution function Linear"}]}, 
                "                                        "}]]},
          {"\<\"______________________________________________________________\
__________________\"\>"},
          {
            InterpretationBox[GridBox[{
                  {GridBox[{
                        {
                          TagBox[
                            StyleBox["\<\"1 NuFact\"\>",
                              FontWeight->"Heavy"],
                            (StyleForm[ #, FontWeight -> Heavy]&)]},
                        {
                          InterpretationBox[GridBox[{
                                {"\<\"Baseline 8000. km\"\>"},
                                {"\<\"Average Density 3.5 \
g/\\!\\(cm\\^\\(-3\\)\\)\"\>"},
                                {"\<\"Profile Type Constant\"\>"}
                                },
                              RowSpacings->1,
                              ColumnSpacings->3,
                              RowAlignments->Baseline,
                              ColumnAlignments->{Left}],
                            
                            TableForm[ {"Baseline 8000. km", 
                              "Average Density 3.5 g/\!\(cm\^\(-3\)\)", 
                              "Profile Type Constant"}]]},
                        {
                          InterpretationBox[GridBox[{
                                {"\<\"Target mass 50. kt\"\>"},
                                {"\<\"Useful Muons 4.264e21\"\>"},
                                {"\<\"Nkt 2.132e23\"\>"}
                                },
                              RowSpacings->1,
                              ColumnSpacings->3,
                              RowAlignments->Baseline,
                              ColumnAlignments->{Left}],
                            
                            TableForm[ {"Target mass 50. kt", 
                              "Useful Muons 4.264e21", "Nkt 2.132e23"}]]}
                        },
                      RowSpacings->0.25,
                      ColumnSpacings->1,
                      RowAlignments->Baseline,
                      ColumnAlignments->{Left}], 
                    InterpretationBox[GridBox[{
                          {"\<\"Energy treshold 4. GeV\"\>"},
                          {"\<\"Beam energy 50. GeV\"\>"},
                          {"\<\"Bins 20\"\>"},
                          {"\<\"Binwidth 2.3 GeV\"\>"},
                          {"\<\"Energy resolution 0.15\"\>"},
                          {"\<\"Energy resolution function Linear\"\>"}
                          },
                        RowSpacings->1,
                        ColumnSpacings->3,
                        RowAlignments->Baseline,
                        ColumnAlignments->{Left}],
                      
                      TableForm[ {"Energy treshold 4. GeV", 
                        "Beam energy 50. GeV", "Bins 20", "Binwidth 2.3 GeV", 
                        "Energy resolution 0.15", 
                        "Energy resolution function Linear"}]]},
                  {"\<\"                                        \"\>", \
"\<\"\"\>"}
                  },
                RowSpacings->1,
                ColumnSpacings->3,
                RowAlignments->Baseline,
                ColumnAlignments->{Left}],
              TableForm[ {{{
                StyleForm[ "1 NuFact", FontWeight -> Heavy], 
                
                TableForm[ {"Baseline 8000. km", 
                  "Average Density 3.5 g/\!\(cm\^\(-3\)\)", 
                  "Profile Type Constant"}], 
                
                TableForm[ {"Target mass 50. kt", "Useful Muons 4.264e21", 
                  "Nkt 2.132e23"}]}, 
                
                TableForm[ {"Energy treshold 4. GeV", "Beam energy 50. GeV", 
                  "Bins 20", "Binwidth 2.3 GeV", "Energy resolution 0.15", 
                  "Energy resolution function Linear"}]}, 
                "                                        "}]]},
          {"\<\"______________________________________________________________\
__________________\"\>"}
          },
        RowSpacings->1,
        ColumnSpacings->3,
        RowAlignments->Baseline,
        ColumnAlignments->{Left}],
      TableForm[ {
        TableForm[ {{{
          StyleForm[ "0 NuFact", FontWeight -> Heavy], 
          
          TableForm[ {"Baseline 3000. km", 
            "Average Density 3.5 g/\!\(cm\^\(-3\)\)", 
            "Profile Type Constant"}], 
          
          TableForm[ {"Target mass 50. kt", "Useful Muons 4.264e21", 
            "Nkt 2.132e23"}]}, 
          
          TableForm[ {"Energy treshold 4. GeV", "Beam energy 50. GeV", 
            "Bins 20", "Binwidth 2.3 GeV", "Energy resolution 0.15", 
            "Energy resolution function Linear"}]}, 
          "                                        "}], 
        "_____________________________________________________________________\
___________", 
        TableForm[ {{{
          StyleForm[ "1 NuFact", FontWeight -> Heavy], 
          
          TableForm[ {"Baseline 8000. km", 
            "Average Density 3.5 g/\!\(cm\^\(-3\)\)", 
            "Profile Type Constant"}], 
          
          TableForm[ {"Target mass 50. kt", "Useful Muons 4.264e21", 
            "Nkt 2.132e23"}]}, 
          
          TableForm[ {"Energy treshold 4. GeV", "Beam energy 50. GeV", 
            "Bins 20", "Binwidth 2.3 GeV", "Energy resolution 0.15", 
            "Energy resolution function Linear"}]}, 
          "                                        "}], 
        "_____________________________________________________________________\
___________"}]]], "Output"]
}, Open  ]],

Cell[TextData[{
  "A lot of options can or have to be directly set at the experiment \
initialization. They are contained in the options/rule lists describing the \
experiments, such as ",
  StyleBox["NuFact:",
    FontFamily->"Courier"]
}], "Text"],

Cell[TextData[{
  StyleBox["Baseline",
    FontFamily->"Courier"],
  " represents the experiment's baseline length."
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell[TextData[{
  StyleBox["Profile",
    FontFamily->"Courier"],
  " can be set either to ",
  StyleBox["Constant",
    FontFamily->"Courier"],
  " or",
  StyleBox[" Stacey",
    FontFamily->"Courier"],
  ". For ",
  StyleBox["Constant",
    FontFamily->"Courier"],
  ", ",
  StyleBox["Density",
    FontFamily->"Courier"],
  " sets the average matter density value. For ",
  StyleBox["Stacey",
    FontFamily->"Courier"],
  ", the number of steps of the matter density profile has to be given with \
",
  StyleBox["ProfileSteps",
    FontFamily->"Courier"],
  ". The matter density profile can also be changed with ",
  StyleBox["MChangeProfile",
    FontFamily->"Courier"],
  " after the initialization. In addition, note that ",
  StyleBox["MSetBaseline",
    FontFamily->"Courier"],
  " after the initialization does not re-initialize the matter density \
profile and may lead to wrong results if not used with a constant matter \
density or together with ",
  StyleBox["MChangeProfile",
    FontFamily->"Courier"],
  " for setting the correct profile. "
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell[TextData[{
  StyleBox["TargetMass",
    FontFamily->"Courier"],
  " sets the target mass and ",
  StyleBox["Muons",
    FontFamily->"Courier"],
  " the total number of useful muon decays. Luminosity changes should be \
carried out by ",
  StyleBox["TargetMass,",
    FontFamily->"Courier"],
  " since ",
  StyleBox["Muons",
    FontFamily->"Courier"],
  " only affects the neutrino factories."
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell[TextData[{
  StyleBox["Channels",
    FontFamily->"Courier"],
  " and ",
  StyleBox["Rules",
    FontFamily->"Courier"],
  " contain the channel and rule encodings as described in the first part. \
The exact format shall not be discussed here, but can be easily seen in the \
comparison of the initialization summary with the rule lists."
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell[TextData[{
  StyleBox["BeamEnergy",
    FontFamily->"Courier"],
  " sets the beam energy."
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell[TextData[{
  StyleBox["Bins",
    FontFamily->"Courier"],
  " sets the number of energy bins used, which are equally splitting the \
energy range between ",
  StyleBox["EnergyThreshold",
    FontFamily->"Courier"],
  " and ",
  StyleBox["BeamEnergy",
    FontFamily->"Courier"],
  "."
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell[TextData[{
  StyleBox["BeamType",
    FontFamily->"Courier"],
  " refers to the beam spectrum used for the experiment. It is loaded from an \
external file."
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell[TextData[{
  StyleBox["ErrorDim",
    FontFamily->"Courier"],
  " sets the error dimension, i.e., the number of the systematical priors to \
be minimized over. The error dimension \"0\" refers to four parameters: \
signal and background normalizations and tilts. The error dimension \"1\" \
refers to six parameters: the ones included in \"0\" and the uncertainties in \
the energy threshold function. For this error dimension, ",
  StyleBox["ErrorFunction",
    FontFamily->"Courier"],
  " has to be set to \"1\" and ",
  StyleBox["ThresholdErrors",
    FontFamily->"Courier"],
  " to the respective uncertainty values (see below). The error dimension \"2\
\" switches off the systematical error minimizor entirely. The error \
dimension \"3\" is especially used for",
  " ",
  StyleBox["JHFHKAll",
    FontFamily->"Courier"],
  " so far, which uses spectra for QE events and total rates for non-QE \
events.  Note that ",
  StyleBox["ErrorDim",
    FontFamily->"Courier"],
  " ",
  "can be either used with a single value for all rules, or with a list of \
values successively applied to each rule."
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell[TextData[{
  StyleBox["ErrorFunction",
    FontFamily->"Courier"],
  " refers to the low energy threshold function. It is \"0\" for all \
experiments (no threshold function), but the neutrino factories take \"1\" as \
parameter value (threshold function switched on). The parameter value \"2\" \
has a different function: it switches on a different function for better \
simulating the X-sections at the JHF experiments.  For the parameter value \
\"1\" a linear threshold function at the position ",
  StyleBox["ThresholdCenter",
    FontFamily->"Courier"],
  " (pivot) is switched on.  Climbing linearly from 0 to 1, it is \
parameterized as {E",
  Cell[BoxData[
      \(TraditionalForm\`\_\(1/2\)\)]],
  ", \[CapitalDelta]E}, where E",
  Cell[BoxData[
      \(TraditionalForm\`\_\(1/2\)\)]],
  "is the position of the value 1/2 and \[CapitalDelta]E is the interval \
between the value 0 and 1/2 or 1/2 and 1, respectively.  In addition, \
(absolute) uncertainties on these two parameters can be set by ",
  StyleBox["ThresholdErrors",
    FontFamily->"Courier"],
  ", which is, however, only active for the error dimension value 1 (see ",
  StyleBox["ErrorDim",
    FontFamily->"Courier"],
  "). Note that ",
  StyleBox["ThresholdCenter",
    FontFamily->"Courier"],
  " and ",
  StyleBox["ThresholdErrors",
    FontFamily->"Courier"],
  " can be either used with a single value for all rules, or with a list of \
values successively applied to each rule."
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell[TextData[{
  StyleBox["EnergyResolution",
    FontFamily->"Courier"],
  " sets the energy resolution as the leading factor for ",
  StyleBox["EnergyResolutionFunction",
    FontFamily->"Courier"],
  " being ",
  StyleBox["Linear",
    FontFamily->"Courier"],
  " or ",
  StyleBox["Constant",
    FontFamily->"Courier"],
  ". Alternatively, ",
  StyleBox["EnergyResolutionFunction",
    FontFamily->"Courier"],
  " can be set to a user-defined function (pure function), for which ",
  StyleBox["EnergyResolution",
    FontFamily->"Courier"],
  " does not have an effect. Both options can be either used with a single \
value for all rules, or with a list of values successively applied to each \
rule."
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Setting the oscillation parameters", "Section"],

Cell["\<\
Setting the oscillation parameters essentially works as it works in \
the single-experiment version:\
\>", "Text"],

Cell[BoxData[
    \(SetVacuumParameters[N[9999], N[ArcSin[Sqrt[0.01]]/2], N[\[Pi]/4], 
      N[0]]\)], "Input"],

Cell[BoxData[
    \(SetMasses[N[RescaledSMD], N[3.0*10^\(-3\)]]\)], "Input"],

Cell[BoxData[
    \(SetRates[]\)], "Input"],

Cell[TextData[{
  "However, the ",
  StyleBox["SetDensity",
    FontFamily->"Courier"],
  " command to re-set the density before the",
  StyleBox[" ChiTheta",
    FontFamily->"Courier"],
  " and ",
  StyleBox["ChiDelta",
    FontFamily->"Courier"],
  " routines becomes obsolete, since it is now included in ",
  StyleBox["SetRates",
    FontFamily->"Courier"],
  "."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  "Calculating ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  " with systematics: ",
  StyleBox["ChiNew",
    FontFamily->"Courier"]
}], "Section"],

Cell[TextData[{
  StyleBox["ChiNew",
    FontFamily->"Courier"],
  " gives the ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "-value for the vector ",
  StyleBox["{",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)],
    FontWeight->"Bold"],
  StyleBox[", \[Delta],  ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_21\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_32\%2\),
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Rho]\_1\)],
    FontWeight->"Bold"],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`\[Rho]\_2\)],
    FontWeight->"Bold"],
  ", ...",
  StyleBox["}",
    FontWeight->"Bold"],
  " and the true parameters set with ",
  StyleBox["SetVacuumParameters",
    FontFamily->"Courier"],
  " and ",
  StyleBox["SetMasses",
    FontFamily->"Courier"],
  ". The only new feature for the multiple experiment support is that the \
density priors are minimized for each experiment independently, i.e., each \
experiment measures the average matter density along its baseline within \
certain limits. Thus, we have to tell ",
  StyleBox["ChiNew",
    FontFamily->"Courier"],
  " the values for all densities of all experiments. Here, we use the two \
different experiments initialized above:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(ChiNew[
      N[{N[ArcSin[Sqrt[0.011]]/2], \[Pi]/4, 0, RescaledSMD, 0.003, 1, 
          1}]]\)\(\ \ \ \)\)\)], "Input"],

Cell[BoxData[
    \(68.42946413596793`\)], "Output"]
}, Open  ]],

Cell["\<\
Format change: the density priors are now given in relative units \
of the initialized profile, since the new version also supports more \
complicated matter density profiles than constant density profiles.\
\>", \
"Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell[TextData[{
  "As a new function, ",
  StyleBox["SingleChiNew",
    FontFamily->"Courier"],
  " can evaluate the ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "-value for each experiment independently. It takes, as parameters, the \
parameter vector ",
  StyleBox["{",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)],
    FontWeight->"Bold"],
  StyleBox[", \[Delta],  ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_21\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_32\%2\),
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Rho]\)],
    FontWeight->"Bold"],
  "}",
  " for the targeted experiment and, as an integer number, the number of the \
experiment counted from 0:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(s0\)\(=\)\(SingleChiNew[
        N[{N[ArcSin[Sqrt[0.011]]/2], \[Pi]/4, 0, RescaledSMD, 0.003, 1}], 
        0]\)\(\ \ \ \)\)\)], "Input"],

Cell[BoxData[
    \(42.01199247515408`\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(s1\)\(=\)\(SingleChiNew[
        N[{N[ArcSin[Sqrt[0.011]]/2], \[Pi]/4, 0, RescaledSMD, 0.003, 1}], 
        1]\)\(\ \ \ \)\)\)], "Input"],

Cell[BoxData[
    \(26.41747166081385`\)], "Output"]
}, Open  ]],

Cell[TextData[{
  "For ",
  StyleBox["ChiNew",
    FontFamily->"Courier"],
  ", the ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "-values of the individual experiments add up to the one of the combined \
experiments, since the systematics is minimized over independently for all \
experiments:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(s0 + s1\)], "Input"],

Cell[BoxData[
    \(68.42946413596793`\)], "Output"]
}, Open  ]],

Cell[TextData[{
  "We will not observe this adding up with ",
  StyleBox["ChiTheta",
    FontFamily->"Courier"],
  " and ",
  StyleBox["ChiDelta",
    FontFamily->"Courier"],
  ", because they include the minimization over oscillation parameters common \
to both experiments. In addition, external input will only be counted once. "
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  "Calculating ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  " with systematics and correlations: The minimizers"
}], "Section"],

Cell[TextData[{
  "Before we can use the minimizers, we again have to use ",
  StyleBox["SetInputErrors",
    FontFamily->"Courier"],
  " and ",
  StyleBox["SetStartingValues",
    FontFamily->"Courier"],
  " as above, but with the densities given as relative quantities and the \
respective names starting with an \"M\":"
}], "Text"],

Cell[BoxData[
    \(\(MSetInputErrors[N[10], N[10], N[10], N[RescaledSMD\ 0.15], N[1], 
        N[1*0.05]];\)\)], "Input"],

Cell[BoxData[
    \(\(MSetStartingValues[ArcSin[Sqrt[0.01]]/2, N[\[Pi]/4], N[0], 
        N[RescaledSMD], N[3.0*10^\(-3\)], N[1]];\)\)], "Input"],

Cell["\<\
Note that, since there is more than one density prior involved, one \
can also use a list of densities instead one for all priors!\
\>", "Text"],

Cell[TextData[{
  StyleBox["ChiTheta",
    FontFamily->"Courier"],
  " then needs as many (relative) density values as experiments and also \
returns their values corresponding to the local minimum found:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(ChiTheta[
      N[ArcSin[Sqrt[0.011]]/2], {\[Pi]/4, 0, RescaledSMD, 0.003, 1, 1} // 
        N]\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \({6.8131522939906715`, 0.7724976479832887`, 0.32915572162342177`, 
      0.00003901362817048724`, 0.003003192942866523`, 1.0513525623737885`, 
      1.0156115891620585`, 1449.`}\)], "Output"]
}, Open  ]],

Cell[TextData[{
  "Similar to ",
  StyleBox["SingleChiNew",
    FontFamily->"Courier"],
  ", ",
  StyleBox["SingleChiTheta",
    FontFamily->"Courier"],
  " allows to calculate the ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "-value for one experiment only, which is given as the last parameter:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(t0\)\(\ \)\(=\)\(\ \)\(SingleChiTheta[
        N[ArcSin[Sqrt[0.011]]/2], {\[Pi]/4, 0, RescaledSMD, 0.003, 1} // N, 
        0]\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \({1.2261587860284622`, 0.7633144503601014`, 0.2192699113801209`, 
      0.00003769115768872273`, 0.003006509369565984`, 1.033721745014227`, 
      1498.`}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(t1\)\(\ \)\(=\)\(\ \ \)\(SingleChiTheta[
        N[ArcSin[Sqrt[0.011]]/2], {\[Pi]/4, 0, RescaledSMD, 0.003, 1} // N, 
        1]\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \({4.4503540809671165`, 0.7737006842379983`, 0.5582095706369885`, 
      0.000043088654671043645`, 0.003000966378546977`, 1.0121496320810315`, 
      890.`}\)], "Output"]
}, Open  ]],

Cell["\<\
Note that one needs only one density value in these cases and that \
the experiment number needs to be an integer number starting with \
\"0\"!\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(t0[\([1]\)] + t1[\([1]\)]\)], "Input"],

Cell[BoxData[
    \(5.676512866995578`\)], "Output"]
}, Open  ]],

Cell[TextData[{
  "In this case, the combined minimization seems to provide better results \
than for the individual",
  Cell[BoxData[
      \(TraditionalForm\`\(\[Chi]\^2\)' s\)]],
  " added - the partly complementary information can be used in favor of the \
experiments, though the external input function is added ",
  StyleBox["twice",
    FontSlant->"Italic"],
  " when adding the individual",
  Cell[BoxData[
      \(TraditionalForm\`\(\[Chi]\^2\)' s\)]],
  ", since each minimizer uses the external input ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "-function once. Thus, one needs to be careful interpreting these two \
results!"
}], "Text"],

Cell[TextData[{
  "The following functions work in a similar way: \n",
  StyleBox["ChiDelta",
    FontFamily->"Courier"],
  " minimizes with respect to \[Delta] fixed,\n",
  StyleBox["ChiDm",
    FontFamily->"Courier"],
  " minimizes with respect to ",
  Cell[BoxData[
      \(TraditionalForm\`\[CapitalDelta]m\_23\%2\)]],
  " fixed,\n",
  StyleBox["ChiTheta23",
    FontFamily->"Courier"],
  " minimizes with respect to ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)]],
  "fixed."
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  "Finding degenerate solutions: ",
  StyleBox["ChiAll",
    FontFamily->"Courier"]
}], "Section"],

Cell[TextData[{
  StyleBox["ChiAll",
    FontFamily->"Courier"],
  " works as it used to but with as many (relative) density values as \
experiments."
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell[TextData[{
  "However, the application of ",
  StyleBox["ChiAll",
    FontFamily->"Courier"],
  " to find degenerate solutions is somewhat more tricky with more \
experiments. First, they may alter the topology, and second, the degenerate \
solutions may disappear at all. "
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  "Returning rates/total rates ",
  "and the (\[Delta], ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  ") ambiguity"
}], "Section"],

Cell["\<\
The new function RatesInfo to return rates is quite comfortable and \
offers quite a number of options.\
\>", "Text"],

Cell[TextData[{
  StyleBox["RatesInfo[Experiment_Number,Rule_Number]",
    FontFamily->"Courier"],
  " returns the (total) rate information for the signal and background of the \
indicated experiment and rule."
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell["For example:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(RatesInfo[0, 0]\)], "Input"],

Cell[BoxData[
    TagBox[GridBox[{
          {"\<\"Signal\"\>"},
          {"7712.355558369094`"},
          {"\<\"Background\"\>"},
          {"95.09599705605434`"}
          },
        RowSpacings->1,
        ColumnSpacings->3,
        RowAlignments->Baseline,
        ColumnAlignments->{Left}],
      Function[ BoxForm`e$, 
        TableForm[ 
        BoxForm`e$, TableDirection -> {Column, Row, Row}]]]], "Output"]
}, Open  ]],

Cell["There are several options (pre-set values underlined):", "Text"],

Cell[TextData[{
  StyleBox["FiducialVolume",
    FontFamily->"Courier"],
  " (",
  StyleBox["True/",
    FontFamily->"Courier"],
  StyleBox["False",
    FontFamily->"Courier",
    FontVariations->{"Underline"->True}],
  ") shows all events in the fiducial volume, i.e., excludes all pre-factors, \
such as efficiencies."
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell[TextData[{
  StyleBox["SeperateBackground",
    FontFamily->"Courier"],
  " (",
  StyleBox["True/",
    FontFamily->"Courier"],
  StyleBox["False",
    FontFamily->"Courier",
    FontVariations->{"Underline"->True}],
  ") splits up the background into all components"
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell[TextData[{
  StyleBox["PrettyOutput",
    FontFamily->"Courier"],
  " (",
  StyleBox["True",
    FontFamily->"Courier",
    FontVariations->{"Underline"->True}],
  StyleBox["/False",
    FontFamily->"Courier"],
  ") returns the results as table/diagram instead of list(s) of data"
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell[TextData[{
  StyleBox["Spectrum",
    FontFamily->"Courier"],
  " (",
  StyleBox["True/",
    FontFamily->"Courier"],
  StyleBox["False",
    FontFamily->"Courier",
    FontVariations->{"Underline"->True}],
  ") shows the energy-dependent spectrum. \nAs additional option, it can be \
shown ",
  StyleBox["Logarithmic",
    FontFamily->"Courier"],
  " (",
  StyleBox["True/",
    FontFamily->"Courier"],
  StyleBox["False",
    FontFamily->"Courier",
    FontVariations->{"Underline"->True}],
  ")."
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell["Additional examples:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(RatesInfo[0, 0, Spectrum \[Rule] True, \ 
      PrettyOutput \[Rule] False]\)], "Input"],

Cell[BoxData[
    \({{8.084855828837824`, 57.69235266248389`, 140.3989631017325`, 
        241.75485608520643`, 352.66390700233796`, 466.9510956679116`, 
        579.617067285934`, 636.4581881870055`, 640.3391346336601`, 
        632.8404444783571`, 614.554794134059`, 585.9002576882752`, 
        547.1951218359154`, 498.81635514373875`, 441.6769438261541`, 
        378.0000671263183`, 311.65516756300934`, 247.41977439285128`, 
        189.56641964523746`, 140.7697920800676`}, {0.0012947939114704829`, 
        0.0024259912193529986`, 0.02783003537466676`, 0.12715670753142186`, 
        0.3568686548318448`, 0.7754578448657289`, 1.440952064823424`, 
        2.2335142453801953`, 3.0486799209041484`, 3.97796473157553`, 
        5.008246725646288`, 6.1224570424683895`, 7.296377972463446`, 
        8.478435442246106`, 9.539913735660054`, 10.254339308171417`, 
        10.390734924697464`, 9.86145204783776`, 8.777183745912808`, 
        7.374711120532843`}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(RatesInfo[0, 0, Spectrum \[Rule] True, \ 
      PrettyOutput \[Rule] True]\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .74074 
%%ImageSize: 400 296.296 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.376543 0.352734 0.37037 0.352734 [
[ 0 0 0 0 ]
[ 1 .74074 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
% Start of sub-graphic
p
0.0238095 0.0176367 0.729277 0.723104 MathSubStart
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-0.0884276 0.0217936 0.0238076 0.00148731 [
[.12951 -0.0125 -7 -10.9375 ]
[.12951 -0.0125 7 0 ]
[.34744 -0.0125 -7 -10.9375 ]
[.34744 -0.0125 7 0 ]
[.56538 -0.0125 -7 -10.9375 ]
[.56538 -0.0125 7 0 ]
[.78332 -0.0125 -7 -10.9375 ]
[.78332 -0.0125 7 0 ]
[ 0 0 -0.125 0 ]
[-0.0125 .02381 -9 -5.46875 ]
[-0.0125 .02381 0 5.46875 ]
[-0.0125 .17254 -19 -5.46875 ]
[-0.0125 .17254 0 5.46875 ]
[-0.0125 .32127 -19 -5.46875 ]
[-0.0125 .32127 0 5.46875 ]
[-0.0125 .47 -19 -5.46875 ]
[-0.0125 .47 0 5.46875 ]
[-0.0125 .61873 -19 -5.46875 ]
[-0.0125 .61873 0 5.46875 ]
[-0.0125 .76746 -19 -5.5 ]
[-0.0125 .76746 0 5.5 ]
[-0.0125 .91619 -19 -5.46875 ]
[-0.0125 .91619 0 5.46875 ]
[ 0 0 -0.125 0 ]
[ 0 1 .125 0 ]
[ 1 0 .125 0 ]
[ 0 0 0 0 ]
[ 1 1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.12951 0 m
.12951 .00625 L
s
gsave
.12951 -0.0125 -68 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(10) show
1.000 setlinewidth
grestore
.34744 0 m
.34744 .00625 L
s
gsave
.34744 -0.0125 -68 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(20) show
1.000 setlinewidth
grestore
.56538 0 m
.56538 .00625 L
s
gsave
.56538 -0.0125 -68 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(30) show
1.000 setlinewidth
grestore
.78332 0 m
.78332 .00625 L
s
gsave
.78332 -0.0125 -68 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(40) show
1.000 setlinewidth
grestore
.125 Mabswid
.1731 0 m
.1731 .00375 L
s
.21668 0 m
.21668 .00375 L
s
.26027 0 m
.26027 .00375 L
s
.30386 0 m
.30386 .00375 L
s
.39103 0 m
.39103 .00375 L
s
.43462 0 m
.43462 .00375 L
s
.47821 0 m
.47821 .00375 L
s
.52179 0 m
.52179 .00375 L
s
.60897 0 m
.60897 .00375 L
s
.65256 0 m
.65256 .00375 L
s
.69614 0 m
.69614 .00375 L
s
.73973 0 m
.73973 .00375 L
s
.8269 0 m
.8269 .00375 L
s
.87049 0 m
.87049 .00375 L
s
.91408 0 m
.91408 .00375 L
s
.95767 0 m
.95767 .00375 L
s
.08592 0 m
.08592 .00375 L
s
.04233 0 m
.04233 .00375 L
s
.25 Mabswid
0 0 m
1 0 L
s
0 .02381 m
.00625 .02381 L
s
gsave
-0.0125 .02381 -70 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0) show
1.000 setlinewidth
grestore
0 .17254 m
.00625 .17254 L
s
gsave
-0.0125 .17254 -80 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(100) show
1.000 setlinewidth
grestore
0 .32127 m
.00625 .32127 L
s
gsave
-0.0125 .32127 -80 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(200) show
1.000 setlinewidth
grestore
0 .47 m
.00625 .47 L
s
gsave
-0.0125 .47 -80 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(300) show
1.000 setlinewidth
grestore
0 .61873 m
.00625 .61873 L
s
gsave
-0.0125 .61873 -80 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(400) show
1.000 setlinewidth
grestore
0 .76746 m
.00625 .76746 L
s
gsave
-0.0125 .76746 -80 -9.5 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 19 translate 1 -1 scale
63.000 11.875 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(500) show
1.000 setlinewidth
grestore
0 .91619 m
.00625 .91619 L
s
gsave
-0.0125 .91619 -80 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(600) show
1.000 setlinewidth
grestore
.125 Mabswid
0 .05355 m
.00375 .05355 L
s
0 .0833 m
.00375 .0833 L
s
0 .11305 m
.00375 .11305 L
s
0 .14279 m
.00375 .14279 L
s
0 .20228 m
.00375 .20228 L
s
0 .23203 m
.00375 .23203 L
s
0 .26178 m
.00375 .26178 L
s
0 .29152 m
.00375 .29152 L
s
0 .35102 m
.00375 .35102 L
s
0 .38076 m
.00375 .38076 L
s
0 .41051 m
.00375 .41051 L
s
0 .44025 m
.00375 .44025 L
s
0 .49975 m
.00375 .49975 L
s
0 .52949 m
.00375 .52949 L
s
0 .55924 m
.00375 .55924 L
s
0 .58899 m
.00375 .58899 L
s
0 .64848 m
.00375 .64848 L
s
0 .67822 m
.00375 .67822 L
s
0 .70797 m
.00375 .70797 L
s
0 .73772 m
.00375 .73772 L
s
0 .79721 m
.00375 .79721 L
s
0 .82696 m
.00375 .82696 L
s
0 .8567 m
.00375 .8567 L
s
0 .88645 m
.00375 .88645 L
s
0 .94594 m
.00375 .94594 L
s
0 .97569 m
.00375 .97569 L
s
.25 Mabswid
0 0 m
0 1 L
s
.12951 .99375 m
.12951 1 L
s
.34744 .99375 m
.34744 1 L
s
.56538 .99375 m
.56538 1 L
s
.78332 .99375 m
.78332 1 L
s
.125 Mabswid
.1731 .99625 m
.1731 1 L
s
.21668 .99625 m
.21668 1 L
s
.26027 .99625 m
.26027 1 L
s
.30386 .99625 m
.30386 1 L
s
.39103 .99625 m
.39103 1 L
s
.43462 .99625 m
.43462 1 L
s
.47821 .99625 m
.47821 1 L
s
.52179 .99625 m
.52179 1 L
s
.60897 .99625 m
.60897 1 L
s
.65256 .99625 m
.65256 1 L
s
.69614 .99625 m
.69614 1 L
s
.73973 .99625 m
.73973 1 L
s
.8269 .99625 m
.8269 1 L
s
.87049 .99625 m
.87049 1 L
s
.91408 .99625 m
.91408 1 L
s
.95767 .99625 m
.95767 1 L
s
.08592 .99625 m
.08592 1 L
s
.04233 .99625 m
.04233 1 L
s
.25 Mabswid
0 1 m
1 1 L
s
.99375 .02381 m
1 .02381 L
s
.99375 .17254 m
1 .17254 L
s
.99375 .32127 m
1 .32127 L
s
.99375 .47 m
1 .47 L
s
.99375 .61873 m
1 .61873 L
s
.99375 .76746 m
1 .76746 L
s
.99375 .91619 m
1 .91619 L
s
.125 Mabswid
.99625 .05355 m
1 .05355 L
s
.99625 .0833 m
1 .0833 L
s
.99625 .11305 m
1 .11305 L
s
.99625 .14279 m
1 .14279 L
s
.99625 .20228 m
1 .20228 L
s
.99625 .23203 m
1 .23203 L
s
.99625 .26178 m
1 .26178 L
s
.99625 .29152 m
1 .29152 L
s
.99625 .35102 m
1 .35102 L
s
.99625 .38076 m
1 .38076 L
s
.99625 .41051 m
1 .41051 L
s
.99625 .44025 m
1 .44025 L
s
.99625 .49975 m
1 .49975 L
s
.99625 .52949 m
1 .52949 L
s
.99625 .55924 m
1 .55924 L
s
.99625 .58899 m
1 .58899 L
s
.99625 .64848 m
1 .64848 L
s
.99625 .67822 m
1 .67822 L
s
.99625 .70797 m
1 .70797 L
s
.99625 .73772 m
1 .73772 L
s
.99625 .79721 m
1 .79721 L
s
.99625 .82696 m
1 .82696 L
s
.99625 .8567 m
1 .8567 L
s
.99625 .88645 m
1 .88645 L
s
.99625 .94594 m
1 .94594 L
s
.99625 .97569 m
1 .97569 L
s
.25 Mabswid
1 0 m
1 1 L
s
.001 w
.02381 .03583 m
.07393 .10961 L
.12406 .23262 L
.17419 .38337 L
.22431 .54833 L
.27444 .71831 L
.32456 .88588 L
.37469 .97042 L
.42481 .97619 L
.47494 .96504 L
.52506 .93784 L
.57519 .89522 L
.62531 .83766 L
.67544 .7657 L
.72556 .68072 L
.77569 .58601 L
.82581 .48734 L
.87594 .3918 L
.92607 .30575 L
.97619 .23318 L
s
.0001 w
.02381 .03583 -1.875 0 Mabsadd m
.02381 .03583 0 2.5 Mabsadd L
.02381 .03583 1.875 0 Mabsadd L
.02381 .03583 0 -2.5 Mabsadd L
.02381 .03583 -1.875 0 Mabsadd L closepath F
.07393 .10961 -1.875 0 Mabsadd m
.07393 .10961 0 2.5 Mabsadd L
.07393 .10961 1.875 0 Mabsadd L
.07393 .10961 0 -2.5 Mabsadd L
.07393 .10961 -1.875 0 Mabsadd L closepath F
.12406 .23262 -1.875 0 Mabsadd m
.12406 .23262 0 2.5 Mabsadd L
.12406 .23262 1.875 0 Mabsadd L
.12406 .23262 0 -2.5 Mabsadd L
.12406 .23262 -1.875 0 Mabsadd L closepath F
.17419 .38337 -1.875 0 Mabsadd m
.17419 .38337 0 2.5 Mabsadd L
.17419 .38337 1.875 0 Mabsadd L
.17419 .38337 0 -2.5 Mabsadd L
.17419 .38337 -1.875 0 Mabsadd L closepath F
.22431 .54833 -1.875 0 Mabsadd m
.22431 .54833 0 2.5 Mabsadd L
.22431 .54833 1.875 0 Mabsadd L
.22431 .54833 0 -2.5 Mabsadd L
.22431 .54833 -1.875 0 Mabsadd L closepath F
.27444 .71831 -1.875 0 Mabsadd m
.27444 .71831 0 2.5 Mabsadd L
.27444 .71831 1.875 0 Mabsadd L
.27444 .71831 0 -2.5 Mabsadd L
.27444 .71831 -1.875 0 Mabsadd L closepath F
.32456 .88588 -1.875 0 Mabsadd m
.32456 .88588 0 2.5 Mabsadd L
.32456 .88588 1.875 0 Mabsadd L
.32456 .88588 0 -2.5 Mabsadd L
.32456 .88588 -1.875 0 Mabsadd L closepath F
.37469 .97042 -1.875 0 Mabsadd m
.37469 .97042 0 2.5 Mabsadd L
.37469 .97042 1.875 0 Mabsadd L
.37469 .97042 0 -2.5 Mabsadd L
.37469 .97042 -1.875 0 Mabsadd L closepath F
.42481 .97619 -1.875 0 Mabsadd m
.42481 .97619 0 2.5 Mabsadd L
.42481 .97619 1.875 0 Mabsadd L
.42481 .97619 0 -2.5 Mabsadd L
.42481 .97619 -1.875 0 Mabsadd L closepath F
.47494 .96504 -1.875 0 Mabsadd m
.47494 .96504 0 2.5 Mabsadd L
.47494 .96504 1.875 0 Mabsadd L
.47494 .96504 0 -2.5 Mabsadd L
.47494 .96504 -1.875 0 Mabsadd L closepath F
.52506 .93784 -1.875 0 Mabsadd m
.52506 .93784 0 2.5 Mabsadd L
.52506 .93784 1.875 0 Mabsadd L
.52506 .93784 0 -2.5 Mabsadd L
.52506 .93784 -1.875 0 Mabsadd L closepath F
.57519 .89522 -1.875 0 Mabsadd m
.57519 .89522 0 2.5 Mabsadd L
.57519 .89522 1.875 0 Mabsadd L
.57519 .89522 0 -2.5 Mabsadd L
.57519 .89522 -1.875 0 Mabsadd L closepath F
.62531 .83766 -1.875 0 Mabsadd m
.62531 .83766 0 2.5 Mabsadd L
.62531 .83766 1.875 0 Mabsadd L
.62531 .83766 0 -2.5 Mabsadd L
.62531 .83766 -1.875 0 Mabsadd L closepath F
.67544 .7657 -1.875 0 Mabsadd m
.67544 .7657 0 2.5 Mabsadd L
.67544 .7657 1.875 0 Mabsadd L
.67544 .7657 0 -2.5 Mabsadd L
.67544 .7657 -1.875 0 Mabsadd L closepath F
.72556 .68072 -1.875 0 Mabsadd m
.72556 .68072 0 2.5 Mabsadd L
.72556 .68072 1.875 0 Mabsadd L
.72556 .68072 0 -2.5 Mabsadd L
.72556 .68072 -1.875 0 Mabsadd L closepath F
.77569 .58601 -1.875 0 Mabsadd m
.77569 .58601 0 2.5 Mabsadd L
.77569 .58601 1.875 0 Mabsadd L
.77569 .58601 0 -2.5 Mabsadd L
.77569 .58601 -1.875 0 Mabsadd L closepath F
.82581 .48734 -1.875 0 Mabsadd m
.82581 .48734 0 2.5 Mabsadd L
.82581 .48734 1.875 0 Mabsadd L
.82581 .48734 0 -2.5 Mabsadd L
.82581 .48734 -1.875 0 Mabsadd L closepath F
.87594 .3918 -1.875 0 Mabsadd m
.87594 .3918 0 2.5 Mabsadd L
.87594 .3918 1.875 0 Mabsadd L
.87594 .3918 0 -2.5 Mabsadd L
.87594 .3918 -1.875 0 Mabsadd L closepath F
.92607 .30575 -1.875 0 Mabsadd m
.92607 .30575 0 2.5 Mabsadd L
.92607 .30575 1.875 0 Mabsadd L
.92607 .30575 0 -2.5 Mabsadd L
.92607 .30575 -1.875 0 Mabsadd L closepath F
.97619 .23318 -1.875 0 Mabsadd m
.97619 .23318 0 2.5 Mabsadd L
.97619 .23318 1.875 0 Mabsadd L
.97619 .23318 0 -2.5 Mabsadd L
.97619 .23318 -1.875 0 Mabsadd L closepath F
.001 w
[ .5 3 ] 0 Mabsdash
.02381 .02381 m
.07393 .02381 L
.12406 .02385 L
.17419 .024 L
.22431 .02434 L
.27444 .02496 L
.32456 .02595 L
.37469 .02713 L
.42481 .02834 L
.47494 .02972 L
.52506 .03126 L
.57519 .03291 L
.62531 .03466 L
.67544 .03642 L
.72556 .038 L
.77569 .03906 L
.82581 .03926 L
.87594 .03847 L
.92607 .03686 L
.97619 .03478 L
s
.0001 w
[ ] 0 setdash
.02381 .02381 0 2.5 Mabsadd m
.02381 .02381 -0.56518 .7779 Mabsadd L
.02381 .02381 -2.37764 .77254 Mabsadd L
.02381 .02381 -0.91448 -0.29713 Mabsadd L
.02381 .02381 -1.46946 -2.02254 Mabsadd L
.02381 .02381 0 -0.96154 Mabsadd L
.02381 .02381 1.46946 -2.02254 Mabsadd L
.02381 .02381 .91448 -0.29713 Mabsadd L
.02381 .02381 2.37764 .77254 Mabsadd L
.02381 .02381 .56518 .7779 Mabsadd L
.02381 .02381 0 2.5 Mabsadd L closepath F
.07393 .02381 0 2.5 Mabsadd m
.07393 .02381 -0.56518 .7779 Mabsadd L
.07393 .02381 -2.37764 .77254 Mabsadd L
.07393 .02381 -0.91448 -0.29713 Mabsadd L
.07393 .02381 -1.46946 -2.02254 Mabsadd L
.07393 .02381 0 -0.96154 Mabsadd L
.07393 .02381 1.46946 -2.02254 Mabsadd L
.07393 .02381 .91448 -0.29713 Mabsadd L
.07393 .02381 2.37764 .77254 Mabsadd L
.07393 .02381 .56518 .7779 Mabsadd L
.07393 .02381 0 2.5 Mabsadd L closepath F
.12406 .02385 0 2.5 Mabsadd m
.12406 .02385 -0.56518 .7779 Mabsadd L
.12406 .02385 -2.37764 .77254 Mabsadd L
.12406 .02385 -0.91448 -0.29713 Mabsadd L
.12406 .02385 -1.46946 -2.02254 Mabsadd L
.12406 .02385 0 -0.96154 Mabsadd L
.12406 .02385 1.46946 -2.02254 Mabsadd L
.12406 .02385 .91448 -0.29713 Mabsadd L
.12406 .02385 2.37764 .77254 Mabsadd L
.12406 .02385 .56518 .7779 Mabsadd L
.12406 .02385 0 2.5 Mabsadd L closepath F
.17419 .024 0 2.5 Mabsadd m
.17419 .024 -0.56518 .7779 Mabsadd L
.17419 .024 -2.37764 .77254 Mabsadd L
.17419 .024 -0.91448 -0.29713 Mabsadd L
.17419 .024 -1.46946 -2.02254 Mabsadd L
.17419 .024 0 -0.96154 Mabsadd L
.17419 .024 1.46946 -2.02254 Mabsadd L
.17419 .024 .91448 -0.29713 Mabsadd L
.17419 .024 2.37764 .77254 Mabsadd L
.17419 .024 .56518 .7779 Mabsadd L
.17419 .024 0 2.5 Mabsadd L closepath F
.22431 .02434 0 2.5 Mabsadd m
.22431 .02434 -0.56518 .7779 Mabsadd L
.22431 .02434 -2.37764 .77254 Mabsadd L
.22431 .02434 -0.91448 -0.29713 Mabsadd L
.22431 .02434 -1.46946 -2.02254 Mabsadd L
.22431 .02434 0 -0.96154 Mabsadd L
.22431 .02434 1.46946 -2.02254 Mabsadd L
.22431 .02434 .91448 -0.29713 Mabsadd L
.22431 .02434 2.37764 .77254 Mabsadd L
.22431 .02434 .56518 .7779 Mabsadd L
.22431 .02434 0 2.5 Mabsadd L closepath F
.27444 .02496 0 2.5 Mabsadd m
.27444 .02496 -0.56518 .7779 Mabsadd L
.27444 .02496 -2.37764 .77254 Mabsadd L
.27444 .02496 -0.91448 -0.29713 Mabsadd L
.27444 .02496 -1.46946 -2.02254 Mabsadd L
.27444 .02496 0 -0.96154 Mabsadd L
.27444 .02496 1.46946 -2.02254 Mabsadd L
.27444 .02496 .91448 -0.29713 Mabsadd L
.27444 .02496 2.37764 .77254 Mabsadd L
.27444 .02496 .56518 .7779 Mabsadd L
.27444 .02496 0 2.5 Mabsadd L closepath F
.32456 .02595 0 2.5 Mabsadd m
.32456 .02595 -0.56518 .7779 Mabsadd L
.32456 .02595 -2.37764 .77254 Mabsadd L
.32456 .02595 -0.91448 -0.29713 Mabsadd L
.32456 .02595 -1.46946 -2.02254 Mabsadd L
.32456 .02595 0 -0.96154 Mabsadd L
.32456 .02595 1.46946 -2.02254 Mabsadd L
.32456 .02595 .91448 -0.29713 Mabsadd L
.32456 .02595 2.37764 .77254 Mabsadd L
.32456 .02595 .56518 .7779 Mabsadd L
.32456 .02595 0 2.5 Mabsadd L closepath F
.37469 .02713 0 2.5 Mabsadd m
.37469 .02713 -0.56518 .7779 Mabsadd L
.37469 .02713 -2.37764 .77254 Mabsadd L
.37469 .02713 -0.91448 -0.29713 Mabsadd L
.37469 .02713 -1.46946 -2.02254 Mabsadd L
.37469 .02713 0 -0.96154 Mabsadd L
.37469 .02713 1.46946 -2.02254 Mabsadd L
.37469 .02713 .91448 -0.29713 Mabsadd L
.37469 .02713 2.37764 .77254 Mabsadd L
.37469 .02713 .56518 .7779 Mabsadd L
.37469 .02713 0 2.5 Mabsadd L closepath F
.42481 .02834 0 2.5 Mabsadd m
.42481 .02834 -0.56518 .7779 Mabsadd L
.42481 .02834 -2.37764 .77254 Mabsadd L
.42481 .02834 -0.91448 -0.29713 Mabsadd L
.42481 .02834 -1.46946 -2.02254 Mabsadd L
.42481 .02834 0 -0.96154 Mabsadd L
.42481 .02834 1.46946 -2.02254 Mabsadd L
.42481 .02834 .91448 -0.29713 Mabsadd L
.42481 .02834 2.37764 .77254 Mabsadd L
.42481 .02834 .56518 .7779 Mabsadd L
.42481 .02834 0 2.5 Mabsadd L closepath F
.47494 .02972 0 2.5 Mabsadd m
.47494 .02972 -0.56518 .7779 Mabsadd L
.47494 .02972 -2.37764 .77254 Mabsadd L
.47494 .02972 -0.91448 -0.29713 Mabsadd L
.47494 .02972 -1.46946 -2.02254 Mabsadd L
.47494 .02972 0 -0.96154 Mabsadd L
.47494 .02972 1.46946 -2.02254 Mabsadd L
.47494 .02972 .91448 -0.29713 Mabsadd L
.47494 .02972 2.37764 .77254 Mabsadd L
.47494 .02972 .56518 .7779 Mabsadd L
.47494 .02972 0 2.5 Mabsadd L closepath F
.52506 .03126 0 2.5 Mabsadd m
.52506 .03126 -0.56518 .7779 Mabsadd L
.52506 .03126 -2.37764 .77254 Mabsadd L
.52506 .03126 -0.91448 -0.29713 Mabsadd L
.52506 .03126 -1.46946 -2.02254 Mabsadd L
.52506 .03126 0 -0.96154 Mabsadd L
.52506 .03126 1.46946 -2.02254 Mabsadd L
.52506 .03126 .91448 -0.29713 Mabsadd L
.52506 .03126 2.37764 .77254 Mabsadd L
.52506 .03126 .56518 .7779 Mabsadd L
.52506 .03126 0 2.5 Mabsadd L closepath F
.57519 .03291 0 2.5 Mabsadd m
.57519 .03291 -0.56518 .7779 Mabsadd L
.57519 .03291 -2.37764 .77254 Mabsadd L
.57519 .03291 -0.91448 -0.29713 Mabsadd L
.57519 .03291 -1.46946 -2.02254 Mabsadd L
.57519 .03291 0 -0.96154 Mabsadd L
.57519 .03291 1.46946 -2.02254 Mabsadd L
.57519 .03291 .91448 -0.29713 Mabsadd L
.57519 .03291 2.37764 .77254 Mabsadd L
.57519 .03291 .56518 .7779 Mabsadd L
.57519 .03291 0 2.5 Mabsadd L closepath F
.62531 .03466 0 2.5 Mabsadd m
.62531 .03466 -0.56518 .7779 Mabsadd L
.62531 .03466 -2.37764 .77254 Mabsadd L
.62531 .03466 -0.91448 -0.29713 Mabsadd L
.62531 .03466 -1.46946 -2.02254 Mabsadd L
.62531 .03466 0 -0.96154 Mabsadd L
.62531 .03466 1.46946 -2.02254 Mabsadd L
.62531 .03466 .91448 -0.29713 Mabsadd L
.62531 .03466 2.37764 .77254 Mabsadd L
.62531 .03466 .56518 .7779 Mabsadd L
.62531 .03466 0 2.5 Mabsadd L closepath F
.67544 .03642 0 2.5 Mabsadd m
.67544 .03642 -0.56518 .7779 Mabsadd L
.67544 .03642 -2.37764 .77254 Mabsadd L
.67544 .03642 -0.91448 -0.29713 Mabsadd L
.67544 .03642 -1.46946 -2.02254 Mabsadd L
.67544 .03642 0 -0.96154 Mabsadd L
.67544 .03642 1.46946 -2.02254 Mabsadd L
.67544 .03642 .91448 -0.29713 Mabsadd L
.67544 .03642 2.37764 .77254 Mabsadd L
.67544 .03642 .56518 .7779 Mabsadd L
.67544 .03642 0 2.5 Mabsadd L closepath F
.72556 .038 0 2.5 Mabsadd m
.72556 .038 -0.56518 .7779 Mabsadd L
.72556 .038 -2.37764 .77254 Mabsadd L
.72556 .038 -0.91448 -0.29713 Mabsadd L
.72556 .038 -1.46946 -2.02254 Mabsadd L
.72556 .038 0 -0.96154 Mabsadd L
.72556 .038 1.46946 -2.02254 Mabsadd L
.72556 .038 .91448 -0.29713 Mabsadd L
.72556 .038 2.37764 .77254 Mabsadd L
.72556 .038 .56518 .7779 Mabsadd L
.72556 .038 0 2.5 Mabsadd L closepath F
.77569 .03906 0 2.5 Mabsadd m
.77569 .03906 -0.56518 .7779 Mabsadd L
.77569 .03906 -2.37764 .77254 Mabsadd L
.77569 .03906 -0.91448 -0.29713 Mabsadd L
.77569 .03906 -1.46946 -2.02254 Mabsadd L
.77569 .03906 0 -0.96154 Mabsadd L
.77569 .03906 1.46946 -2.02254 Mabsadd L
.77569 .03906 .91448 -0.29713 Mabsadd L
.77569 .03906 2.37764 .77254 Mabsadd L
.77569 .03906 .56518 .7779 Mabsadd L
.77569 .03906 0 2.5 Mabsadd L closepath F
.82581 .03926 0 2.5 Mabsadd m
.82581 .03926 -0.56518 .7779 Mabsadd L
.82581 .03926 -2.37764 .77254 Mabsadd L
.82581 .03926 -0.91448 -0.29713 Mabsadd L
.82581 .03926 -1.46946 -2.02254 Mabsadd L
.82581 .03926 0 -0.96154 Mabsadd L
.82581 .03926 1.46946 -2.02254 Mabsadd L
.82581 .03926 .91448 -0.29713 Mabsadd L
.82581 .03926 2.37764 .77254 Mabsadd L
.82581 .03926 .56518 .7779 Mabsadd L
.82581 .03926 0 2.5 Mabsadd L closepath F
.87594 .03847 0 2.5 Mabsadd m
.87594 .03847 -0.56518 .7779 Mabsadd L
.87594 .03847 -2.37764 .77254 Mabsadd L
.87594 .03847 -0.91448 -0.29713 Mabsadd L
.87594 .03847 -1.46946 -2.02254 Mabsadd L
.87594 .03847 0 -0.96154 Mabsadd L
.87594 .03847 1.46946 -2.02254 Mabsadd L
.87594 .03847 .91448 -0.29713 Mabsadd L
.87594 .03847 2.37764 .77254 Mabsadd L
.87594 .03847 .56518 .7779 Mabsadd L
.87594 .03847 0 2.5 Mabsadd L closepath F
.92607 .03686 0 2.5 Mabsadd m
.92607 .03686 -0.56518 .7779 Mabsadd L
.92607 .03686 -2.37764 .77254 Mabsadd L
.92607 .03686 -0.91448 -0.29713 Mabsadd L
.92607 .03686 -1.46946 -2.02254 Mabsadd L
.92607 .03686 0 -0.96154 Mabsadd L
.92607 .03686 1.46946 -2.02254 Mabsadd L
.92607 .03686 .91448 -0.29713 Mabsadd L
.92607 .03686 2.37764 .77254 Mabsadd L
.92607 .03686 .56518 .7779 Mabsadd L
.92607 .03686 0 2.5 Mabsadd L closepath F
.97619 .03478 0 2.5 Mabsadd m
.97619 .03478 -0.56518 .7779 Mabsadd L
.97619 .03478 -2.37764 .77254 Mabsadd L
.97619 .03478 -0.91448 -0.29713 Mabsadd L
.97619 .03478 -1.46946 -2.02254 Mabsadd L
.97619 .03478 0 -0.96154 Mabsadd L
.97619 .03478 1.46946 -2.02254 Mabsadd L
.97619 .03478 .91448 -0.29713 Mabsadd L
.97619 .03478 2.37764 .77254 Mabsadd L
.97619 .03478 .56518 .7779 Mabsadd L
.97619 .03478 0 2.5 Mabsadd L closepath F
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
MathSubEnd
P
% End of sub-graphic
0 g
.76455 .40564 m
.76455 .68783 L
.97619 .68783 L
.97619 .40564 L
F
1 g
.76455 .40564 m
.76455 .68783 L
.97619 .68783 L
.97619 .40564 L
F
0 g
.001 w
[ ] 0 setdash
.76455 .40564 m
.97619 .40564 L
.97619 .68783 L
.76455 .68783 L
.76455 .40564 L
s
% Start of sub-graphic
p
0.76455 0.405644 0.97619 0.687831 MathSubStart
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0297619 0.297619 0.0529101 0.529101 [
[ 0 0 0 0 ]
[ 1 1.33333 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 1.33333 L
0 1.33333 L
closepath
clip
newpath
% Start of sub-graphic
p
0.0535714 0.0952381 0.35119 0.624339 MathSubStart
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.5 0.5 0.5 [
[ 0 0 0 0 ]
[ 1 1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
0 g
.00623 w
[ .5 3 ] 0 Mabsdash
0 .5 m
1 .5 L
s
.00062 w
[ ] 0 setdash
.5 .5 0 2.5 Mabsadd m
.5 .5 -0.56518 .7779 Mabsadd L
.5 .5 -2.37764 .77254 Mabsadd L
.5 .5 -0.91448 -0.29713 Mabsadd L
.5 .5 -1.46946 -2.02254 Mabsadd L
.5 .5 0 -0.96154 Mabsadd L
.5 .5 1.46946 -2.02254 Mabsadd L
.5 .5 .91448 -0.29713 Mabsadd L
.5 .5 2.37764 .77254 Mabsadd L
.5 .5 .56518 .7779 Mabsadd L
.5 .5 0 2.5 Mabsadd L closepath F
MathSubEnd
P
% End of sub-graphic
0 g
gsave
.38988 .35979 -61 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(Background) show
111.812 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
% Start of sub-graphic
p
0.0535714 0.708995 0.35119 1.2381 MathSubStart
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.5 0.5 0.5 [
[ 0 0 0 0 ]
[ 1 1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
0 g
.00623 w
[ ] 0 setdash
0 .5 m
1 .5 L
s
.00062 w
.5 .5 -1.875 0 Mabsadd m
.5 .5 0 2.5 Mabsadd L
.5 .5 1.875 0 Mabsadd L
.5 .5 0 -2.5 Mabsadd L
.5 .5 -1.875 0 Mabsadd L closepath F
MathSubEnd
P
% End of sub-graphic
0 g
gsave
.38988 .97354 -61 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(Signal) show
88.438 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
MathSubEnd
P
% End of sub-graphic
0 0 m
1 0 L
1 .74074 L
0 .74074 L
closepath
clip
newpath
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{400, 296.25},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40009H0001_2000`400?l00000o`00003oo`3ooooo
0?oooeX0oooo003o0?ooool0ooooFP3oool00?l0ooooo`3ooomJ0?ooo`00o`3ooooo0?oooeX0oooo
003o0?ooool0ooooFP3oool00?l0ooooo`3ooomJ0?ooo`00o`3ooooo0?oooeX0oooo003o0?ooool0
ooooFP3oool00?l0ooooo`3ooomJ0?ooo`00o`3ooooo0?oooeX0oooo003o0?ooool0ooooFP3oool0
0?l0ooooo`3ooomJ0?ooo`00o`3ooooo0?oooeX0oooo003o0?ooool0ooooFP3oool00?l0ooooo`3o
oomJ0?ooo`00o`3ooooo0?oooeX0oooo003o0?ooool0ooooFP3oool00?l0ooooo`3ooomJ0?ooo`00
o`3ooooo0?oooeX0oooo003o0?ooool0ooooFP3oool00?l0ooooo`3ooomJ0?ooo`00o`3ooooo0?oo
oeX0oooo003o0?ooool0ooooFP3oool005/0oooo1@0000030?ooo`@00000B03oool6000000<0oooo
100000190?ooo`@00000103oool4000004/0oooo00<000000?ooo`3oool00P3oool400000?<0oooo
001M0?ooo`030000003oool0oooo0080oooo0P0000020?ooo`800000A`3oool2000000<0oooo00<0
00000?ooo`3oool00P0000020?ooo`800000A`3oool200000080oooo0P0000020?ooo`8000000P3o
ool2000004X0oooo00@000000?ooo`3oool0oooo0P0000020?ooo`800000lP3oool005d0oooo00<0
00000?ooo`3oool00P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo04H0oooo00<0
00000?ooo`3oool0103oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo04X0oooo00@0
00000?ooo`3oool00000103oool00`000000oooo0?ooo`140?ooo`H000000P3oool00`000000oooo
0?ooo`020?ooo`030000003oool0oooo0?00oooo001M0?ooo`030000003oool0oooo0080oooo00<0
00000?ooo`3oool00P3oool00`000000oooo0?ooo`170?ooo`030000003oool0oooo00<0oooo00<0
00000?ooo`3oool00P3oool00`000000oooo0?ooo`1:0?ooo`040000003oool0oooo000000@0oooo
00<000000?ooo`3oool0A03oool01@000000oooo0?ooo`3oool0000000<0oooo00<000000?ooo`3o
ool00P3oool00`000000oooo0?ooo`3`0?ooo`00G@3oool00`000000oooo0?ooo`020?ooo`030000
003oool0oooo0080oooo00<000000?ooo`3oool0B03oool00`000000oooo0?ooo`020?ooo`030000
003oool0oooo0080oooo00<000000?ooo`3oool0B@3oool01@000000oooo0?ooo`3oool0000000@0
oooo00<000000?ooo`3oool0A@3oool010000000oooo0?ooo`0000030?ooo`030000003oool0oooo
0080oooo00<000000?ooo`3oool0l03oool005d0oooo00<000000?ooo`3oool00P3oool00`000000
oooo0?ooo`020?ooo`030000003oool0oooo04P0oooo0P0000030?ooo`030000003oool0oooo0080
oooo00<000000?ooo`3oool0A`3oool2000000@0oooo00<000000?ooo`3oool00P3oool00`000000
oooo0?ooo`150?ooo`80000000<0oooo0000003oool00P3oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo0?00oooo001M0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0
0P3oool00`000000oooo0?ooo`190?ooo`050000003oool0oooo0?ooo`000000103oool00`000000
oooo0?ooo`190?ooo`050000003oool0oooo0?ooo`000000103oool00`000000oooo0?ooo`160?oo
o`030000003oool0000000<0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`3`0?oo
o`00G@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0080oooo00<000000?ooo`3o
ool0B@3oool01@000000oooo0?ooo`3oool0000000@0oooo00<000000?ooo`3oool0B@3oool01@00
0000oooo0?ooo`3oool0000000@0oooo00<000000?ooo`3oool0AP3oool00`000000oooo00000003
0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0l03oool005d0oooo00<000000?oo
o`3oool00P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo04D0oooo00D000000?oo
o`3oool0oooo000000030?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0A@3oool0
0`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool0A`3o
ool2000000<0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`3`0?ooo`00F`3oool3
000000@0oooo0P0000020?ooo`800000A`3oool2000000030?ooo`000000000000<0oooo0P000002
0?ooo`800000A`3oool200000080oooo0P0000020?ooo`8000000P3oool2000004T0oooo0P000003
0?ooo`8000000P3oool200000?80oooo001M0?ooo`030000003oool0oooo00<0oooo100000190?oo
o`<000001@3oool4000004T0oooo100000040?ooo`@00000B`3oool00`000000oooo0?ooo`020?oo
o`@00000l`3oool00?l0ooooo`3ooomJ0?ooo`00o`3ooooo0?oooeX0oooo003o0?ooool0ooooFP3o
ool00?l0ooooo`3ooomJ0?ooo`00;`3ooooo000008L00000X`3oool002l0oooo00<000000?ooo`3o
ool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3o
ool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3o
ool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3o
ool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3o
ool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3o
ool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3o
ool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3o
ool03P3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000
003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000
003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0=0?ooo`030000
003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000
003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000
003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000
003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000
003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000
003oool0oooo00h0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`2Q0?ooo`00;`3o
ool00`000000oooo0?ooo`0`0?ooo`030000003oool0oooo0540oooo00<000000?ooo`3oool0DP3o
ool00`000000oooo0?ooo`1B0?ooo`030000003oool0oooo0540oooo00<000000?ooo`3oool0X@3o
ool002l0oooo00<000000?ooo`3oool0o`3ooon30?ooo`030000003oool0oooo0:40oooo000_0?oo
o`030000003oool0oooo0?l0ooooP`3oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool00`000000
oooo0?ooo`3o0?oooh<0oooo00<000000?ooo`3oool0X@3oool00240oooo1000000:0?ooo`030000
003oool0oooo00D0oooo00@000000?ooo`3oool000004P3oool00`000000oooo0?ooo`0>0?ooo`04
0000003oool0oooo00000180oooo00<000000?ooo`3oool0o`3oooln0?ooo`030000003oool0oooo
0:40oooo000P0?ooo`8000000P3oool2000000T0oooo00<000000?ooo`3oool01@3oool400000100
oooo0`00000@0?ooo`@00000403oool300000100oooo1000000@0?ooo`<000004`3oool00`000000
oooo0?ooo`3o0?ooo`<0oooo00<000000?ooo`3oool0X@3oool00200oooo00<000000?ooo`3oool0
0P3oool00`000000oooo0?ooo`070?ooo`@00000103oool3000000@0oooo0P0000030?ooo`800000
0`3oool2000000050?ooo`00000000000?ooo`000000103oool2000000<0oooo0P0000030?ooo`@0
00000P3oool00`000000oooo0?ooo`020?ooo`8000000`3oool2000000<0oooo0P00000A0?ooo`<0
00004@3oool200000140oooo1000000@0?ooo`<000004`3oool00`000000oooo0?ooo`3I0?ooo`<0
0000X`3oool00200oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`070?ooo`030000
003oool0oooo00@0oooo1@00000?0?ooo`D000003P3oool5000000l0oooo1@0000020?ooo`030000
003oool0oooo0080oooo0P0000030?ooo`L00000103oool00`000000oooo0?ooo`020?ooo`800000
0`3oool7000000<0oooo0P0000040?ooo`030000003oool0oooo0080oooo0`0000020?ooo`800000
0`3oool2000000P0oooo0P00000A0?ooo`@00000403oool3000001<0oooo00<000000?ooo`3oool0
]03oool00`000000oooo0?ooo`2Q0?ooo`00803oool00`000000oooo0?ooo`020?ooo`030000003o
ool0oooo00L0oooo00<000000?ooo`3oool00`3oool7000000`0oooo2000000<0?ooo`L00000303o
ool8000000`0oooo1`00000<0?ooo`P00000303oool7000000/0oooo00<000000?ooo`3oool01@00
00020?ooo`8000000`3oool2000000@0oooo00<000000?ooo`000000100000030?ooo`8000000`3o
ool00`000000oooo0?ooo`040?ooo`8000004@3oool400000100oooo0`00002S0?ooo`030000003o
ool0oooo0:40oooo000P0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool01`3oool0
0`000000oooo0?ooo`060?ooo`8000004P3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0
oooo0100oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0
oooo00d0oooo2000000<0?ooo`L000002@3oool00`000000oooo0?ooo`020?ooo`@0000000<0oooo
0000000000000`3oool2000000<0oooo0P0000030?ooo`<000000`3oool2000000`0oooo0P00000A
0?ooo`@000003`3oool010000000oooo0?ooo`00001P0?ooo`030000003oool0oooo00h0oooo1000
00070?ooo`030000003oool0oooo0:40oooo000P0?ooo`030000003oool0oooo0080oooo00<00000
0?ooo`3oool01`3oool00`000000oooo0?ooo`050?ooo`@00000G`3oool00`000000oooo0?ooo`0@
0?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`0=
0?ooo`L000003@3oool7000000H0oooo0P0000030?ooo`80000000<0oooo0000000000000P000004
0?ooo`8000000`3oool2000000D0oooo0`00000@0?ooo`@00000403oool4000000l0oooo00@00000
0?ooo`3oool000004P3oool00`000000oooo0?ooo`0>0?ooo`040000003oool0oooo00000100oooo
0`00000@0?ooo`<00000203oool00`000000oooo0?ooo`2Q0?ooo`00803oool00`000000oooo0?oo
o`020?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0103oool5000009T0oooo00<0
00000?ooo`3oool04@3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo00d0oooo1`00
000=0?ooo`L00000103oool2000000<0oooo0P0000030?ooo`<000000`3oool00`000000oooo0?oo
o`0;0?ooo`<00000403oool400000100oooo0`00000@0?ooo`@00000403oool4000000<0oooo0P00
00040?ooo`030000003oool0oooo0080oooo1@0000070?ooo`030000003oool0oooo0:40oooo000P
0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`05
0?ooo`@00000`03oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo00d0oooo1`00000<
0?ooo`L000001P3oool2000000<0oooo0P0000000`3oool0000000000003000000<0oooo00<00000
0?ooo`3oool00P3oool2000000<0oooo1`0000040?ooo`030000003oool0oooo0080oooo0P000003
0?ooo`@0000000<0oooo000000000000103oool00`000000oooo0?ooo`020?ooo`8000000P3oool3
000000<0oooo0P0000040?ooo`030000003oool0oooo0080oooo1`00000=0?ooo`L000001P3oool0
0`000000oooo0?ooo`2Q0?ooo`00803oool200000080oooo0P0000090?ooo`030000003oool0oooo
00H0oooo0`00003D0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool04@3oool00`00
0000oooo0?ooo`0=0?ooo`L00000303oool7000000h0oooo1@00000=0?ooo`L000003@3oool70000
0100oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`2Q0?ooo`008@3oool4000000X0
oooo00<000000?ooo`3oool01`3oool00`000000oooo0000003j0?ooo`030000003oool0oooo0100
oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`0=0?ooo`L00000403oool00`000000
oooo0?ooo`0@0?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool0X@3oool002l0oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`3o0?ooo`/0oooo00<000000?ooo`3oool0
4@3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool0
;@3oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool00`000000oooo0?ooo`0:0?ooo`030000003o
ool0oooo0?l0ooooMP3oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool00`000000oooo0?ooo`0;
0?ooo`030000003oool0oooo0?l0ooooM@3oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool30000
00`0oooo00<000000?ooo`3oool0o`3ooomc0?ooo`800000X`3oool002l0oooo00<000000?ooo`3o
ool0303oool00`000000oooo0?ooo`3o0?ooog@0oooo00<000000?ooo`3oool0X@3oool002l0oooo
00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`3o0?ooog<0oooo00<000000?ooo`3oool0
X@3oool002l0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`3o0?ooog80oooo00<0
00000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`3o
0?ooog80oooo00<000000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3oool03`3oool00`00
0000oooo0?ooo`3o0?ooog40oooo00<000000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3o
ool0403oool00`000000oooo0?ooo`3o0?ooog00oooo00<000000?ooo`3oool0X@3oool002l0oooo
00<000000?ooo`3oool0403oool00`000000oooo0?ooo`3o0?ooog00oooo00<000000?ooo`3oool0
X@3oool002l0oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`3o0?ooofl0oooo00<0
00000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`3o
0?ooofl0oooo00<000000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3oool04P3oool00`00
0000oooo0?ooo`3o0?ooofh0oooo00<000000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3o
ool04`3oool00`000000oooo0?ooo`3o0?ooofd0oooo00<000000?ooo`3oool0X@3oool002l0oooo
0`00000C0?ooo`030000003oool0oooo0?l0ooooK03oool200000:<0oooo000_0?ooo`030000003o
ool0oooo01@0oooo00<000000?ooo`3oool0o`3ooom/0?ooo`030000003oool0oooo0:40oooo000_
0?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3oool0o`3ooom[0?ooo`030000003oool0
oooo0:40oooo000_0?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3oool0o`3ooom[0?oo
o`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo01H0oooo00<000000?ooo`3o
ool0o`3ooomZ0?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo01L0oooo
00<000000?ooo`3oool0o`3ooomY0?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003o
ool0oooo01L0oooo00<000000?ooo`3oool0o`3ooomY0?ooo`030000003oool0oooo0:40oooo000_
0?ooo`030000003oool0oooo01P0oooo00<000000?ooo`000000o`3ooomX0?ooo`030000003oool0
oooo0:40oooo000_0?ooo`030000003oool0oooo01T0oooo0`00003o0?ooofL0oooo00<000000?oo
o`3oool0X@3oool002l0oooo00<000000?ooo`3oool0603oool500000?l0ooooIP3oool00`000000
oooo0?ooo`2Q0?ooo`00;`3oool00`000000oooo0?ooo`0G0?ooo`H00000o`3ooomV0?ooo`030000
003oool0oooo0:40oooo000_0?ooo`<00000603oool400000?l0ooooIP3oool200000:<0oooo000_
0?ooo`030000003oool0oooo01T0oooo0`00003o0?ooofL0oooo00<000000?ooo`3oool0X@3oool0
02l0oooo00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`3o0?ooofD0oooo00<000000?oo
o`3oool0X@3oool002l0oooo00<000000?ooo`3oool0703oool00`000000oooo0?ooo`3o0?ooof@0
oooo00<000000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3oool0703oool00`000000oooo
0?ooo`3o0?ooof@0oooo00<000000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3oool07@3o
ool00`000000oooo0?ooo`3o0?ooof<0oooo00<000000?ooo`3oool0X@3oool002l0oooo00<00000
0?ooo`3oool07@3oool00`000000oooo0?ooo`3o0?ooof<0oooo00<000000?ooo`3oool0X@3oool0
02l0oooo00<000000?ooo`3oool07@3oool00`000000oooo0?ooo`3o0?ooof<0oooo00<000000?oo
o`3oool0X@3oool002l0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`3o0?ooof80
oooo00<000000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3oool07P3oool00`000000oooo
0?ooo`3o0?ooof80oooo00<000000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3oool07`3o
ool00`000000oooo0?ooo`3o0?ooof40oooo00<000000?ooo`3oool0X@3oool002l0oooo00<00000
0?ooo`3oool07`3oool00`000000oooo0?ooo`3o0?ooof40oooo00<000000?ooo`3oool0X@3oool0
02l0oooo0`00000O0?ooo`030000003oool0oooo0?l0ooooH03oool200000:<0oooo000_0?ooo`03
0000003oool0oooo0200oooo00<000000?ooo`3oool0o`3ooomP0?ooo`030000003oool0oooo0:40
oooo000_0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool0o`3ooomP0?ooo`030000
003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo0240oooo00<000000?ooo`3oool0o`3o
oomO0?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo0240oooo00<00000
0?ooo`3oool0o`3ooomO0?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo
0280oooo00<000000?ooo`3oool0o`3ooomN0?ooo`030000003oool0oooo0:40oooo000_0?ooo`03
0000003oool0oooo0280oooo00<000000?ooo`3oool0o`3ooomN0?ooo`030000003oool0oooo0:40
oooo000_0?ooo`030000003oool0oooo0280oooo00<000000?ooo`3oool0o`3ooomN0?ooo`030000
003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool0o`3o
oomM0?ooo`030000003oool0oooo0:40oooo000B0?ooo`D000000`3oool4000000@0oooo10000009
0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool0o`3ooomM0?ooo`030000003oool0
oooo0:40oooo000D0?ooo`030000003oool0oooo0080oooo0P0000020?ooo`8000000P3oool20000
0080oooo0P0000080?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0o`3ooomL0?oo
o`030000003oool0oooo0:40oooo000D0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3o
ool00P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00H0oooo1000000S0?oo
o`030000003oool0oooo0?l0ooooFP3oool300000:<0oooo000D0?ooo`030000003oool0oooo0080
oooo00<000000?ooo`3oool00P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo
00H0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`3o0?oooe`0oooo00<000000?oo
o`3oool0X@3oool001@0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`020?ooo`04
0000003oool0oooo000000@0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0U0?oo
o`030000003oool0oooo0?l0ooooF`3oool00`000000oooo0?ooo`2Q0?ooo`00503oool00`000000
oooo0?ooo`020?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103oool00`00
0000oooo0?ooo`060?ooo`030000003oool0oooo02D0oooo00<000000?ooo`3oool0o`3ooomK0?oo
o`030000003oool0oooo0:40oooo000D0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3o
ool00P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00H0oooo00<000000?oo
o`3oool09P3oool00`000000oooo0?ooo`3o0?oooeX0oooo00<000000?ooo`3oool0X@3oool001@0
oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo0000
00@0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0V0?ooo`030000003oool0oooo
0?l0ooooFP3oool00`000000oooo0?ooo`2Q0?ooo`00503oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo0080oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`060?oo
o`030000003oool0oooo02L0oooo00<000000?ooo`3oool0o`3ooomI0?ooo`030000003oool0oooo
0:40oooo000B0?ooo`<00000103oool200000080oooo0P0000020?ooo`8000000P3oool2000000P0
oooo00<000000?ooo`3oool09`3oool00`000000oooo0?ooo`3o0?oooeT0oooo00<000000?ooo`3o
ool0X@3oool001@0oooo00<000000?ooo`3oool00`3oool4000000@0oooo100000090?ooo`030000
003oool0oooo02L0oooo00<000000?ooo`3oool0o`3ooomI0?ooo`030000003oool0oooo0:40oooo
000_0?ooo`030000003oool0oooo02P0oooo00<000000?ooo`3oool0o`3ooomH0?ooo`030000003o
ool0oooo0:40oooo000_0?ooo`030000003oool0oooo02P0oooo00<000000?ooo`3oool0o`3ooomH
0?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo02T0oooo00<000000?oo
o`3oool0o`3ooomG0?ooo`030000003oool0oooo0:40oooo000_0?ooo`<00000:@3oool00`000000
oooo0?ooo`3o0?oooeH0oooo0P00002S0?ooo`00;`3oool00`000000oooo0?ooo`0Y0?ooo`030000
003oool0oooo0?l0ooooE`3oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool00`000000oooo0?oo
o`0Z0?ooo`030000003oool0oooo0?l0ooooEP3oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool0
0`000000oooo0?ooo`0Z0?ooo`030000003oool0oooo0?l0ooooEP3oool00`000000oooo0?ooo`2Q
0?ooo`00;`3oool00`000000oooo0?ooo`0[0?ooo`030000003oool0oooo0?l0ooooE@3oool00`00
0000oooo0?ooo`2Q0?ooo`00;`3oool00`000000oooo0?ooo`0[0?ooo`030000003oool0oooo0?l0
ooooE@3oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool00`000000oooo0?ooo`0/0?ooo`030000
003oool0oooo0?l0ooooE03oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool00`000000oooo0?oo
o`0/0?ooo`030000003oool0oooo0?l0ooooE03oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool0
0`000000oooo0?ooo`0/0?ooo`030000003oool0oooo0?l0ooooE03oool00`000000oooo0?ooo`2Q
0?ooo`00;`3oool00`000000oooo0?ooo`0]0?ooo`800000o`3ooom;0?ooo`030000003oool0oooo
00H0oooo00<000000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3oool0;@3oool200000?l0
ooooBP3oool3000000L0oooo00<000000?ooo`3oool0X@3oool002l0oooo0`00000/0?ooo`@00000
o`3ooom80?ooo`D000001@3oool200000:<0oooo000_0?ooo`030000003oool0oooo02/0oooo1@00
003o0?ooodL0oooo1P0000060?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0
oooo02`0oooo1000003o0?ooodP0oooo1@0000060?ooo`030000003oool0oooo0:40oooo000_0?oo
o`030000003oool0oooo02d0oooo0`00003o0?ooodT0oooo0`0000070?ooo`030000003oool0oooo
0:40oooo000_0?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool0o`3ooom60?ooo`03
0000003oool0000000P0oooo00<000000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3oool0
;`3oool00`000000oooo0?ooo`3o0?ooodD0oooo00<000000?ooo`3oool02@3oool00`000000oooo
0?ooo`2Q0?ooo`00;`3oool00`000000oooo0?ooo`0`0?ooo`030000003oool0oooo0?l0oooo@`3o
ool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0
oooo0300oooo00<000000?ooo`3oool0o`3ooom30?ooo`030000003oool0oooo00X0oooo00<00000
0?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3oool0<03oool00`000000oooo0?ooo`3o0?oo
od80oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool00`000000
oooo0?ooo`0a0?ooo`030000003oool0oooo0?l0oooo@03oool00`000000oooo0?ooo`0<0?ooo`03
0000003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo0340oooo00<000000?ooo`3oool0
o`3ooom00?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool0X@3oool002l0oooo00<0
00000?ooo`3oool0<@3oool00`000000oooo0?ooo`3o0?ooocl0oooo00<000000?ooo`3oool03@3o
ool00`000000oooo0?ooo`2Q0?ooo`00;`3oool300000380oooo00<000000?ooo`3oool0o`3ooolm
0?ooo`030000003oool0oooo00d0oooo0P00002S0?ooo`00;`3oool00`000000oooo0?ooo`0b0?oo
o`030000003oool0oooo0?l0oooo?03oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo
0:40oooo000_0?ooo`030000003oool0oooo0380oooo00<000000?ooo`3oool0o`3oooll0?ooo`03
0000003oool0oooo00l0oooo00<000000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3oool0
<`3oool00`000000oooo0?ooo`3o0?ooocX0oooo00<000000?ooo`3oool0403oool00`000000oooo
0?ooo`2Q0?ooo`00;`3oool00`000000oooo0?ooo`0c0?ooo`030000003oool0oooo0?l0oooo>@3o
ool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0
oooo03<0oooo00<000000?ooo`3oool0o`3oooli0?ooo`030000003oool0oooo0140oooo00<00000
0?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3oool0=03oool00`000000oooo0?ooo`3o0?oo
ocL0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool00`000000
oooo0?ooo`0d0?ooo`030000003oool0oooo0?l0oooo=P3oool00`000000oooo0?ooo`0C0?ooo`03
0000003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo03@0oooo00<000000?ooo`3oool0
o`3ooole0?ooo`030000003oool0oooo01@0oooo00<000000?ooo`3oool0X@3oool002l0oooo00<0
00000?ooo`3oool0=@3oool00`000000oooo0?ooo`3o0?oooc@0oooo00<000000?ooo`3oool0503o
ool00`000000oooo0?ooo`2Q0?ooo`00;`3oool00`000000oooo0?ooo`0e0?ooo`030000003oool0
oooo0?l0oooo<`3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo0:40oooo000_0?oo
o`<00000=@3oool00`000000oooo0?ooo`3o0?oooc80oooo00<000000?ooo`3oool05@3oool20000
0:<0oooo000_0?ooo`030000003oool0oooo03H0oooo00<000000?ooo`3oool0o`3ooola0?ooo`03
0000003oool0oooo01H0oooo00<000000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3oool0
=P3oool00`000000oooo0?ooo`3o0?oooc00oooo00<000000?ooo`3oool05`3oool00`000000oooo
0?ooo`2Q0?ooo`00;`3oool00`000000oooo0?ooo`0f0?ooo`030000003oool0oooo0?l0oooo;@3o
ool00`000000oooo0000000J0?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0
oooo03L0oooo00<000000?ooo`3oool0o`3oool[0?ooo`<000006`3oool00`000000oooo0?ooo`2Q
0?ooo`00;`3oool00`000000oooo0?ooo`0g0?ooo`030000003oool0oooo0?l0oooo:P3oool50000
01X0oooo00<000000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3oool0=`3oool00`000000
oooo0?ooo`3o0?ooobT0oooo1P00000J0?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000
003oool0oooo03P0oooo00<000000?ooo`3oool0o`3ooolY0?ooo`D000006P3oool00`000000oooo
0?ooo`2Q0?ooo`00;`3oool00`000000oooo0?ooo`0h0?ooo`030000003oool0oooo0?l0oooo:P3o
ool3000001/0oooo00<000000?ooo`3oool0X@3oool00140oooo1P0000030?ooo`@00000103oool4
000000T0oooo00<000000?ooo`3oool0>03oool00`000000oooo0?ooo`3o0?ooobT0oooo00<00000
0?ooo`000000703oool00`000000oooo0?ooo`2Q0?ooo`004@3oool2000000<0oooo00<000000?oo
o`3oool00P0000020?ooo`8000000P3oool200000080oooo0P0000080?ooo`030000003oool0oooo
03P0oooo00<000000?ooo`3oool0o`3ooolY0?ooo`030000003oool0oooo01`0oooo00<000000?oo
o`3oool0X@3oool00180oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`020?ooo`04
0000003oool0oooo000000@0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0i0?oo
o`030000003oool0oooo0?l0oooo9`3oool00`000000oooo0?ooo`0M0?ooo`030000003oool0oooo
0:40oooo000C0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool010000000
oooo0?ooo`0000040?ooo`030000003oool0oooo00H0oooo1000000h0?ooo`030000003oool0oooo
0?l0oooo9`3oool00`000000oooo0?ooo`0K0?ooo`<00000X`3oool001@0oooo00<000000?ooo`3o
ool00P3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00<000000?oo
o`3oool01P3oool00`000000oooo0?ooo`0i0?ooo`030000003oool0oooo0?l0oooo9P3oool00`00
0000oooo0?ooo`0N0?ooo`030000003oool0oooo0:40oooo000D0?ooo`8000000`3oool00`000000
oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool01P3oool00`00
0000oooo0?ooo`0j0?ooo`030000003oool0oooo0?l0oooo903oool00`000000oooo0?ooo`0O0?oo
o`030000003oool0oooo0:40oooo000E0?ooo`050000003oool0oooo0?ooo`000000103oool01000
0000oooo0?ooo`0000040?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0>P3oool0
0`000000oooo0?ooo`3o0?ooob@0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`2Q
0?ooo`005@3oool01@000000oooo0?ooo`3oool0000000@0oooo00@000000?ooo`3oool00000103o
ool00`000000oooo0?ooo`060?ooo`030000003oool0oooo03X0oooo00<000000?ooo`3oool0o`3o
oolS0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool0X@3oool00140oooo00D00000
0?ooo`3oool0oooo000000030?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000
103oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo03/0oooo00<000000?ooo`3oool0
o`3ooolR0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool0X@3oool00140oooo0P00
00000`3oool00000000000030?ooo`8000000P3oool200000080oooo0P0000020?ooo`800000203o
ool00`000000oooo0?ooo`0k0?ooo`030000003oool0oooo0?l0oooo8@3oool00`000000oooo0?oo
o`0Q0?ooo`030000003oool0oooo0:40oooo000B0?ooo`<000001@3oool4000000@0oooo10000009
0?ooo`030000003oool0oooo03/0oooo00<000000?ooo`3oool0o`3ooolQ0?ooo`030000003oool0
oooo0240oooo00<000000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3oool0?03oool00`00
0000oooo0?ooo`3o0?oooal0oooo00<000000?ooo`3oool08P3oool00`000000oooo0?ooo`2Q0?oo
o`00;`3oool00`000000oooo0?ooo`0l0?ooo`030000003oool0oooo0?l0oooo7P3oool00`000000
oooo0?ooo`0S0?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo03`0oooo
00<000000?ooo`3oool0o`3ooolN0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool0
X@3oool002l0oooo00<000000?ooo`3oool0?@3oool00`000000oooo0?ooo`3o0?oooa`0oooo00<0
00000?ooo`3oool0903oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool3000003d0oooo00<00000
0?ooo`3oool0o`3ooolL0?ooo`030000003oool0oooo02<0oooo0P00002S0?ooo`00;`3oool00`00
0000oooo0?ooo`0m0?ooo`030000003oool0oooo0?l0oooo6`3oool00`000000oooo0?ooo`0U0?oo
o`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo03h0oooo00<000000?ooo`3o
ool0o`3ooolI0?ooo`030000003oool0oooo02H0oooo00<000000?ooo`3oool0X@3oool002l0oooo
00<000000?ooo`3oool0?P3oool00`000000oooo0?ooo`3o0?oooaT0oooo00<000000?ooo`3oool0
9P3oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool00`000000oooo0?ooo`0n0?ooo`030000003o
ool0oooo0?l0oooo603oool00`000000oooo0?ooo`0W0?ooo`030000003oool0oooo0:40oooo000_
0?ooo`030000003oool0oooo03l0oooo00<000000?ooo`3oool0o`3ooolG0?ooo`030000003oool0
oooo02L0oooo00<000000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3oool0?`3oool00`00
0000oooo0?ooo`3o0?oooaH0oooo00<000000?ooo`3oool0:03oool00`000000oooo0?ooo`2Q0?oo
o`00;`3oool00`000000oooo0?ooo`0o0?ooo`030000003oool0oooo0?l0oooo5P3oool00`000000
oooo0?ooo`0X0?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo0400oooo
00<000000?ooo`3oool0o`3ooolD0?ooo`030000003oool0oooo02T0oooo00<000000?ooo`3oool0
X@3oool002l0oooo00<000000?ooo`3oool0@03oool200000?l0oooo503oool00`000000oooo0?oo
o`0Z0?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo0400oooo0`00003o
0?oooa<0oooo00<000000?ooo`3oool0:P3oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool30000
03l0oooo1@00003o0?oooa40oooo00<000000?ooo`3oool0:P3oool200000:<0oooo000_0?ooo`03
0000003oool0oooo03h0oooo1P00003o0?oooa40oooo00<000000?ooo`3oool0:`3oool00`000000
oooo0?ooo`2Q0?ooo`00;`3oool00`000000oooo0?ooo`0o0?ooo`D00000o`3oool>0?ooo`<00000
;P3oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool00`000000oooo0?ooo`100?ooo`<00000o`3o
ool>0?ooo`@00000;P3oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool00`000000oooo0?ooo`11
0?ooo`800000o`3oool=0?ooo`H00000;@3oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool00`00
0000oooo0?ooo`120?ooo`030000003oool0oooo0?l0oooo303oool5000002d0oooo00<000000?oo
o`3oool0X@3oool002l0oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`3o0?ooo`d0
oooo0`00000^0?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo04<0oooo
00<000000?ooo`3oool0o`3oool;0?ooo`030000003oool0000002l0oooo00<000000?ooo`3oool0
X@3oool002l0oooo00<000000?ooo`3oool0@`3oool00`000000oooo0?ooo`3o0?ooo`/0oooo00<0
00000?ooo`3oool0;`3oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool00`000000oooo0?ooo`13
0?ooo`030000003oool0oooo0?l0oooo2P3oool00`000000oooo0?ooo`0`0?ooo`030000003oool0
oooo0:40oooo000_0?ooo`030000003oool0oooo04@0oooo00<000000?ooo`3oool0o`3oool90?oo
o`030000003oool0oooo0300oooo00<000000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3o
ool0A03oool00`000000oooo0?ooo`3o0?ooo`P0oooo00<000000?ooo`3oool0<@3oool00`000000
oooo0?ooo`2Q0?ooo`00;`3oool3000004@0oooo00<000000?ooo`3oool0o`3oool80?ooo`030000
003oool0oooo0300oooo0P00002S0?ooo`00;`3oool00`000000oooo0?ooo`150?ooo`030000003o
ool0oooo0?l0oooo1P3oool00`000000oooo0?ooo`0b0?ooo`030000003oool0oooo0:40oooo000_
0?ooo`030000003oool0oooo04D0oooo00<000000?ooo`3oool0o`3oool60?ooo`030000003oool0
oooo0380oooo00<000000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3oool0A@3oool00`00
0000oooo0?ooo`3o0?ooo`D0oooo00<000000?ooo`3oool0<`3oool00`000000oooo0?ooo`2Q0?oo
o`00;`3oool00`000000oooo0?ooo`150?ooo`030000003oool0oooo0?l0oooo1@3oool00`000000
oooo0?ooo`0c0?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo04H0oooo
00<000000?ooo`3oool0o`3oool30?ooo`030000003oool0oooo03@0oooo00<000000?ooo`3oool0
X@3oool002l0oooo00<000000?ooo`3oool0AP3oool00`000000oooo0?ooo`3o0?ooo`<0oooo00<0
00000?ooo`3oool0=03oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool00`000000oooo0?ooo`16
0?ooo`030000003oool0oooo0?l0oooo0P3oool00`000000oooo0?ooo`0e0?ooo`030000003oool0
oooo0:40oooo000_0?ooo`030000003oool0oooo04L0oooo00<000000?ooo`3oool0o`3oool10?oo
o`030000003oool0oooo03D0oooo00<000000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3o
ool0A`3oool00`000000oooo0?ooo`3o0?ooo`030000003oool0oooo03H0oooo00<000000?ooo`3o
ool0X@3oool002l0oooo00<000000?ooo`3oool0A`3oool00`000000oooo0?ooo`3o0?ooo`030000
003oool0oooo03H0oooo00<000000?ooo`3oool0X@3oool002l0oooo0`0000180?ooo`030000003o
ool0oooo0?d0oooo00<000000?ooo`3oool0=P3oool200000:<0oooo000_0?ooo`030000003oool0
oooo04P0oooo00<000000?ooo`3oool0o03oool00`000000oooo0?ooo`0h0?ooo`030000003oool0
oooo0:40oooo000_0?ooo`030000003oool0oooo04P0oooo00<000000?ooo`3oool0o03oool00`00
0000oooo0?ooo`0h0?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo04P0
oooo00<000000?ooo`3oool0n`3oool00`000000oooo0?ooo`0i0?ooo`030000003oool0oooo0:40
oooo000_0?ooo`030000003oool0oooo04T0oooo00<000000?ooo`3oool0nP3oool00`000000oooo
0?ooo`0i0?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo04T0oooo00<0
00000?ooo`3oool0n@3oool00`000000oooo0?ooo`0j0?ooo`030000003oool0oooo0:40oooo000_
0?ooo`030000003oool0oooo04T0oooo00<000000?ooo`3oool0n@3oool00`000000oooo0?ooo`0j
0?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo04X0oooo00<000000?oo
o`3oool0m`3oool00`000000oooo0?ooo`0k0?ooo`030000003oool0oooo0:40oooo000_0?ooo`03
0000003oool0oooo04X0oooo00<000000?ooo`3oool0m`3oool00`000000oooo0?ooo`0k0?ooo`03
0000003oool0oooo0:40oooo000B0?ooo`@00000103oool4000000@0oooo100000090?ooo`030000
003oool0oooo04X0oooo00<000000?ooo`3oool0mP3oool00`000000oooo0?ooo`0l0?ooo`030000
003oool0oooo0:40oooo000A0?ooo`8000000P3oool200000080oooo0P0000020?ooo`8000000P3o
ool200000080oooo0P0000080?ooo`030000003oool0oooo04/0oooo00<000000?ooo`3oool0m@3o
ool00`000000oooo0?ooo`0l0?ooo`030000003oool0oooo0:40oooo000F0?ooo`040000003oool0
oooo000000@0oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`060?ooo`030000
003oool0oooo04/0oooo00<000000?ooo`3oool0m03oool00`000000oooo0?ooo`0m0?ooo`030000
003oool0oooo0:40oooo000F0?ooo`040000003oool0oooo000000@0oooo00@000000?ooo`3oool0
0000103oool00`000000oooo0?ooo`060?ooo`@00000BP3oool00`000000oooo0?ooo`3d0?ooo`03
0000003oool0oooo03/0oooo0`00002S0?ooo`005@3oool01@000000oooo0?ooo`3oool0000000@0
oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo
04/0oooo00<000000?ooo`3oool0l`3oool00`000000oooo0?ooo`0n0?ooo`030000003oool0oooo
0:40oooo000C0?ooo`800000103oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo0000
00@0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`1<0?ooo`030000003oool0oooo
0?80oooo00<000000?ooo`3oool0?P3oool00`000000oooo0?ooo`2Q0?ooo`005@3oool01@000000
oooo0?ooo`3oool0000000@0oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`06
0?ooo`030000003oool0oooo04`0oooo00<000000?ooo`3oool0l@3oool00`000000oooo0?ooo`0o
0?ooo`030000003oool0oooo0:40oooo000E0?ooo`050000003oool0oooo0?ooo`000000103oool0
10000000oooo0?ooo`0000040?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0C03o
ool00`000000oooo0?ooo`3_0?ooo`030000003oool000000440oooo00<000000?ooo`3oool0X@3o
ool00140oooo00<000000?ooo`3oool00P3oool010000000oooo0?ooo`0000040?ooo`040000003o
ool0oooo000000@0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`1=0?ooo`030000
003oool0oooo0>d0oooo0`0000120?ooo`030000003oool0oooo0:40oooo000A0?ooo`8000000P3o
ool200000080oooo0P0000020?ooo`8000000P3oool200000080oooo0P0000080?ooo`030000003o
ool0oooo04d0oooo00<000000?ooo`3oool0k03oool500000440oooo00<000000?ooo`3oool0X@3o
ool00180oooo100000040?ooo`@00000103oool4000000T0oooo00<000000?ooo`3oool0C@3oool0
0`000000oooo0?ooo`3[0?ooo`H00000@@3oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool00`00
0000oooo0?ooo`1=0?ooo`030000003oool0oooo0>`0oooo100000120?ooo`030000003oool0oooo
0:40oooo000_0?ooo`030000003oool0oooo04h0oooo00<000000?ooo`3oool0k03oool2000004<0
oooo00<000000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3oool0CP3oool00`000000oooo
0?ooo`3/0?ooo`030000003oool0oooo0480oooo00<000000?ooo`3oool0X@3oool002l0oooo0`00
001>0?ooo`030000003oool0oooo0>/0oooo00<000000?ooo`3oool0@P3oool200000:<0oooo000_
0?ooo`030000003oool0oooo04l0oooo00<000000?ooo`3oool0jP3oool00`000000oooo0?ooo`13
0?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo04l0oooo00<000000?oo
o`3oool0j@3oool00`000000oooo0?ooo`140?ooo`030000003oool0oooo0:40oooo000_0?ooo`03
0000003oool0oooo04l0oooo00<000000?ooo`3oool0j@3oool00`000000oooo0?ooo`140?ooo`03
0000003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo0500oooo00<000000?ooo`3oool0
i`3oool00`000000oooo0?ooo`150?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003o
ool0oooo0500oooo00<000000?ooo`3oool0i`3oool00`000000oooo0?ooo`150?ooo`030000003o
ool0oooo0:40oooo000_0?ooo`030000003oool0oooo0500oooo00<000000?ooo`3oool0iP3oool0
0`000000oooo0?ooo`160?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo
0500oooo00<000000?ooo`3oool0iP3oool00`000000oooo0?ooo`160?ooo`030000003oool0oooo
0:40oooo000_0?ooo`030000003oool0oooo0540oooo00<000000?ooo`3oool0i03oool00`000000
oooo0?ooo`170?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo0540oooo
00<000000?ooo`3oool0i03oool00`000000oooo0?ooo`170?ooo`030000003oool0oooo0:40oooo
000_0?ooo`030000003oool0oooo0540oooo00<000000?ooo`3oool0h`3oool00`000000oooo0?oo
o`180?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo0580oooo00<00000
0?ooo`3oool0hP3oool00`000000oooo0?ooo`180?ooo`030000003oool0oooo0180ooooP000000?
0?ooo`00;`3oool300000580oooo00<000000?ooo`3oool0h@3oool00`000000oooo0?ooo`180?oo
o`800000503oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_0?ooo`03
0000003oool0oooo0580oooo00<000000?ooo`3oool0h@3oool00`000000oooo0?ooo`190?ooo`03
0000003oool0oooo0180oooo00<000000?ooo`3oool0O03oool00`000000oooo0?ooo`0=0?ooo`00
;`3oool00`000000oooo0?ooo`1C0?ooo`030000003oool0oooo0=l0oooo00<000000?ooo`3oool0
BP3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool0
3@3oool002l0oooo00<000000?ooo`3oool0D`3oool00`000000oooo0?ooo`3O0?ooo`030000003o
ool0oooo04X0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003o
ool0oooo00d0oooo000_0?ooo`030000003oool0oooo05<0oooo00<000000?ooo`3oool0gP3oool0
0`000000oooo0?ooo`1;0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0O03oool0
0`000000oooo0?ooo`0=0?ooo`00;`3oool00`000000oooo0?ooo`1C0?ooo`800000g`3oool00`00
0000oooo0?ooo`1;0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0O03oool00`00
0000oooo0?ooo`0=0?ooo`00;`3oool00`000000oooo0?ooo`1C0?ooo`<00000g@3oool00`000000
oooo0?ooo`1<0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0O03oool00`000000
oooo0?ooo`0=0?ooo`00;`3oool00`000000oooo0?ooo`1B0?ooo`D00000g03oool00`000000oooo
0?ooo`1<0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0O03oool00`000000oooo
0?ooo`0=0?ooo`00;`3oool00`000000oooo0?ooo`1C0?ooo`@00000f`3oool00`000000oooo0?oo
o`1=0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0O03oool00`000000oooo0?oo
o`0=0?ooo`00;`3oool00`000000oooo0?ooo`1C0?ooo`<00000g03oool00`000000oooo0?ooo`1=
0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0O03oool00`000000oooo0?ooo`0=
0?ooo`00;`3oool00`000000oooo0?ooo`1D0?ooo`800000f`3oool00`000000oooo0?ooo`1>0?oo
o`030000003oool0oooo0180oooo00<000000?ooo`3oool0O03oool00`000000oooo0?ooo`0=0?oo
o`00;`3oool00`000000oooo0?ooo`1E0?ooo`030000003oool0oooo0=T0oooo00<000000?ooo`3o
ool0CP3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3o
ool03@3oool002l0oooo0`00001F0?ooo`030000003oool0oooo0=L0oooo00<000000?ooo`3oool0
CP3oool2000001@0oooo00<000000?ooo`3oool0O03oool00`000000oooo0?ooo`0=0?ooo`00;`3o
ool00`000000oooo0?ooo`1F0?ooo`030000003oool0oooo0=L0oooo00<000000?ooo`3oool0C`3o
ool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool03@3o
ool002l0oooo00<000000?ooo`3oool0EP3oool00`000000oooo0?ooo`3F0?ooo`030000003oool0
oooo0500oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0
oooo00d0oooo000_0?ooo`030000003oool0oooo05H0oooo00<000000?ooo`3oool0eP3oool00`00
0000oooo0?ooo`1@0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0O03oool00`00
0000oooo0?ooo`0=0?ooo`00;`3oool00`000000oooo0?ooo`1G0?ooo`030000003oool0oooo0=@0
oooo00<000000?ooo`3oool0D@3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0
oooo00<000000?ooo`3oool03@3oool002l0oooo00<000000?ooo`3oool0E`3oool00`000000oooo
0?ooo`3D0?ooo`030000003oool0oooo0540oooo00<000000?ooo`3oool04P3oool00`000000oooo
0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_0?ooo`030000003oool0oooo05L0oooo00<0
00000?ooo`3oool0d`3oool00`000000oooo0?ooo`1B0?ooo`030000003oool0oooo0180oooo00<0
00000?ooo`3oool0O03oool00`000000oooo0?ooo`0=0?ooo`00;`3oool00`000000oooo0?ooo`1H
0?ooo`030000003oool0oooo0=00oooo00<000000?ooo`000000E03oool00`000000oooo0?ooo`0B
0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool03@3oool002l0oooo00<000000?oo
o`3oool0F03oool00`000000oooo0?ooo`3?0?ooo`<00000E@3oool00`000000oooo0?ooo`0B0?oo
o`030000003oool0oooo07`0oooo00<000000?ooo`3oool03@3oool002l0oooo00<000000?ooo`3o
ool0F03oool00`000000oooo0?ooo`3>0?ooo`D00000E03oool00`000000oooo0?ooo`0B0?ooo`03
0000003oool0oooo07`0oooo00<000000?ooo`3oool03@3oool002l0oooo00<000000?ooo`3oool0
F@3oool00`000000oooo0?ooo`3<0?ooo`H00000E03oool00`000000oooo0?ooo`0B0?ooo`030000
003oool0oooo07`0oooo00<000000?ooo`3oool03@3oool002l0oooo0`00001I0?ooo`030000003o
ool0oooo0<d0oooo1@00001C0?ooo`800000503oool00`000000oooo0?ooo`1l0?ooo`030000003o
ool0oooo00d0oooo000_0?ooo`030000003oool0oooo05T0oooo00<000000?ooo`3oool0cP3oool3
000005D0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0
oooo00d0oooo000_0?ooo`030000003oool0oooo05T0oooo00<000000?ooo`3oool0c@3oool00`00
0000oooo0000001F0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0O03oool00`00
0000oooo0?ooo`0=0?ooo`00;`3oool00`000000oooo0?ooo`1J0?ooo`030000003oool0oooo0<`0
oooo00<000000?ooo`3oool0EP3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0
oooo00<000000?ooo`3oool03@3oool002l0oooo00<000000?ooo`3oool0FP3oool00`000000oooo
0?ooo`3;0?ooo`030000003oool0oooo05L0oooo00<000000?ooo`3oool04P3oool00`000000oooo
0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_0?ooo`030000003oool0oooo05X0oooo00<0
00000?ooo`3oool0b`3oool00`000000oooo0?ooo`1G0?ooo`030000003oool0oooo0180oooo00<0
00000?ooo`3oool0O03oool00`000000oooo0?ooo`0=0?ooo`00;`3oool00`000000oooo0?ooo`1K
0?ooo`030000003oool0oooo0<T0oooo00<000000?ooo`3oool0F03oool00`000000oooo0?ooo`0B
0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool03@3oool002l0oooo00<000000?oo
o`3oool0F`3oool00`000000oooo0?ooo`390?ooo`030000003oool0oooo05P0oooo00<000000?oo
o`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_0?ooo`03
0000003oool0oooo05/0oooo00<000000?ooo`3oool0b03oool00`000000oooo0?ooo`1I0?ooo`03
0000003oool0oooo0180oooo00<000000?ooo`3oool0O03oool00`000000oooo0?ooo`0=0?ooo`00
5@3oool00`000000oooo0?ooo`020?ooo`@00000103oool4000000T0oooo00<000000?ooo`3oool0
G03oool00`000000oooo0?ooo`370?ooo`030000003oool0oooo05T0oooo00<000000?ooo`3oool0
4P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000E0?ooo`040000003o
ool0oooo0?ooo`8000000P3oool200000080oooo0P0000020?ooo`800000203oool00`000000oooo
0?ooo`1L0?ooo`030000003oool0oooo0<H0oooo00<000000?ooo`3oool0FP3oool00`000000oooo
0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool03@3oool00140oooo1P00
00020?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103oool00`000000oooo
0?ooo`060?ooo`030000003oool0oooo05`0oooo00<000000?ooo`3oool0aP3oool00`000000oooo
0?ooo`1J0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0O03oool00`000000oooo
0?ooo`0=0?ooo`004@3oool01@000000oooo0?ooo`3oool0000000<0oooo00<000000?ooo`3oool0
0P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00H0oooo1000001K0?ooo`03
0000003oool0oooo0<D0oooo00<000000?ooo`3oool0F@3oool3000001@0oooo00<000000?ooo`3o
ool0O03oool00`000000oooo0?ooo`0=0?ooo`004P3oool010000000oooo0?ooo`0000030?ooo`03
0000003oool0oooo0080oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`060?oo
o`030000003oool0oooo05d0oooo00<000000?ooo`3oool0``3oool00`000000oooo0?ooo`1L0?oo
o`030000003oool0oooo0180oooo00<000000?ooo`3oool0O03oool00`000000oooo0?ooo`0=0?oo
o`004P3oool2000000030?ooo`000000oooo0080oooo00<000000?ooo`3oool00P3oool010000000
oooo0?ooo`0000040?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0G@3oool00`00
0000oooo0?ooo`330?ooo`030000003oool0oooo05`0oooo00<000000?ooo`3oool04P3oool00`00
0000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000C0?ooo`030000003oool0000000<0
oooo00<000000?ooo`3oool00P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo
00H0oooo00<000000?ooo`3oool0G@3oool00`000000oooo0?ooo`320?ooo`030000003oool0oooo
05d0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo
00d0oooo000C0?ooo`030000003oool0000000<0oooo00<000000?ooo`3oool00P3oool010000000
oooo0?ooo`0000040?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0GP3oool00`00
0000oooo0?ooo`310?ooo`030000003oool0oooo05d0oooo00<000000?ooo`3oool04P3oool00`00
0000oooo0?ooo`1F0?ooo`<000008`3oool00`000000oooo0?ooo`0=0?ooo`00503oool2000000<0
oooo00<000000?ooo`3oool00P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo
00H0oooo00<000000?ooo`3oool0GP3oool00`000000oooo0?ooo`300?ooo`030000003oool0oooo
05h0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`1E0?ooo`8000000P3oool30000
0200oooo00<000000?ooo`3oool03@3oool001@0oooo0P0000030?ooo`8000000P3oool200000080
oooo0P0000020?ooo`800000203oool00`000000oooo0?ooo`1N0?ooo`030000003oool0oooo0<00
oooo00<000000?ooo`3oool0GP3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo05D0
oooo00<000000?ooo`3oool00P3oool200000200oooo00<000000?ooo`3oool03@3oool001D0oooo
00<000000?ooo`3oool00P3oool4000000@0oooo100000090?ooo`030000003oool0oooo05l0oooo
00<000000?ooo`3oool0_P3oool00`000000oooo0?ooo`1O0?ooo`030000003oool0oooo0180oooo
00<000000?ooo`3oool0<`3oool7000000@0oooo0`0000000`3oool00000000000020?ooo`@00000
0P3oool300000080oooo0`0000020?ooo`@000000P3oool3000000@0oooo0`0000050?ooo`800000
00<0oooo000000000000100000000`3oool000000000000200000080oooo0`0000000`3oool00000
0000000;0?ooo`00;`3oool00`000000oooo0?ooo`1O0?ooo`030000003oool0oooo0;h0oooo00<0
00000?ooo`3oool0G`3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo01H0oooo0`00
000K0?ooo`040000003oool0oooo0?ooo`<000000P3oool200000080oooo00@000000?ooo`3oool0
oooo0P0000030?ooo`80000000@0oooo0000003oool0oooo0P0000040?ooo`030000003oool0oooo
00@0oooo00<000000?ooo`3oool00P3oool2000000030?ooo`000000000000<0oooo0P0000000`3o
ool00000000000030?ooo`050000003oool0oooo0?ooo`0000000`3oool5000000d0oooo000_0?oo
o`030000003oool0oooo05l0oooo00<000000?ooo`3oool0_@3oool00`000000oooo0?ooo`1P0?oo
o`030000003oool0oooo0180oooo00<000000?ooo`3oool05P3oool2000001`0oooo00<000000?oo
o`3oool00`3oool010000000oooo0?ooo`0000030?ooo`050000003oool0oooo0?ooo`0000001`3o
ool010000000oooo0?ooo`0000050?ooo`<00000103oool00`000000oooo0?ooo`020?ooo`050000
003oool0oooo0?ooo`0000000`3oool01@000000oooo0?ooo`3oool0000000<0oooo00D000000?oo
o`3oool0oooo000000030?ooo`050000003oool000000?ooo`0000003@3oool002l0oooo00<00000
0?ooo`3oool0H03oool00`000000oooo0?ooo`2l0?ooo`030000003oool0oooo0600oooo00<00000
0?ooo`3oool04P3oool00`000000oooo0?ooo`040?ooo`8000000`3oool2000000@0oooo00<00000
0?ooo`3oool00P3oool7000000<0oooo0P0000040?ooo`030000003oool0oooo0080oooo0P000009
0?ooo`030000003oool0oooo00<0oooo00@000000?ooo`3oool0oooo0P0000000`3oool000000?oo
o`020?ooo`030000003oool0oooo00D0oooo00<000000?ooo`0000001@3oool200000080oooo00D0
00000?ooo`3oool0oooo000000040?ooo`050000003oool0oooo0?ooo`0000000`3oool01@000000
oooo0?ooo`3oool0000000<0oooo00D000000?ooo`3oool0oooo000000030?ooo`050000003oool0
00000?ooo`0000003@3oool002l0oooo0`00001P0?ooo`030000003oool0oooo0;/0oooo00<00000
0?ooo`3oool0H03oool2000001@0oooo00<000000?ooo`3oool04`3oool7000001X0oooo00@00000
0?ooo`3oool0oooo0`0000050?ooo`8000000`3oool00`000000oooo0?ooo`050?ooo`<000001@3o
ool01@000000oooo0?ooo`3oool0000000<0oooo00<000000?ooo`3oool00P3oool01@000000oooo
0?ooo`3oool0000000<0oooo00D000000?ooo`3oool0oooo000000030?ooo`050000003oool0oooo
0?ooo`0000000`3oool01@000000oooo0000003oool0000000d0oooo000_0?ooo`030000003oool0
oooo0600oooo00<000000?ooo`3oool0^P3oool00`000000oooo0?ooo`1R0?ooo`030000003oool0
oooo0180oooo00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`0J0?ooo`H000000`3oool2
00000080oooo00@000000?ooo`3oool0oooo0P0000020?ooo`050000003oool0oooo0?ooo`000000
0P3oool00`000000oooo0?ooo`020?ooo`80000000<0oooo0000003oool00`3oool2000000030?oo
o`000000oooo0080000000<0oooo0000000000000`3oool01@000000oooo0?ooo`3oool0000000<0
oooo0P0000000`3oool00000000000030?ooo`<0000000<0oooo0000003oool0303oool002l0oooo
00<000000?ooo`3oool0H03oool00`000000oooo0?ooo`2j0?ooo`030000003oool0oooo0680oooo
00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`0d0?ooo`040000003oool0oooo0?ooo`<0
00000`3oool3000000D0oooo100000030?ooo`030000003oool0oooo00800000103oool400000080
oooo00<000000?ooo`0000000P0000020?ooo`<000000`3oool200000080oooo0P0000020?ooo`80
000000<0oooo0000000000001@3oool4000000d0oooo000_0?ooo`030000003oool0oooo0640oooo
00<000000?ooo`3oool0^03oool00`000000oooo0?ooo`1S0?ooo`030000003oool0oooo0180oooo
00<000000?ooo`3oool0=03oool010000000oooo0?ooo`3oool3000000<0oooo0`0000050?ooo`@0
00000`3oool00`000000oooo0?ooo`02000000@0oooo100000020?ooo`030000003oool000000080
00000P3oool3000000<0oooo0P0000020?ooo`8000000P3oool2000000030?ooo`000000000000D0
oooo1000000=0?ooo`00;`3oool00`000000oooo0?ooo`1Q0?ooo`030000003oool0oooo0;P0oooo
00<000000?ooo`3oool0H`3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo03@0oooo
00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo02`0oooo
00<000000?ooo`0000003@3oool002l0oooo00<000000?ooo`3oool0H@3oool00`000000oooo0?oo
o`2g0?ooo`030000003oool0oooo06@0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?oo
o`0d0?ooo`040000003oool0oooo0?ooo`<000004P3oool00`000000oooo0?ooo`0/0?ooo`030000
003oool0000000d0oooo000_0?ooo`030000003oool0oooo0680oooo00<000000?ooo`3oool0]P3o
ool00`000000oooo0?ooo`1T0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0<`3o
ool700000180oooo0P00000^0?ooo`<000003@3oool002l0oooo00<000000?ooo`3oool0HP3oool0
0`000000oooo0?ooo`2e0?ooo`030000003oool0oooo06D0oooo00<000000?ooo`3oool04P3oool0
0`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_0?ooo`030000003oool0oooo
0680oooo00<000000?ooo`3oool0]@3oool00`000000oooo0?ooo`1U0?ooo`030000003oool0oooo
0180oooo00<000000?ooo`3oool0O03oool00`000000oooo0?ooo`0=0?ooo`00;`3oool00`000000
oooo0?ooo`1S0?ooo`030000003oool0oooo0;<0oooo00<000000?ooo`3oool0IP3oool00`000000
oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool03@3oool002l0oooo
00<000000?ooo`3oool0H`3oool00`000000oooo0?ooo`2a0?ooo`030000003oool0000006P0oooo
00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo
000_0?ooo`030000003oool0oooo06<0oooo00<000000?ooo`3oool0/03oool3000006T0oooo00<0
00000?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_
0?ooo`<00000H`3oool00`000000oooo0?ooo`2`0?ooo`@00000I`3oool2000001@0oooo00<00000
0?ooo`3oool0O03oool00`000000oooo0?ooo`0=0?ooo`00;`3oool00`000000oooo0?ooo`1T0?oo
o`030000003oool0oooo0:h0oooo1@00001X0?ooo`030000003oool0oooo0180oooo00<000000?oo
o`3oool0O03oool00`000000oooo0?ooo`0=0?ooo`00;`3oool00`000000oooo0?ooo`1T0?ooo`03
0000003oool0oooo0:l0oooo0`00001Y0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3o
ool0O03oool00`000000oooo0?ooo`0=0?ooo`00;`3oool00`000000oooo0?ooo`1T0?ooo`030000
003oool0oooo0:l0oooo0P00001Z0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0
O03oool00`000000oooo0?ooo`0=0?ooo`00;`3oool00`000000oooo0?ooo`1U0?ooo`030000003o
ool0oooo0:d0oooo00<000000?ooo`3oool0JP3oool00`000000oooo0?ooo`0B0?ooo`030000003o
ool0oooo07`0oooo00<000000?ooo`3oool03@3oool002l0oooo00<000000?ooo`3oool0I@3oool0
0`000000oooo0?ooo`2]0?ooo`030000003oool0oooo06X0oooo00<000000?ooo`3oool04P3oool0
0`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_0?ooo`030000003oool0oooo
06D0oooo00<000000?ooo`3oool0[03oool00`000000oooo0?ooo`1[0?ooo`030000003oool0oooo
0180oooo00<000000?ooo`3oool0O03oool00`000000oooo0?ooo`0=0?ooo`00;`3oool00`000000
oooo0?ooo`1V0?ooo`030000003oool0oooo0:/0oooo00<000000?ooo`3oool0J`3oool00`000000
oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool03@3oool002l0oooo
00<000000?ooo`3oool0IP3oool00`000000oooo0?ooo`2Z0?ooo`030000003oool0oooo06`0oooo
00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo
000_0?ooo`030000003oool0oooo06H0oooo00<000000?ooo`3oool0Z@3oool00`000000oooo0?oo
o`1]0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0O03oool00`000000oooo0?oo
o`0=0?ooo`00;`3oool00`000000oooo0?ooo`1V0?ooo`030000003oool0oooo0:T0oooo00<00000
0?ooo`3oool0K@3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<00000
0?ooo`3oool03@3oool002l0oooo0`00001W0?ooo`030000003oool0oooo0:L0oooo00<000000?oo
o`3oool0K@3oool2000001@0oooo00<000000?ooo`3oool0O03oool00`000000oooo0?ooo`0=0?oo
o`00;`3oool00`000000oooo0?ooo`1W0?ooo`030000003oool0oooo0:L0oooo00<000000?ooo`3o
ool0KP3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3o
ool03@3oool002l0oooo00<000000?ooo`3oool0I`3oool200000:L0oooo00<000000?ooo`3oool0
K`3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool0
3@3oool002l0oooo00<000000?ooo`3oool0IP3oool400000:H0oooo00<000000?ooo`3oool0K`3o
ool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool03@3o
ool002l0oooo00<000000?ooo`3oool0I@3oool600000:@0oooo00<000000?ooo`3oool0L03oool0
0`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool03@3oool0
02l0oooo00<000000?ooo`3oool0IP3oool500000:<0oooo00<000000?ooo`3oool0L@3oool00`00
0000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool03@3oool002l0
oooo00<000000?ooo`3oool0I`3oool300000:@0oooo00<000000?ooo`3oool0L@3oool00`000000
oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool03@3oool002l0oooo
00<000000?ooo`3oool0J03oool200000:<0oooo00<000000?ooo`3oool0LP3oool00`000000oooo
0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool03@3oool002l0oooo00<0
00000?ooo`3oool0J@3oool00`000000oooo0?ooo`2Q0?ooo`030000003oool0oooo0780oooo00<0
00000?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_
0?ooo`030000003oool0oooo06T0oooo00<000000?ooo`3oool0X03oool00`000000oooo0?ooo`1c
0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0O03oool00`000000oooo0?ooo`0=
0?ooo`00;`3oool00`000000oooo0?ooo`1Z0?ooo`030000003oool0oooo09h0oooo00<000000?oo
o`3oool0M03oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<000000?oo
o`3oool03@3oool002l0oooo00<000000?ooo`3oool0JP3oool00`000000oooo0?ooo`2N0?ooo`03
0000003oool0oooo07@0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`03
0000003oool0oooo00d0oooo000_0?ooo`<00000JP3oool00`000000oooo0?ooo`2M0?ooo`030000
003oool0oooo07@0oooo0P00000D0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool0
3@3oool002l0oooo00<000000?ooo`3oool0J`3oool00`000000oooo0?ooo`2L0?ooo`030000003o
ool0oooo07D0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003o
ool0oooo00d0oooo000_0?ooo`030000003oool0oooo06/0oooo00<000000?ooo`3oool0V`3oool0
0`000000oooo0?ooo`1f0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0O03oool0
0`000000oooo0?ooo`0=0?ooo`00;`3oool00`000000oooo0?ooo`1[0?ooo`030000003oool0oooo
09/0oooo00<000000?ooo`3oool0MP3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo
07`0oooo00<000000?ooo`3oool03@3oool002l0oooo00<000000?ooo`3oool0K03oool00`000000
oooo0?ooo`2I0?ooo`030000003oool0oooo07L0oooo00<000000?ooo`3oool04P3oool00`000000
oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_0?ooo`030000003oool0oooo06`0oooo
00<000000?ooo`3oool0V03oool00`000000oooo0?ooo`1h0?ooo`030000003oool0oooo0180oooo
00<000000?ooo`3oool0O03oool00`000000oooo0?ooo`0=0?ooo`00;`3oool00`000000oooo0?oo
o`1/0?ooo`030000003oool0oooo09P0oooo00<000000?ooo`3oool0N03oool00`000000oooo0?oo
o`0B0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool03@3oool002l0oooo00<00000
0?ooo`3oool0K03oool00`000000oooo0?ooo`2G0?ooo`030000003oool0oooo07T0oooo00<00000
0?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_0?oo
o`030000003oool0oooo06d0oooo00<000000?ooo`3oool0U03oool00`000000oooo0000001k0?oo
o`030000003oool0oooo0180oooo00<000000?ooo`3oool0O03oool00`000000oooo0?ooo`0=0?oo
o`004P3oool3000000D0oooo100000040?ooo`@000002@3oool00`000000oooo0?ooo`1]0?ooo`03
0000003oool0oooo09<0oooo0`00001l0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3o
ool0O03oool00`000000oooo0?ooo`0=0?ooo`004P3oool010000000oooo0?ooo`0000030?ooo`80
00000P3oool200000080oooo0P0000020?ooo`800000203oool00`000000oooo0?ooo`1]0?ooo`03
0000003oool0oooo0980oooo1@00001k0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3o
ool0O03oool00`000000oooo0?ooo`0=0?ooo`005P3oool010000000oooo0?ooo`0000040?ooo`04
0000003oool0oooo000000@0oooo00<000000?ooo`3oool01P3oool4000006d0oooo00<000000?oo
o`3oool0T03oool6000007T0oooo0`00000D0?ooo`030000003oool0oooo07`0oooo00<000000?oo
o`3oool03@3oool001H0oooo00@000000?ooo`3oool00000103oool010000000oooo0?ooo`000004
0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0KP3oool00`000000oooo0?ooo`2A
0?ooo`D00000N`3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<00000
0?ooo`3oool03@3oool001D0oooo0P0000020?ooo`030000003oool0oooo0080oooo00@000000?oo
o`3oool00000103oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo06h0oooo00<00000
0?ooo`3oool0TP3oool3000007`0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`1l
0?ooo`030000003oool0oooo00d0oooo000B0?ooo`040000003oool00000000000<0oooo00<00000
0?ooo`3oool00P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00H0oooo00<0
00000?ooo`3oool0KP3oool00`000000oooo0?ooo`2A0?ooo`030000003oool0000007d0oooo00<0
00000?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000B
0?ooo`<00000103oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00<0
00000?ooo`3oool01P3oool00`000000oooo0?ooo`1_0?ooo`030000003oool0oooo08l0oooo00<0
00000?ooo`3oool0OP3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<0
00000?ooo`3oool03@3oool00180oooo0`0000040?ooo`030000003oool0oooo0080oooo00@00000
0?ooo`3oool00000103oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo06l0oooo00<0
00000?ooo`3oool0SP3oool00`000000oooo0?ooo`1o0?ooo`030000003oool0oooo0180oooo00<0
00000?ooo`3oool0O03oool00`000000oooo0?ooo`0=0?ooo`004P3oool00`000000oooo0?ooo`04
0?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103oool00`000000oooo0?oo
o`060?ooo`030000003oool0oooo06l0oooo00<000000?ooo`3oool0SP3oool00`000000oooo0?oo
o`1o0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0O03oool00`000000oooo0?oo
o`0=0?ooo`004`3oool3000000<0oooo0P0000020?ooo`8000000P3oool200000080oooo0P000008
0?ooo`030000003oool0oooo0700oooo00<000000?ooo`3oool0S03oool00`000000oooo0?ooo`20
0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0O03oool00`000000oooo0?ooo`0=
0?ooo`004`3oool4000000<0oooo100000040?ooo`@000002@3oool00`000000oooo0?ooo`1`0?oo
o`030000003oool0oooo08/0oooo00<000000?ooo`3oool0P@3oool00`000000oooo0?ooo`0B0?oo
o`030000003oool0oooo07`0oooo00<000000?ooo`3oool03@3oool002l0oooo00<000000?ooo`3o
ool0L03oool00`000000oooo0?ooo`2;0?ooo`030000003oool0oooo0840oooo00<000000?ooo`3o
ool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_0?ooo`030000
003oool0oooo0700oooo00<000000?ooo`3oool0RP3oool00`000000oooo0?ooo`220?ooo`030000
003oool0oooo0180oooo00<000000?ooo`3oool0O03oool00`000000oooo0?ooo`0=0?ooo`00;`3o
ool00`000000oooo0?ooo`1a0?ooo`030000003oool0oooo08P0oooo00<000000?ooo`3oool0P`3o
ool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool03@3o
ool002l0oooo0`00001a0?ooo`030000003oool0oooo08L0oooo00<000000?ooo`3oool0P`3oool2
000001@0oooo00<000000?ooo`3oool0O03oool00`000000oooo0?ooo`0=0?ooo`00;`3oool00`00
0000oooo0?ooo`1a0?ooo`030000003oool0oooo08L0oooo00<000000?ooo`3oool0Q03oool00`00
0000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool03@3oool002l0
oooo00<000000?ooo`3oool0LP3oool00`000000oooo0?ooo`250?ooo`030000003oool0oooo08D0
oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0
oooo000_0?ooo`030000003oool0oooo0780oooo00<000000?ooo`3oool0Q03oool00`000000oooo
0?ooo`260?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0O03oool00`000000oooo
0?ooo`0=0?ooo`00;`3oool00`000000oooo0?ooo`1b0?ooo`030000003oool0oooo08@0oooo00<0
00000?ooo`3oool0QP3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<0
00000?ooo`3oool03@3oool002l0oooo00<000000?ooo`3oool0L`3oool00`000000oooo0?ooo`22
0?ooo`030000003oool0oooo08L0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`1l
0?ooo`030000003oool0oooo00d0oooo000_0?ooo`030000003oool0oooo07<0oooo00<000000?oo
o`3oool0P@3oool00`000000oooo0?ooo`280?ooo`030000003oool0oooo0180oooo00<000000?oo
o`3oool0O03oool00`000000oooo0?ooo`0=0?ooo`00;`3oool00`000000oooo0?ooo`1c0?ooo`03
0000003oool0oooo0800oooo00<000000?ooo`3oool0R@3oool00`000000oooo0?ooo`0B0?ooo`03
0000003oool0oooo07`0oooo00<000000?ooo`3oool03@3oool002l0oooo00<000000?ooo`3oool0
L`3oool00`000000oooo0?ooo`200?ooo`030000003oool0oooo08T0oooo00<000000?ooo`3oool0
4P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_0?ooo`030000003o
ool0oooo07@0oooo00<000000?ooo`3oool0OP3oool00`000000oooo0?ooo`2:0?ooo`030000003o
ool0oooo0180oooo00<000000?ooo`3oool0O03oool00`000000oooo0?ooo`0=0?ooo`00;`3oool0
0`000000oooo0?ooo`1d0?ooo`030000003oool0oooo07d0oooo00<000000?ooo`3oool0R`3oool0
0`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool03@3oool0
02l0oooo00<000000?ooo`3oool0M03oool00`000000oooo0?ooo`1m0?ooo`030000003oool0oooo
08/0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo
00d0oooo000_0?ooo`<00000M@3oool00`000000oooo0?ooo`1k0?ooo`030000003oool0oooo08/0
oooo0P00000D0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool03@3oool002l0oooo
00<000000?ooo`3oool0M@3oool00`000000oooo0?ooo`1h0?ooo`030000003oool0000008l0oooo
00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`100?ooo`<00000>@3oool00`000000oooo
0?ooo`0=0?ooo`00;`3oool00`000000oooo0?ooo`1e0?ooo`030000003oool0oooo07L0oooo0`00
002@0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0?`3oool200000080oooo0`00
000f0?ooo`030000003oool0oooo00d0oooo000_0?ooo`030000003oool0oooo07D0oooo00<00000
0?ooo`3oool0M`3oool4000008l0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`0o
0?ooo`030000003oool0oooo0080oooo0P00000f0?ooo`030000003oool0oooo00d0oooo000_0?oo
o`030000003oool0oooo07H0oooo00<000000?ooo`3oool0M@3oool5000008l0oooo00<000000?oo
o`3oool04P3oool00`000000oooo0?ooo`0F0?ooo`8000006`3oool00`000000oooo000000020000
00<0oooo0`0000020?ooo`@000000P3oool3000000030?ooo`0000000000008000000P3oool30000
00030?ooo`000000000000<000008`3oool00`000000oooo0?ooo`0=0?ooo`00;`3oool00`000000
oooo0?ooo`1f0?ooo`030000003oool0oooo07H0oooo0`00002@0?ooo`030000003oool0oooo0180
oooo00<000000?ooo`3oool05@3oool4000001X0oooo0P0000020?ooo`<000000P3oool01@000000
oooo0?ooo`3oool0000000H0oooo00D000000?ooo`3oool0oooo000000030?ooo`8000000P3oool0
1@000000oooo0?ooo`3oool0000002@0oooo00<000000?ooo`3oool03@3oool002l0oooo00<00000
0?ooo`3oool0MP3oool00`000000oooo0?ooo`1e0?ooo`030000003oool000000940oooo00<00000
0?ooo`3oool04P3oool00`000000oooo0?ooo`040?ooobL00000203oool00`000000oooo0?ooo`02
0?ooo`8000000P3oool010000000oooo0?ooo`3oool3000000@0oooo00D000000?ooo`3oool0oooo
000000030?ooo`050000003oool0oooo0?ooo`0000000`3oool00`000000oooo0?ooo`0R0?ooo`03
0000003oool0oooo00d0oooo000_0?ooo`030000003oool0oooo07L0oooo00<000000?ooo`3oool0
L`3oool00`000000oooo0?ooo`2B0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0
5@3oool5000001h0oooo0P0000020?ooo`030000003oool0oooo008000000P3oool01@000000oooo
0?ooo`3oool0000000<0oooo00<000000?ooo`3oool00P3oool2000000030?ooo`000000oooo0080
oooo00<000000?ooo`3oool08P3oool00`000000oooo0?ooo`0=0?ooo`00;`3oool00`000000oooo
0?ooo`1g0?ooo`030000003oool0oooo07<0oooo00<000000?ooo`3oool0TP3oool00`000000oooo
0?ooo`0B0?ooo`030000003oool0oooo01H0oooo0`00000M0?ooo`800000103oool010000000oooo
0?ooo`0000030?ooo`050000003oool0oooo0?ooo`0000000`3oool00`000000oooo0?ooo`040?oo
o`8000000`3oool00`000000oooo0?ooo`0R0?ooo`030000003oool0oooo00d0oooo000_0?ooo`03
0000003oool0oooo07L0oooo00<000000?ooo`3oool0LP3oool00`000000oooo0?ooo`2C0?ooo`03
0000003oool0oooo0180oooo00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`0J0?ooo`<0
00001@3oool00`000000oooo0?ooo`02000000030?ooo`000000oooo00<0oooo0P0000000`3oool0
0000000000030?ooo`8000000P3oool01@000000oooo0?ooo`3oool0000002@0oooo00<000000?oo
o`3oool03@3oool002l0oooo00<000000?ooo`3oool0M`3oool00`000000oooo0?ooo`1a0?ooo`03
0000003oool0oooo09@0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`0c0?ooo`80
00001P3oool2000000<0oooo100000020?ooo`80000000<0oooo0000000000001@3oool3000000@0
oooo00<000000?ooo`3oool08P3oool00`000000oooo0?ooo`0=0?ooo`00;`3oool3000007P0oooo
00<000000?ooo`3oool0K`3oool00`000000oooo0?ooo`2D0?ooo`800000503oool00`000000oooo
0?ooo`0c0?ooo`8000001P3oool2000000<0oooo100000020?ooo`80000000<0oooo000000000000
1@3oool3000000@0oooo00<000000?ooo`3oool08P3oool00`000000oooo0?ooo`0=0?ooo`00;`3o
ool00`000000oooo0?ooo`1h0?ooo`030000003oool0oooo06h0oooo00<000000?ooo`3oool0UP3o
ool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo03<0oooo00<000000?ooo`3oool00P3o
ool2000001d0oooo00<000000?ooo`3oool08P3oool00`000000oooo0?ooo`0=0?ooo`00;`3oool0
0`000000oooo0?ooo`1h0?ooo`030000003oool0oooo06d0oooo00<000000?ooo`3oool0U`3oool0
0`000000oooo0?ooo`0B0?ooo`030000003oool0oooo03<0oooo0P0000020?ooo`<000000P3oool0
0`000000oooo0?ooo`0H0?ooo`030000003oool0oooo0280oooo00<000000?ooo`3oool03@3oool0
02l0oooo00<000000?ooo`3oool0N@3oool00`000000oooo0?ooo`1[0?ooo`030000003oool0oooo
09P0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`0d0?ooo`<0000000<0oooo0000
000000000P3oool00`000000oooo0?ooo`0G0?ooo`800000903oool00`000000oooo0?ooo`0=0?oo
o`00;`3oool00`000000oooo0?ooo`1i0?ooo`030000003oool0oooo06/0oooo00<000000?ooo`3o
ool0V03oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3o
ool03@3oool002l0oooo00<000000?ooo`3oool0N@3oool00`000000oooo0?ooo`1Z0?ooo`030000
003oool0oooo09T0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000
003oool0oooo00d0oooo000_0?ooo`030000003oool0oooo07X0oooo00<000000?ooo`3oool0J03o
ool00`000000oooo0?ooo`2J0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0O03o
ool00`000000oooo0?ooo`0=0?ooo`00;`3oool00`000000oooo0?ooo`1j0?ooo`030000003oool0
oooo06L0oooo00<000000?ooo`3oool0V`3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0
oooo07`0oooo00<000000?ooo`3oool03@3oool002l0oooo00<000000?ooo`3oool0NP3oool00`00
0000oooo0?ooo`1V0?ooo`030000003oool0oooo09`0oooo00<000000?ooo`3oool04P3oool00`00
0000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_0?ooo`030000003oool0oooo07X0
oooo0P00001V0?ooo`030000003oool0oooo09d0oooo00<000000?ooo`3oool04P3oool00`000000
oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_0?ooo`030000003oool0oooo07X0oooo
0`00001T0?ooo`030000003oool0oooo09h0oooo00<000000?ooo`3oool04P3oool00`000000oooo
0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_0?ooo`030000003oool0oooo07T0oooo1@00
001R0?ooo`030000003oool0oooo09l0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?oo
o`1l0?ooo`030000003oool0oooo00d0oooo000_0?ooo`<00000NP3oool4000005l0oooo00@00000
0?ooo`3oool00000X03oool2000001@0oooo00<000000?ooo`3oool0O03oool00`000000oooo0?oo
o`0=0?ooo`00;`3oool00`000000oooo0?ooo`1j0?ooo`<00000G`3oool400000:80oooo00<00000
0?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_0?oo
o`030000003oool0oooo07/0oooo00<000000?ooo`000000G@3oool500000:80oooo00<000000?oo
o`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_0?ooo`03
0000003oool0oooo07d0oooo00<000000?ooo`3oool0FP3oool600000:80oooo00<000000?ooo`3o
ool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_0?ooo`030000
003oool0oooo07h0oooo00<000000?ooo`3oool0FP3oool500000:80oooo00<000000?ooo`3oool0
4P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_0?ooo`030000003o
ool0oooo07l0oooo00<000000?ooo`3oool0F@3oool400000:<0oooo00<000000?ooo`3oool04P3o
ool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_0?ooo`030000003oool0
oooo07l0oooo00<000000?ooo`3oool0E`3oool200000080oooo00<000000?ooo`3oool0XP3oool0
0`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool03@3oool0
02l0oooo00<000000?ooo`3oool0P03oool00`000000oooo0?ooo`1E0?ooo`030000003oool0oooo
0:L0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo
00d0oooo000_0?ooo`030000003oool0oooo0800oooo00<000000?ooo`3oool0E03oool00`000000
oooo0?ooo`2X0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0O03oool00`000000
oooo0?ooo`0=0?ooo`004P3oool4000000@0oooo100000040?ooo`@000002@3oool00`000000oooo
0?ooo`210?ooo`030000003oool0oooo0580oooo00<000000?ooo`3oool0Z@3oool00`000000oooo
0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool03@3oool00140oooo0P00
00020?ooo`8000000P3oool200000080oooo0P0000020?ooo`8000000P3oool2000000P0oooo00<0
00000?ooo`3oool0PP3oool00`000000oooo0?ooo`1@0?ooo`030000003oool0oooo0:X0oooo00<0
00000?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000A
0?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103oool010000000oooo0?oo
o`0000040?ooo`030000003oool0oooo00H0oooo100000210?ooo`030000003oool0oooo04h0oooo
0P00002[0?ooo`<00000503oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo
000A0?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103oool010000000oooo
0?ooo`0000040?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0P`3oool00`000000
oooo0?ooo`1<0?ooo`030000003oool0oooo0:d0oooo00<000000?ooo`3oool04P3oool00`000000
oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000A0?ooo`8000000P3oool200000080oooo
00<000000?ooo`3oool00P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00H0
oooo00<000000?ooo`3oool0P`3oool00`000000oooo0?ooo`1;0?ooo`030000003oool0oooo0:h0
oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0
oooo000B0?ooo`@000000`3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0
oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`240?ooo`030000003oool0oooo04T0
oooo00<000000?ooo`3oool0[`3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0
oooo00<000000?ooo`3oool03@3oool00180oooo00<000000?ooo`3oool0103oool00`000000oooo
0?ooo`020?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool01P3oool00`000000
oooo0?ooo`250?ooo`030000003oool0oooo04L0oooo00<000000?ooo`3oool0/03oool00`000000
oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool03@3oool00180oooo
00<000000?ooo`3oool0103oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0
oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`250?ooo`030000003oool0oooo04H0
oooo00<000000?ooo`3oool0/@3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0
oooo00<000000?ooo`3oool03@3oool001<0oooo00<000000?ooo`3oool00`3oool00`000000oooo
0?ooo`020?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool01P3oool00`000000
oooo0?ooo`260?ooo`030000003oool0oooo0400oooo00<000000?ooo`3oool00P00002d0?ooo`03
0000003oool0oooo0180oooo00<000000?ooo`3oool0O03oool00`000000oooo0?ooo`0=0?ooo`00
503oool2000000<0oooo0P0000020?ooo`8000000P3oool200000080oooo0P0000080?ooo`030000
003oool0oooo08L0oooo00<000000?ooo`3oool0?P3oool400000;H0oooo00<000000?ooo`3oool0
4P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000E0?ooo`8000000`3o
ool4000000@0oooo100000090?ooo`030000003oool0oooo08L0oooo00<000000?ooo`3oool0?P3o
ool400000;H0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003o
ool0oooo00d0oooo000_0?ooo`030000003oool0oooo08P0oooo00<000000?ooo`3oool0?03oool5
00000;H0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0
oooo00d0oooo000_0?ooo`030000003oool0oooo08P0oooo00<000000?ooo`3oool0?03oool40000
0;L0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo
00d0oooo000_0?ooo`030000003oool0oooo08T0oooo00<000000?ooo`3oool0>@3oool200000080
oooo00<000000?ooo`3oool0]P3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0
oooo00<000000?ooo`3oool03@3oool002l0oooo0`00002:0?ooo`030000003oool0oooo03H0oooo
0P00002l0?ooo`800000503oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo
000_0?ooo`030000003oool0oooo08X0oooo00<000000?ooo`3oool0=03oool200000;l0oooo00<0
00000?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_
0?ooo`030000003oool0oooo08/0oooo00<000000?ooo`3oool0<@3oool200000<40oooo00<00000
0?ooo`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_0?oo
o`030000003oool0oooo08/0oooo00<000000?ooo`3oool0;`3oool200000<<0oooo00<000000?oo
o`3oool04P3oool00`000000oooo0?ooo`1l0?ooo`030000003oool0oooo00d0oooo000_0?ooo`03
0000003oool0oooo08`0oooo00<000000?ooo`3oool09`3oool00`000000oooo0?ooo`020?ooo`80
0000a@3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3o
ool03@3oool002l0oooo00<000000?ooo`3oool0S@3oool00`000000oooo0?ooo`0U0?ooo`<00000
00<0oooo000000000000a`3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07`0oooo
00<000000?ooo`3oool03@3oool002l0oooo00<000000?ooo`3oool0S@3oool00`000000oooo0?oo
o`0T0?ooo`D00000b@3oool00`000000oooo0?ooo`0B0?oooh0000003`3oool002l0oooo00<00000
0?ooo`3oool0SP3oool2000002<0oooo1P0000390?ooo`030000003oool0oooo0:40oooo000_0?oo
o`030000003oool0oooo08d0oooo1000000O0?ooo`T00000b@3oool00`000000oooo0?ooo`2Q0?oo
o`00;`3oool00`000000oooo0?ooo`2<0?ooo`L000003`3oool00`000000oooo0?ooo`070?ooo`@0
00001@3oool300000<X0oooo00<000000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3oool0
S@3oool5000000030?ooo`000000000000@00000203oool3000000@0oooo1000000:0?ooo`030000
003oool0oooo0<T0oooo00<000000?ooo`3oool0X@3oool002l0oooo0`00002>0?ooo`<00000203o
ool600000080oooo1`00003I0?ooo`800000X`3oool002l0oooo00<000000?ooo`3oool0S`3oool0
0`000000oooo0?ooo`0=0?ooo`H00000g@3oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool00`00
0000oooo0?ooo`2Q0?ooo`<00000gP3oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool00`000000
oooo0?ooo`2R0?ooo`030000003oool0oooo0=d0oooo00<000000?ooo`3oool0X@3oool002l0oooo
00<000000?ooo`3oool0o`3ooon30?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003o
ool0oooo0?l0ooooP`3oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool00`000000oooo0?ooo`3o
0?oooh<0oooo00<000000?ooo`3oool0X@3oool002l0oooo00<000000?ooo`3oool0<03oool00`00
0000oooo0?ooo`1A0?ooo`030000003oool0oooo0580oooo00<000000?ooo`3oool0DP3oool00`00
0000oooo0?ooo`1A0?ooo`030000003oool0oooo0:40oooo000_0?ooo`030000003oool0oooo00h0
oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0
oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo00h0
oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0
oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0
oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0
oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0
oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00h0
oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`2Q0?ooo`00;`3oool00`000000oooo
0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo
0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03@3oool00`000000oooo
0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo
0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo
0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo
0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo
0?ooo`0>0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo
0?ooo`0>0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool0X@3oool002l0ooooo`00
002700000:<0oooo003o0?ooool0ooooFP3oool00?l0ooooo`3ooomJ0?ooo`00o`3ooooo0?oooeX0
oooo003o0?ooool0ooooFP3oool00?l0ooooo`3ooomJ0?ooo`00o`3ooooo0?oooeX0oooo003o0?oo
ool0ooooFP3oool00?l0ooooo`3ooomJ0?ooo`00o`3ooooo0?oooeX0oooo003o0?ooool0ooooFP3o
ool00?l0ooooo`3ooomJ0?ooo`00o`3ooooo0?oooeX0oooo003o0?ooool0ooooFP3oool00?l0oooo
o`3ooomJ0?ooo`00o`3ooooo0?oooeX0oooo003o0?ooool0ooooFP3oool00001\
\>"],
  ImageRangeCache->{{{0, 599}, {443.375, 0}} -> {-1.06855, -1.05, 0.00710458, \
0.00710458}, {{14.4375, 436.688}, {432.812, 10.5}} -> {-1.58496, -81.7401, \
0.177071, 2.59463}, {{457.812, 584.5}, {200.562, 31.625}} -> {-12.2422, \
-3.72263, 0.0397833, 0.0223781}, {{464.562, 502.25}, {188.438, 121.438}} -> \
{-25.6537, -15.307, 0.0796028, 0.0796028}, {{464.562, 502.25}, {110.688, \
43.6875}} -> {-25.6537, -19.433, 0.0796028, 0.0796028}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[TextData[{
  "Finding the (\[Delta], ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  ") ambiguity is somewhat tricky with ",
  StyleBox["RatesInfo",
    FontFamily->"Courier"],
  ", since it always returns the rates set by ",
  StyleBox["SetRates",
    FontFamily->"Courier"],
  ". Thus, one needs to find the best-fit rates for the dominant neutrino and \
antineutrino channels first by using the best-fit parameters, and then to \
vary the parameters with ",
  StyleBox["SetVacuumParameters",
    FontFamily->"Courier"],
  ", ",
  StyleBox["SetMasses",
    FontFamily->"Courier"],
  ", and ",
  StyleBox["SetRates",
    FontFamily->"Courier"],
  "."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Changing other parameters", "Section"],

Cell[TextData[{
  "The following routines are so far tested and have to be called ",
  StyleBox["after",
    FontSlant->"Italic"],
  " the experiment initialization to change the experimental paremeters:"
}], "Text"],

Cell[TextData[{
  StyleBox["MSetBaseline[Baseline, Experiment_Number]",
    FontFamily->"Courier"],
  " changes the baseline length."
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell["MSetBaseline always requires an MChangeProfile command!", "Text"],

Cell[TextData[{
  StyleBox["MSetTargetMass[Target mass,Experiment_Number]",
    FontFamily->"Courier"],
  " changes the target mass/luminosity."
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell[TextData[{
  StyleBox["MSetErrorDim[Error_Dimenstion, Experiment_Number, Rule_Number]",
    FontFamily->"Courier"],
  " changes an error dimension of a certain rule."
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell[TextData[{
  StyleBox["MChangeProfile[List_of_Lengths, List_of_Densities, \
Experiment_Number]",
    FontFamily->"Courier"],
  " changes the matter density profile, where the lengths have to add up to \
the baseline length."
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell["\<\
For example, we may want to change the average matter density of \
experiment \"0\" by 15%:\
\>", "Text"],

Cell[BoxData[
    \(MSetExperiment[0]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(pd = MLGetProfileData[]\)], "Input"],

Cell[BoxData[
    \({{3000.`}, {3.5`}}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(MChangeProfile[pd[\([1]\)], pd[\([2]\)]*1.15, 0]\)], "Input"],

Cell[TextData[{
  "Analogously, ",
  StyleBox["MSetExperiment",
    FontFamily->"Courier"],
  " can be used together with the Check...-functions to return the set \
parameter values!"
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Summary of functions", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Sort[LinkPatterns[vlbl]]\  // \ TableForm\)], "Input"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {
            TagBox[\(CheckBaseline[]\),
              HoldForm]},
          {
            TagBox[\(CheckBeamEnergy[]\),
              HoldForm]},
          {
            TagBox[\(CheckBeamPolarisation[]\),
              HoldForm]},
          {
            TagBox[\(CheckBGCenter[l_Integer]\),
              HoldForm]},
          {
            TagBox[\(CheckBGErrors[l_Integer]\),
              HoldForm]},
          {
            TagBox[\(CheckChannel[i_Integer]\),
              HoldForm]},
          {
            TagBox[\(CheckEnergyTreshold[]\),
              HoldForm]},
          {
            TagBox[\(CheckErrorDim[rule_Integer]\),
              HoldForm]},
          {
            TagBox[\(CheckErrorFunction[]\),
              HoldForm]},
          {
            TagBox[\(CheckExperiment[]\),
              HoldForm]},
          {
            TagBox[\(CheckMuons[]\),
              HoldForm]},
          {
            TagBox[\(CheckNumberOfBins[]\),
              HoldForm]},
          {
            TagBox[\(CheckNumberOfChannels[]\),
              HoldForm]},
          {
            TagBox[\(CheckNumberOfRules[]\),
              HoldForm]},
          {
            TagBox[\(CheckRuleCoeff[l_Integer, bg_Integer]\),
              HoldForm]},
          {
            TagBox[\(CheckRules[l_Integer, bg_Integer]\),
              HoldForm]},
          {
            TagBox[\(CheckSignalErrors[l_Integer]\),
              HoldForm]},
          {
            TagBox[\(CheckSquaredMasses[]\),
              HoldForm]},
          {
            TagBox[\(CheckTargetMass[]\),
              HoldForm]},
          {
            TagBox[\(CheckTresholdCenter[i_Integer]\),
              HoldForm]},
          {
            TagBox[\(CheckTresholdErrors[i_Integer]\),
              HoldForm]},
          {
            TagBox[\(CheckVacuumParamters[]\),
              HoldForm]},
          {
            TagBox[\(ChiBG[x_List]\),
              HoldForm]},
          {
            TagBox[\(CInitSmearing[ls_Integer]\),
              HoldForm]},
          {
            TagBox[\(CSetSquaredMasses[mq1_Real, mq2_Real, mq3_Real]\),
              HoldForm]},
          {
            
            TagBox[\(CSetVacuumParameters[pt12_Real, pt13_Real, pt23_Real, 
                pdelta1_Real]\),
              HoldForm]},
          {
            TagBox[\(FastFluxE[en_Real, baseline_Real]\),
              HoldForm]},
          {
            TagBox[\(FastFluxMu[en_Real, baseline_Real]\),
              HoldForm]},
          {
            TagBox[\(FluxE[en_Real, baseline_Real, cost_Real]\),
              HoldForm]},
          {
            TagBox[\(FluxMu[en_Real, baseline_Real, cost_Real]\),
              HoldForm]},
          {
            
            TagBox[\(FluxNew[en_Real, baseline_Real, type_Integer, 
                polarity_Integer, l_Integer, anti_Integer]\),
              HoldForm]},
          {
            TagBox[\(InitMemory[]\),
              HoldForm]},
          {
            TagBox[\(MChangeProfile[inl_List, ind_List, typ_Integer]\),
              HoldForm]},
          {
            TagBox[\(MDChi2P[the_Real, del_Real, x_List]\),
              HoldForm]},
          {
            TagBox[\(MDChiDelta[the_Real, x_List]\),
              HoldForm]},
          {
            TagBox[\(MDChiDM[the_Real, x_List]\),
              HoldForm]},
          {
            TagBox[\(MDChiNew[x_List]\),
              HoldForm]},
          {
            TagBox[\(MDChiTheta[the_Real, x_List]\),
              HoldForm]},
          {
            TagBox[\(MDChiTheta23[the_Real, x_List]\),
              HoldForm]},
          {
            TagBox[\(MLConstantProfile[pl_Real, rho_Real]\),
              HoldForm]},
          {
            TagBox[\(MLGetProfileData[]\),
              HoldForm]},
          {
            TagBox[\(MLoadExperiment[in_Integer]\),
              HoldForm]},
          {
            
            TagBox[\(MLProfileProbability[pl_Integer, pm_Integer, 
                panti_Integer, pen_Real]\),
              HoldForm]},
          {
            TagBox[\(MLStaceyProfile[bl_Real, steps_Integer]\),
              HoldForm]},
          {
            
            TagBox[\(MLVacuumProbability[pl_Integer, pm_Integer, 
                panti_Integer, pen_Real, plength_Real]\),
              HoldForm]},
          {
            TagBox[\(MSetBaseline[in_Real, i_Integer]\),
              HoldForm]},
          {
            TagBox[\(MSetDensityPrior[start_Real, error_Real, typ_Integer]\),
              HoldForm]},
          {
            TagBox[\(MSetErrorDim[in_Integer, i_Integer, rule_Integer]\),
              HoldForm]},
          {
            TagBox[\(MSetExperiment[typ_Integer]\),
              HoldForm]},
          {
            TagBox[\(MSetNewRates[]\),
              HoldForm]},
          {
            TagBox[\(MSetNumberOfExperiments[in_Integer]\),
              HoldForm]},
          {
            TagBox[\(MSetRates[]\),
              HoldForm]},
          {
            TagBox[\(MSetTargetMass[in_Real, i_Integer]\),
              HoldForm]},
          {
            
            TagBox[\(oldSetInputErrors[a_Real, b_Real, c_Real, d_Real, 
                e_Real, f_Real]\),
              HoldForm]},
          {
            TagBox[\(oldSetNewRates[]\),
              HoldForm]},
          {
            TagBox[\(oldSetRates[]\),
              HoldForm]},
          {
            
            TagBox[\(oldSetStartingValues[a_Real, b_Real, c_Real, d_Real, 
                e_Real, f_Real]\),
              HoldForm]},
          {
            TagBox[\(RemovePointers[]\),
              HoldForm]},
          {
            TagBox[\(ReturnBackgroundRates[rule_Integer, part_Integer]\),
              HoldForm]},
          {
            TagBox[\(ReturnEnergyTable[]\),
              HoldForm]},
          {
            TagBox[\(ReturnSignalRates[rule_Integer, part_Integer]\),
              HoldForm]},
          {
            TagBox[\(SetBaseline[l_Real]\),
              HoldForm]},
          {
            TagBox[\(SetBeamEnergy[en_Real]\),
              HoldForm]},
          {
            TagBox[\(SetBeamPolarisation[pol_Real]\),
              HoldForm]},
          {
            TagBox[\(SetBGCenter[i_Integer, norm_Real, tilt_Real]\),
              HoldForm]},
          {
            TagBox[\(SetBGErrors[i_Integer, norm_Real, tilt_Real]\),
              HoldForm]},
          {
            TagBox[\(SetBGRule[i_Integer, rule_List, coeff_List]\),
              HoldForm]},
          {
            
            TagBox[\(SetChannel[i_Integer, polarity_Integer, anti_Integer, 
                l_Integer, m_Integer, cc_Integer]\),
              HoldForm]},
          {
            TagBox[\(SetChannelOld[ch_Integer]\),
              HoldForm]},
          {
            TagBox[\(SetEnergyTreshold[etresh_Real]\),
              HoldForm]},
          {
            TagBox[\(SetErrorDim[typ_Integer, rule_Integer]\),
              HoldForm]},
          {
            TagBox[\(SetErrorFunction[typ_Integer]\),
              HoldForm]},
          {
            TagBox[\(SetExperiment[type_Integer]\),
              HoldForm]},
          {
            TagBox[\(SetMuons[n_Real]\),
              HoldForm]},
          {
            TagBox[\(SetNumberOfBins[nr_Integer]\),
              HoldForm]},
          {
            TagBox[\(SetNumberOfChannels[cc_Integer]\),
              HoldForm]},
          {
            TagBox[\(SetNumberOfRules[cn_Integer]\),
              HoldForm]},
          {
            TagBox[\(SetRule[i_Integer, rule_List, coeff_List]\),
              HoldForm]},
          {
            TagBox[\(SetSignalErrors[i_Integer, norm_Real, tilt_Real]\),
              HoldForm]},
          {
            TagBox[\(SetTargetMass[mass_Real]\),
              HoldForm]},
          {
            TagBox[\(SetTresholdCenter[i_Integer, a_Real, b_Real]\),
              HoldForm]},
          {
            TagBox[\(SetTresholdErrors[i_Integer, a_Real, b_Real]\),
              HoldForm]},
          {
            TagBox[\(SingleChi2P[the_Real, del_Real, x_List, t_Integer]\),
              HoldForm]},
          {
            TagBox[\(SingleChiAll[x_List, t_Integer]\),
              HoldForm]},
          {
            TagBox[\(SingleChiDelta[the_Real, x_List, t_Integer]\),
              HoldForm]},
          {
            TagBox[\(SingleChiDm[the_Real, x_List, t_Integer]\),
              HoldForm]},
          {
            TagBox[\(SingleChiNew[x_List, exp_Integer]\),
              HoldForm]},
          {
            TagBox[\(SingleChiTheta[the_Real, x_List, t_Integer]\),
              HoldForm]},
          {
            TagBox[\(SingleChiTheta23[the_Real, x_List, t_Integer]\),
              HoldForm]},
          {
            TagBox[\(Version[]\),
              HoldForm]},
          {
            TagBox[\(XCC[enl_Real, l_Integer, anti_Integer]\),
              HoldForm]},
          {
            TagBox[\(XNC[enl_Real, l_Integer, anti_Integer]\),
              HoldForm]},
          {
            TagBox[\(XQE[enl_Real, l_Integer, anti_Integer]\),
              HoldForm]}
          },
        RowSpacings->1,
        ColumnSpacings->3,
        RowAlignments->Baseline,
        ColumnAlignments->{Left}],
      TableForm[ {
        HoldForm[ 
          CheckBaseline[ ]], 
        HoldForm[ 
          CheckBeamEnergy[ ]], 
        HoldForm[ 
          CheckBeamPolarisation[ ]], 
        HoldForm[ 
          CheckBGCenter[ 
            Pattern[ l, 
              Blank[ Integer]]]], 
        HoldForm[ 
          CheckBGErrors[ 
            Pattern[ l, 
              Blank[ Integer]]]], 
        HoldForm[ 
          CheckChannel[ 
            Pattern[ i, 
              Blank[ Integer]]]], 
        HoldForm[ 
          CheckEnergyTreshold[ ]], 
        HoldForm[ 
          CheckErrorDim[ 
            Pattern[ rule, 
              Blank[ Integer]]]], 
        HoldForm[ 
          CheckErrorFunction[ ]], 
        HoldForm[ 
          CheckExperiment[ ]], 
        HoldForm[ 
          CheckMuons[ ]], 
        HoldForm[ 
          CheckNumberOfBins[ ]], 
        HoldForm[ 
          CheckNumberOfChannels[ ]], 
        HoldForm[ 
          CheckNumberOfRules[ ]], 
        HoldForm[ 
          CheckRuleCoeff[ 
            Pattern[ l, 
              Blank[ Integer]], 
            Pattern[ bg, 
              Blank[ Integer]]]], 
        HoldForm[ 
          CheckRules[ 
            Pattern[ l, 
              Blank[ Integer]], 
            Pattern[ bg, 
              Blank[ Integer]]]], 
        HoldForm[ 
          CheckSignalErrors[ 
            Pattern[ l, 
              Blank[ Integer]]]], 
        HoldForm[ 
          CheckSquaredMasses[ ]], 
        HoldForm[ 
          CheckTargetMass[ ]], 
        HoldForm[ 
          CheckTresholdCenter[ 
            Pattern[ i, 
              Blank[ Integer]]]], 
        HoldForm[ 
          CheckTresholdErrors[ 
            Pattern[ i, 
              Blank[ Integer]]]], 
        HoldForm[ 
          CheckVacuumParamters[ ]], 
        HoldForm[ 
          ChiBG[ 
            Pattern[ x, 
              Blank[ List]]]], 
        HoldForm[ 
          CInitSmearing[ 
            Pattern[ ls, 
              Blank[ Integer]]]], 
        HoldForm[ 
          CSetSquaredMasses[ 
            Pattern[ mq1, 
              Blank[ Real]], 
            Pattern[ mq2, 
              Blank[ Real]], 
            Pattern[ mq3, 
              Blank[ Real]]]], 
        HoldForm[ 
          CSetVacuumParameters[ 
            Pattern[ pt12, 
              Blank[ Real]], 
            Pattern[ pt13, 
              Blank[ Real]], 
            Pattern[ pt23, 
              Blank[ Real]], 
            Pattern[ pdelta1, 
              Blank[ Real]]]], 
        HoldForm[ 
          FastFluxE[ 
            Pattern[ en, 
              Blank[ Real]], 
            Pattern[ baseline, 
              Blank[ Real]]]], 
        HoldForm[ 
          FastFluxMu[ 
            Pattern[ en, 
              Blank[ Real]], 
            Pattern[ baseline, 
              Blank[ Real]]]], 
        HoldForm[ 
          FluxE[ 
            Pattern[ en, 
              Blank[ Real]], 
            Pattern[ baseline, 
              Blank[ Real]], 
            Pattern[ cost, 
              Blank[ Real]]]], 
        HoldForm[ 
          FluxMu[ 
            Pattern[ en, 
              Blank[ Real]], 
            Pattern[ baseline, 
              Blank[ Real]], 
            Pattern[ cost, 
              Blank[ Real]]]], 
        HoldForm[ 
          FluxNew[ 
            Pattern[ en, 
              Blank[ Real]], 
            Pattern[ baseline, 
              Blank[ Real]], 
            Pattern[ type, 
              Blank[ Integer]], 
            Pattern[ polarity, 
              Blank[ Integer]], 
            Pattern[ l, 
              Blank[ Integer]], 
            Pattern[ anti, 
              Blank[ Integer]]]], 
        HoldForm[ 
          InitMemory[ ]], 
        HoldForm[ 
          MChangeProfile[ 
            Pattern[ inl, 
              Blank[ List]], 
            Pattern[ ind, 
              Blank[ List]], 
            Pattern[ typ, 
              Blank[ Integer]]]], 
        HoldForm[ 
          MDChi2P[ 
            Pattern[ the, 
              Blank[ Real]], 
            Pattern[ del, 
              Blank[ Real]], 
            Pattern[ x, 
              Blank[ List]]]], 
        HoldForm[ 
          MDChiDelta[ 
            Pattern[ the, 
              Blank[ Real]], 
            Pattern[ x, 
              Blank[ List]]]], 
        HoldForm[ 
          MDChiDM[ 
            Pattern[ the, 
              Blank[ Real]], 
            Pattern[ x, 
              Blank[ List]]]], 
        HoldForm[ 
          MDChiNew[ 
            Pattern[ x, 
              Blank[ List]]]], 
        HoldForm[ 
          MDChiTheta[ 
            Pattern[ the, 
              Blank[ Real]], 
            Pattern[ x, 
              Blank[ List]]]], 
        HoldForm[ 
          MDChiTheta23[ 
            Pattern[ the, 
              Blank[ Real]], 
            Pattern[ x, 
              Blank[ List]]]], 
        HoldForm[ 
          MLConstantProfile[ 
            Pattern[ pl, 
              Blank[ Real]], 
            Pattern[ rho, 
              Blank[ Real]]]], 
        HoldForm[ 
          MLGetProfileData[ ]], 
        HoldForm[ 
          MLoadExperiment[ 
            Pattern[ in, 
              Blank[ Integer]]]], 
        HoldForm[ 
          MLProfileProbability[ 
            Pattern[ pl, 
              Blank[ Integer]], 
            Pattern[ pm, 
              Blank[ Integer]], 
            Pattern[ panti, 
              Blank[ Integer]], 
            Pattern[ pen, 
              Blank[ Real]]]], 
        HoldForm[ 
          MLStaceyProfile[ 
            Pattern[ bl, 
              Blank[ Real]], 
            Pattern[ steps, 
              Blank[ Integer]]]], 
        HoldForm[ 
          MLVacuumProbability[ 
            Pattern[ pl, 
              Blank[ Integer]], 
            Pattern[ pm, 
              Blank[ Integer]], 
            Pattern[ panti, 
              Blank[ Integer]], 
            Pattern[ pen, 
              Blank[ Real]], 
            Pattern[ plength, 
              Blank[ Real]]]], 
        HoldForm[ 
          MSetBaseline[ 
            Pattern[ in, 
              Blank[ Real]], 
            Pattern[ i, 
              Blank[ Integer]]]], 
        HoldForm[ 
          MSetDensityPrior[ 
            Pattern[ start, 
              Blank[ Real]], 
            Pattern[ error, 
              Blank[ Real]], 
            Pattern[ typ, 
              Blank[ Integer]]]], 
        HoldForm[ 
          MSetErrorDim[ 
            Pattern[ in, 
              Blank[ Integer]], 
            Pattern[ i, 
              Blank[ Integer]], 
            Pattern[ rule, 
              Blank[ Integer]]]], 
        HoldForm[ 
          MSetExperiment[ 
            Pattern[ typ, 
              Blank[ Integer]]]], 
        HoldForm[ 
          MSetNewRates[ ]], 
        HoldForm[ 
          MSetNumberOfExperiments[ 
            Pattern[ in, 
              Blank[ Integer]]]], 
        HoldForm[ 
          MSetRates[ ]], 
        HoldForm[ 
          MSetTargetMass[ 
            Pattern[ in, 
              Blank[ Real]], 
            Pattern[ i, 
              Blank[ Integer]]]], 
        HoldForm[ 
          oldSetInputErrors[ 
            Pattern[ a, 
              Blank[ Real]], 
            Pattern[ b, 
              Blank[ Real]], 
            Pattern[ c, 
              Blank[ Real]], 
            Pattern[ d, 
              Blank[ Real]], 
            Pattern[ e, 
              Blank[ Real]], 
            Pattern[ f, 
              Blank[ Real]]]], 
        HoldForm[ 
          oldSetNewRates[ ]], 
        HoldForm[ 
          oldSetRates[ ]], 
        HoldForm[ 
          oldSetStartingValues[ 
            Pattern[ a, 
              Blank[ Real]], 
            Pattern[ b, 
              Blank[ Real]], 
            Pattern[ c, 
              Blank[ Real]], 
            Pattern[ d, 
              Blank[ Real]], 
            Pattern[ e, 
              Blank[ Real]], 
            Pattern[ f, 
              Blank[ Real]]]], 
        HoldForm[ 
          RemovePointers[ ]], 
        HoldForm[ 
          ReturnBackgroundRates[ 
            Pattern[ rule, 
              Blank[ Integer]], 
            Pattern[ part, 
              Blank[ Integer]]]], 
        HoldForm[ 
          ReturnEnergyTable[ ]], 
        HoldForm[ 
          ReturnSignalRates[ 
            Pattern[ rule, 
              Blank[ Integer]], 
            Pattern[ part, 
              Blank[ Integer]]]], 
        HoldForm[ 
          SetBaseline[ 
            Pattern[ l, 
              Blank[ Real]]]], 
        HoldForm[ 
          SetBeamEnergy[ 
            Pattern[ en, 
              Blank[ Real]]]], 
        HoldForm[ 
          SetBeamPolarisation[ 
            Pattern[ pol, 
              Blank[ Real]]]], 
        HoldForm[ 
          SetBGCenter[ 
            Pattern[ i, 
              Blank[ Integer]], 
            Pattern[ norm, 
              Blank[ Real]], 
            Pattern[ tilt, 
              Blank[ Real]]]], 
        HoldForm[ 
          SetBGErrors[ 
            Pattern[ i, 
              Blank[ Integer]], 
            Pattern[ norm, 
              Blank[ Real]], 
            Pattern[ tilt, 
              Blank[ Real]]]], 
        HoldForm[ 
          SetBGRule[ 
            Pattern[ i, 
              Blank[ Integer]], 
            Pattern[ rule, 
              Blank[ List]], 
            Pattern[ coeff, 
              Blank[ List]]]], 
        HoldForm[ 
          SetChannel[ 
            Pattern[ i, 
              Blank[ Integer]], 
            Pattern[ polarity, 
              Blank[ Integer]], 
            Pattern[ anti, 
              Blank[ Integer]], 
            Pattern[ l, 
              Blank[ Integer]], 
            Pattern[ m, 
              Blank[ Integer]], 
            Pattern[ cc, 
              Blank[ Integer]]]], 
        HoldForm[ 
          SetChannelOld[ 
            Pattern[ ch, 
              Blank[ Integer]]]], 
        HoldForm[ 
          SetEnergyTreshold[ 
            Pattern[ etresh, 
              Blank[ Real]]]], 
        HoldForm[ 
          SetErrorDim[ 
            Pattern[ typ, 
              Blank[ Integer]], 
            Pattern[ rule, 
              Blank[ Integer]]]], 
        HoldForm[ 
          SetErrorFunction[ 
            Pattern[ typ, 
              Blank[ Integer]]]], 
        HoldForm[ 
          SetExperiment[ 
            Pattern[ type, 
              Blank[ Integer]]]], 
        HoldForm[ 
          SetMuons[ 
            Pattern[ n, 
              Blank[ Real]]]], 
        HoldForm[ 
          SetNumberOfBins[ 
            Pattern[ nr, 
              Blank[ Integer]]]], 
        HoldForm[ 
          SetNumberOfChannels[ 
            Pattern[ cc, 
              Blank[ Integer]]]], 
        HoldForm[ 
          SetNumberOfRules[ 
            Pattern[ cn, 
              Blank[ Integer]]]], 
        HoldForm[ 
          SetRule[ 
            Pattern[ i, 
              Blank[ Integer]], 
            Pattern[ rule, 
              Blank[ List]], 
            Pattern[ coeff, 
              Blank[ List]]]], 
        HoldForm[ 
          SetSignalErrors[ 
            Pattern[ i, 
              Blank[ Integer]], 
            Pattern[ norm, 
              Blank[ Real]], 
            Pattern[ tilt, 
              Blank[ Real]]]], 
        HoldForm[ 
          SetTargetMass[ 
            Pattern[ mass, 
              Blank[ Real]]]], 
        HoldForm[ 
          SetTresholdCenter[ 
            Pattern[ i, 
              Blank[ Integer]], 
            Pattern[ a, 
              Blank[ Real]], 
            Pattern[ b, 
              Blank[ Real]]]], 
        HoldForm[ 
          SetTresholdErrors[ 
            Pattern[ i, 
              Blank[ Integer]], 
            Pattern[ a, 
              Blank[ Real]], 
            Pattern[ b, 
              Blank[ Real]]]], 
        HoldForm[ 
          SingleChi2P[ 
            Pattern[ the, 
              Blank[ Real]], 
            Pattern[ del, 
              Blank[ Real]], 
            Pattern[ x, 
              Blank[ List]], 
            Pattern[ t, 
              Blank[ Integer]]]], 
        HoldForm[ 
          SingleChiAll[ 
            Pattern[ x, 
              Blank[ List]], 
            Pattern[ t, 
              Blank[ Integer]]]], 
        HoldForm[ 
          SingleChiDelta[ 
            Pattern[ the, 
              Blank[ Real]], 
            Pattern[ x, 
              Blank[ List]], 
            Pattern[ t, 
              Blank[ Integer]]]], 
        HoldForm[ 
          SingleChiDm[ 
            Pattern[ the, 
              Blank[ Real]], 
            Pattern[ x, 
              Blank[ List]], 
            Pattern[ t, 
              Blank[ Integer]]]], 
        HoldForm[ 
          SingleChiNew[ 
            Pattern[ x, 
              Blank[ List]], 
            Pattern[ exp, 
              Blank[ Integer]]]], 
        HoldForm[ 
          SingleChiTheta[ 
            Pattern[ the, 
              Blank[ Real]], 
            Pattern[ x, 
              Blank[ List]], 
            Pattern[ t, 
              Blank[ Integer]]]], 
        HoldForm[ 
          SingleChiTheta23[ 
            Pattern[ the, 
              Blank[ Real]], 
            Pattern[ x, 
              Blank[ List]], 
            Pattern[ t, 
              Blank[ Integer]]]], 
        HoldForm[ 
          Version[ ]], 
        HoldForm[ 
          XCC[ 
            Pattern[ enl, 
              Blank[ Real]], 
            Pattern[ l, 
              Blank[ Integer]], 
            Pattern[ anti, 
              Blank[ Integer]]]], 
        HoldForm[ 
          XNC[ 
            Pattern[ enl, 
              Blank[ Real]], 
            Pattern[ l, 
              Blank[ Integer]], 
            Pattern[ anti, 
              Blank[ Integer]]]], 
        HoldForm[ 
          XQE[ 
            Pattern[ enl, 
              Blank[ Real]], 
            Pattern[ l, 
              Blank[ Integer]], 
            Pattern[ anti, 
              Blank[ Integer]]]]}]]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
FrontEndVersion->"4.1 for X",
ScreenRectangle->{{0, 1152}, {0, 870}},
ScreenStyleEnvironment->"Working",
WindowToolbars->{},
WindowSize->{1142, 799},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"PaperSize"->{612, 792},
"PaperOrientation"->"Portrait",
"PostScriptOutputFile":>FrontEnd`FileName[{$RootDirectory, "a", "srv-1.cip", \
"h", "t30i", "lin", "wwinter", "Software"}, "020911 Documentation.nb.ps", \
CharacterEncoding -> "ISO8859-1"],
"Magnification"->1},
Magnification->1.5,
StyleDefinitions -> "Default.nb"
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1727, 52, 63, 0, 260, "Title"],
Cell[1793, 54, 94, 3, 80, "Subsubtitle"],
Cell[1890, 59, 265, 5, 71, "Text"],

Cell[CellGroupData[{
Cell[2180, 68, 49, 0, 99, "Subtitle"],

Cell[CellGroupData[{
Cell[2254, 72, 42, 0, 87, "Section"],
Cell[2299, 74, 287, 5, 71, "Text"],
Cell[2589, 81, 150, 2, 62, "Input"],
Cell[2742, 85, 217, 5, 46, "Text"],

Cell[CellGroupData[{
Cell[2984, 94, 52, 1, 39, "Input"],
Cell[3039, 97, 50, 1, 33, "Print"],
Cell[3092, 100, 64, 1, 33, "Print"],
Cell[3159, 103, 66, 1, 33, "Print"],
Cell[3228, 106, 60, 1, 33, "Print"],
Cell[3291, 109, 40, 1, 33, "Print"]
}, Open  ]],
Cell[3346, 113, 159, 3, 46, "Text"],

Cell[CellGroupData[{
Cell[3530, 120, 55, 1, 39, "Input"],
Cell[3588, 123, 9196, 194, 412, "Output"]
}, Open  ]],
Cell[12799, 320, 720, 22, 195, "Text"],
Cell[13522, 344, 1051, 17, 196, "Text"],

Cell[CellGroupData[{
Cell[14598, 365, 47, 1, 39, "Input"],
Cell[14648, 368, 966, 24, 144, "Output"]
}, Open  ]],
Cell[15629, 395, 514, 15, 120, "Text"],
Cell[16146, 412, 65, 0, 46, "Text"],
Cell[16214, 414, 45, 1, 39, "Input"],
Cell[16262, 417, 664, 15, 146, "Text"],

Cell[CellGroupData[{
Cell[16951, 436, 67, 1, 39, "Input"],
Cell[17021, 439, 268, 5, 62, "Output"]
}, Open  ]],
Cell[17304, 447, 261, 5, 71, "Text"],
Cell[17568, 454, 1276, 54, 220, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[18881, 513, 53, 0, 87, "Section"],
Cell[18937, 515, 2496, 67, 171, "Text"],

Cell[CellGroupData[{
Cell[21458, 586, 103, 2, 39, "Input"],
Cell[21564, 590, 58, 1, 39, "Output"]
}, Open  ]],
Cell[21637, 594, 76, 0, 46, "Text"],
Cell[21716, 596, 111, 2, 39, "Input"],
Cell[21830, 600, 1065, 32, 96, "Text"],
Cell[22898, 634, 76, 1, 39, "Input"],
Cell[22977, 637, 498, 17, 71, "Text"],
Cell[23478, 656, 52, 1, 39, "Input"],
Cell[23533, 659, 420, 8, 121, "Text"],
Cell[23956, 669, 43, 1, 39, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[24036, 675, 176, 7, 87, "Section"],
Cell[24215, 684, 478, 14, 71, "Text"],

Cell[CellGroupData[{
Cell[24718, 702, 146, 3, 39, "Input"],
Cell[24867, 707, 56, 1, 43, "Output"]
}, Open  ]],
Cell[24938, 711, 1407, 45, 146, "Text"],

Cell[CellGroupData[{
Cell[26370, 760, 116, 2, 39, "Input"],
Cell[26489, 764, 83, 1, 39, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[26609, 770, 424, 7, 108, "Input"],
Cell[27036, 779, 68012, 1363, 444, 9845, 640, "GraphicsData", "PostScript", \
"Graphics"],
Cell[95051, 2144, 137, 3, 39, "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[95237, 2153, 274, 10, 126, "Section"],
Cell[95514, 2165, 1558, 36, 221, "Text"],
Cell[97075, 2203, 2402, 65, 321, "Text"],
Cell[99480, 2270, 1367, 36, 171, "Text"],
Cell[100850, 2308, 127, 2, 39, "Input"],
Cell[100980, 2312, 1554, 47, 171, "Text"],
Cell[102537, 2361, 147, 2, 62, "Input"],
Cell[102687, 2365, 2066, 56, 221, "Text"],

Cell[CellGroupData[{
Cell[104778, 2425, 144, 3, 39, "Input"],
Cell[104925, 2430, 186, 3, 39, "Output"]
}, Open  ]],
Cell[105126, 2436, 1382, 39, 146, "Text"],
Cell[106511, 2477, 128, 3, 46, "Text"],
Cell[106642, 2482, 318, 6, 108, "Input"],
Cell[106963, 2490, 929, 33, 71, "Text"],

Cell[CellGroupData[{
Cell[107917, 2527, 132, 3, 39, "Input"],
Cell[108052, 2532, 192, 3, 39, "Output"]
}, Open  ]],
Cell[108259, 2538, 1380, 45, 146, "Text"],
Cell[109642, 2585, 357, 7, 95, "Text"],

Cell[CellGroupData[{
Cell[110024, 2596, 32, 0, 60, "Subsubsection"],
Cell[110059, 2598, 661, 14, 96, "Text"],
Cell[110723, 2614, 867, 14, 246, "Input"],

Cell[CellGroupData[{
Cell[111615, 2632, 129, 3, 39, "Input"],
Cell[111747, 2637, 278, 4, 75, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[112062, 2646, 71, 1, 39, "Input"],
Cell[112136, 2649, 38418, 824, 279, 7614, 439, "GraphicsData", "PostScript", \
"Graphics"],
Cell[150557, 3475, 130, 3, 39, "Output"]
}, Open  ]],
Cell[150702, 3481, 191, 5, 46, "Text"],

Cell[CellGroupData[{
Cell[150918, 3490, 148, 3, 39, "Input"],
Cell[151069, 3495, 55, 1, 39, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[151185, 3503, 114, 4, 87, "Section"],
Cell[151302, 3509, 1202, 31, 171, "Text"],
Cell[152507, 3542, 159, 5, 46, "Text"],
Cell[152669, 3549, 637, 11, 177, "Input"],
Cell[153309, 3562, 253, 6, 46, "Text"],
Cell[153565, 3570, 1461, 49, 96, "Text"],

Cell[CellGroupData[{
Cell[155051, 3623, 141, 2, 39, "Input"],
Cell[155195, 3627, 230, 4, 39, "Output"]
}, Open  ]],
Cell[155440, 3634, 1548, 54, 71, "Text"],
Cell[156991, 3690, 580, 20, 46, "Text"],

Cell[CellGroupData[{
Cell[157596, 3714, 813, 15, 223, "Input"],
Cell[158412, 3731, 220, 3, 39, "Output"]
}, Open  ]],
Cell[158647, 3737, 336, 7, 71, "Text"],
Cell[158986, 3746, 198, 6, 46, "Text"],
Cell[159187, 3754, 1003, 34, 71, "Text"],
Cell[160193, 3790, 1129, 18, 292, "Input"],

Cell[CellGroupData[{
Cell[161347, 3812, 32, 0, 60, "Subsubsection"],
Cell[161382, 3814, 687, 22, 71, "Text"],
Cell[162072, 3838, 70, 1, 39, "Input"],
Cell[162145, 3841, 528, 16, 71, "Text"],

Cell[CellGroupData[{
Cell[162698, 3861, 720, 12, 200, "Input"],
Cell[163421, 3875, 214, 3, 39, "Output"]
}, Open  ]],
Cell[163650, 3881, 662, 19, 96, "Text"],
Cell[164315, 3902, 1220, 21, 361, "Input"],
Cell[165538, 3925, 192, 8, 46, "Text"],

Cell[CellGroupData[{
Cell[165755, 3937, 57, 1, 39, "Input"],
Cell[165815, 3940, 52, 1, 39, "Output"]
}, Open  ]],
Cell[165882, 3944, 129, 5, 46, "Text"],

Cell[CellGroupData[{
Cell[166036, 3953, 57, 1, 39, "Input"],
Cell[166096, 3956, 52, 1, 39, "Output"]
}, Open  ]],
Cell[166163, 3960, 157, 3, 46, "Text"],

Cell[CellGroupData[{
Cell[166345, 3967, 135, 3, 39, "Input"],
Cell[166483, 3972, 493, 8, 97, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[167013, 3985, 135, 3, 39, "Input"],
Cell[167151, 3990, 482, 7, 85, "Output"]
}, Open  ]],
Cell[167648, 4000, 64, 1, 39, "Input"],

Cell[CellGroupData[{
Cell[167737, 4005, 182, 3, 62, "Input"],
Cell[167922, 4010, 39451, 830, 279, 7700, 434, "GraphicsData", "PostScript", \
"Graphics"],
Cell[207376, 4842, 130, 3, 39, "Output"]
}, Open  ]],
Cell[207521, 4848, 141, 3, 46, "Text"],

Cell[CellGroupData[{
Cell[207687, 4855, 146, 3, 39, "Input"],
Cell[207836, 4860, 57, 1, 39, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[207930, 4866, 147, 3, 39, "Input"],
Cell[208080, 4871, 55, 1, 39, "Output"]
}, Open  ]],
Cell[208150, 4875, 250, 5, 71, "Text"],
Cell[208403, 4882, 907, 20, 146, "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[209359, 4908, 164, 6, 87, "Section"],
Cell[209526, 4916, 413, 13, 71, "Text"],
Cell[209942, 4931, 337, 12, 95, "Text"],
Cell[210282, 4945, 683, 15, 121, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[211002, 4965, 44, 0, 87, "Section"],
Cell[211049, 4967, 362, 10, 71, "Text"],
Cell[211414, 4979, 273, 9, 70, "Text"],

Cell[CellGroupData[{
Cell[211712, 4992, 48, 0, 60, "Subsubsection"],
Cell[211763, 4994, 102, 3, 46, "Text"],
Cell[211868, 4999, 144, 3, 39, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[212049, 5007, 46, 0, 60, "Subsubsection"],
Cell[212098, 5009, 53, 1, 39, "Input"],
Cell[212154, 5012, 52, 0, 46, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[212243, 5017, 43, 0, 60, "Subsubsection"],
Cell[212289, 5019, 130, 3, 46, "Text"],
Cell[212422, 5024, 246, 5, 85, "Input"],
Cell[212671, 5031, 488, 11, 96, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[213196, 5047, 85, 1, 60, "Subsubsection"],
Cell[213284, 5050, 318, 9, 71, "Text"],
Cell[213605, 5061, 132, 2, 39, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[213798, 5070, 53, 0, 99, "Subtitle"],
Cell[213854, 5072, 270, 5, 71, "Text"],
Cell[214127, 5079, 296, 7, 95, "Text"],
Cell[214426, 5088, 410, 7, 96, "Text"],

Cell[CellGroupData[{
Cell[214861, 5099, 42, 0, 87, "Section"],
Cell[214906, 5101, 126, 3, 46, "Text"],
Cell[215035, 5106, 164, 2, 62, "Input"],
Cell[215202, 5110, 52, 0, 46, "Text"],

Cell[CellGroupData[{
Cell[215279, 5114, 50, 1, 39, "Input"],
Cell[215332, 5117, 55, 1, 33, "Print"],
Cell[215390, 5120, 64, 1, 33, "Print"],
Cell[215457, 5123, 66, 1, 33, "Print"],
Cell[215526, 5126, 60, 1, 33, "Print"],
Cell[215589, 5129, 40, 1, 33, "Print"]
}, Open  ]],
Cell[215644, 5133, 205, 6, 46, "Text"],

Cell[CellGroupData[{
Cell[215874, 5143, 114, 2, 39, "Input"],
Cell[215991, 5147, 66, 1, 39, "Output"]
}, Open  ]],
Cell[216072, 5151, 107, 3, 46, "Text"],
Cell[216182, 5156, 66, 0, 46, "Text"],

Cell[CellGroupData[{
Cell[216273, 5160, 42, 1, 39, "Input"],
Cell[216318, 5163, 126, 2, 154, "Output"]
}, Open  ]],
Cell[216459, 5168, 169, 4, 46, "Text"],
Cell[216631, 5174, 57, 1, 39, "Input"],
Cell[216691, 5177, 63, 0, 46, "Text"],

Cell[CellGroupData[{
Cell[216779, 5181, 40, 1, 39, "Input"],
Cell[216822, 5184, 84, 1, 39, "Output"]
}, Open  ]],
Cell[216921, 5188, 62, 0, 46, "Text"],

Cell[CellGroupData[{
Cell[217008, 5192, 39, 1, 39, "Input"],
Cell[217050, 5195, 60, 1, 39, "Output"]
}, Open  ]],
Cell[217125, 5199, 244, 5, 71, "Text"],

Cell[CellGroupData[{
Cell[217394, 5208, 40, 1, 39, "Input"],
Cell[217437, 5211, 1132, 18, 276, "Output"]
}, Open  ]],
Cell[218584, 5232, 372, 10, 71, "Text"],

Cell[CellGroupData[{
Cell[218981, 5246, 115, 2, 39, "Input"],
Cell[219099, 5250, 1130, 18, 276, "Output"]
}, Open  ]],
Cell[220244, 5271, 69, 0, 46, "Text"],
Cell[220316, 5273, 43, 1, 39, "Input"],
Cell[220362, 5276, 94, 3, 46, "Text"],
Cell[220459, 5281, 145, 3, 46, "Text"],

Cell[CellGroupData[{
Cell[220629, 5288, 104, 2, 39, "Input"],
Cell[220736, 5292, 10707, 220, 442, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[231480, 5517, 119, 2, 39, "Input"],
Cell[231602, 5521, 10707, 220, 442, "Output"]
}, Open  ]],
Cell[242324, 5744, 858, 34, 96, "Text"],
Cell[243185, 5780, 73, 0, 46, "Text"],

Cell[CellGroupData[{
Cell[243283, 5784, 50, 1, 39, "Input"],
Cell[243336, 5787, 9442, 201, 432, "Output"]
}, Open  ]],
Cell[252793, 5991, 249, 6, 71, "Text"],
Cell[253045, 5999, 182, 6, 70, "Text"],
Cell[253230, 6007, 1125, 36, 170, "Text"],
Cell[254358, 6045, 464, 16, 95, "Text"],
Cell[254825, 6063, 409, 11, 95, "Text"],
Cell[255237, 6076, 161, 6, 70, "Text"],
Cell[255401, 6084, 355, 13, 70, "Text"],
Cell[255759, 6099, 228, 7, 70, "Text"],
Cell[255990, 6108, 1172, 28, 195, "Text"],
Cell[257165, 6138, 1530, 36, 245, "Text"],
Cell[258698, 6176, 772, 23, 145, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[259507, 6204, 53, 0, 87, "Section"],
Cell[259563, 6206, 124, 3, 46, "Text"],
Cell[259690, 6211, 111, 2, 39, "Input"],
Cell[259804, 6215, 76, 1, 39, "Input"],
Cell[259883, 6218, 43, 1, 39, "Input"],
Cell[259929, 6221, 379, 14, 71, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[260345, 6240, 177, 7, 87, "Section"],
Cell[260525, 6249, 1632, 56, 121, "Text"],

Cell[CellGroupData[{
Cell[262182, 6309, 144, 3, 39, "Input"],
Cell[262329, 6314, 52, 1, 39, "Output"]
}, Open  ]],
Cell[262396, 6318, 286, 7, 95, "Text"],
Cell[262685, 6327, 1108, 40, 71, "Text"],

Cell[CellGroupData[{
Cell[263818, 6371, 161, 3, 39, "Input"],
Cell[263982, 6376, 52, 1, 39, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[264071, 6382, 161, 3, 39, "Input"],
Cell[264235, 6387, 52, 1, 39, "Output"]
}, Open  ]],
Cell[264302, 6391, 322, 10, 71, "Text"],

Cell[CellGroupData[{
Cell[264649, 6405, 40, 1, 39, "Input"],
Cell[264692, 6408, 52, 1, 39, "Output"]
}, Open  ]],
Cell[264759, 6412, 344, 9, 71, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[265140, 6426, 159, 5, 87, "Section"],
Cell[265302, 6433, 334, 9, 71, "Text"],
Cell[265639, 6444, 122, 2, 39, "Input"],
Cell[265764, 6448, 145, 2, 62, "Input"],
Cell[265912, 6452, 154, 3, 46, "Text"],
Cell[266069, 6457, 217, 5, 71, "Text"],

Cell[CellGroupData[{
Cell[266311, 6466, 142, 3, 39, "Input"],
Cell[266456, 6471, 210, 3, 39, "Output"]
}, Open  ]],
Cell[266681, 6477, 325, 11, 71, "Text"],

Cell[CellGroupData[{
Cell[267031, 6492, 173, 3, 39, "Input"],
Cell[267207, 6497, 187, 3, 39, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[267431, 6505, 175, 3, 39, "Input"],
Cell[267609, 6510, 188, 3, 39, "Output"]
}, Open  ]],
Cell[267812, 6516, 167, 4, 46, "Text"],

Cell[CellGroupData[{
Cell[268004, 6524, 58, 1, 39, "Input"],
Cell[268065, 6527, 52, 1, 39, "Output"]
}, Open  ]],
Cell[268132, 6531, 667, 17, 96, "Text"],
Cell[268802, 6550, 559, 19, 145, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[269398, 6574, 114, 4, 87, "Section"],
Cell[269515, 6580, 216, 7, 70, "Text"],
Cell[269734, 6589, 291, 7, 71, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[270062, 6601, 164, 6, 87, "Section"],
Cell[270229, 6609, 127, 3, 46, "Text"],
Cell[270359, 6614, 276, 7, 95, "Text"],
Cell[270638, 6623, 28, 0, 46, "Text"],

Cell[CellGroupData[{
Cell[270691, 6627, 48, 1, 39, "Input"],
Cell[270742, 6630, 418, 13, 110, "Output"]
}, Open  ]],
Cell[271175, 6646, 70, 0, 46, "Text"],
Cell[271248, 6648, 386, 13, 70, "Text"],
Cell[271637, 6663, 338, 12, 70, "Text"],
Cell[271978, 6677, 351, 12, 70, "Text"],
Cell[272332, 6691, 570, 22, 95, "Text"],
Cell[272905, 6715, 36, 0, 46, "Text"],

Cell[CellGroupData[{
Cell[272966, 6719, 108, 2, 39, "Input"],
Cell[273077, 6723, 976, 14, 131, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[274090, 6742, 107, 2, 39, "Input"],
Cell[274200, 6746, 96152, 2035, 457, 24950, 1152, "GraphicsData", \
"PostScript", "Graphics"],
Cell[370355, 8783, 130, 3, 39, "Output"]
}, Open  ]],
Cell[370500, 8789, 684, 22, 96, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[371221, 8816, 44, 0, 87, "Section"],
Cell[371268, 8818, 216, 5, 46, "Text"],
Cell[371487, 8825, 199, 6, 70, "Text"],
Cell[371689, 8833, 71, 0, 46, "Text"],
Cell[371763, 8835, 210, 6, 70, "Text"],
Cell[371976, 8843, 237, 6, 70, "Text"],
Cell[372216, 8851, 295, 8, 95, "Text"],
Cell[372514, 8861, 115, 3, 46, "Text"],
Cell[372632, 8866, 50, 1, 39, "Input"],

Cell[CellGroupData[{
Cell[372707, 8871, 56, 1, 39, "Input"],
Cell[372766, 8874, 52, 1, 39, "Output"]
}, Open  ]],
Cell[372833, 8878, 81, 1, 39, "Input"],
Cell[372917, 8881, 249, 8, 70, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[373203, 8894, 39, 0, 87, "Section"],

Cell[CellGroupData[{
Cell[373267, 8898, 74, 1, 39, "Input"],
Cell[373344, 8901, 23252, 812, 2246, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

