(************** Content-type: application/mathematica **************

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[    156469,       3637]*)
(*NotebookOutlinePosition[    157501,       3669]*)
(*  CellTagsIndexPosition[    157457,       3665]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell["Documentation Mathematica-Interface GLOBES 1.X", "Title"],

Cell["\<\
(C) Martin Freund, Patrick Huber, documented by Walter Winter\
\>", \
"Subsubtitle"],

Cell["\<\
This documentation is intended to be an application summary of the \
key functions of GLOBES. In the first part, dealing with a single experiment \
is described. The second part focused on simultaneous analyzes of more than \
one experiment.\
\>", "Text"],

Cell[CellGroupData[{

Cell["Analyzing a single experiment", "Subtitle"],

Cell[CellGroupData[{

Cell["Software initialization", "Section"],

Cell["\<\
In order to use the GLOBES software, a working pair (one compatible \
version) of the \"vlbl_ml\" and \"GlobesML.m\" files needs to be found in the \
working directory. This directory has to be told Mathematica:\
\>", "Text"],

Cell[BoxData[
    \(SetDirectory["\</home/t30/lin/wwinter/Software/Beams\>"]; 
    AppendTo[$Path, "\</home/t30/lin/wwinter/Software\>"];\)], "Input"],

Cell[TextData[{
  "Then, the Mathematica package initializing the software/the ",
  StyleBox["MathLink",
    FontSlant->"Italic"],
  " has to be started, for instance, here the \[Beta]-version \"020424\":"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(<< 020424GlobesML.m\)], "Input"],

Cell[BoxData[
    \("GLoBES 1.0.beta"\)], "Print"],

Cell[BoxData[
    \("(c) M. Freund & P. Huber 2002"\)], "Print"],

Cell[BoxData[
    \("now starting user interface ..."\)], "Print"],

Cell[BoxData[
    \("installing C-programe ..."\)], "Print"],

Cell[BoxData[
    \("ready"\)], "Print"]
}, Open  ]],

Cell["\<\
The following procedure initializes an experiment, where a standard \
parameter set is used in the beginning and can be altered later: \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(InitExperiment[NuFact]\)], "Input"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {GridBox[{
                {"\<\"NuFact\"\>"},
                {
                  InterpretationBox[GridBox[{
                        {"\<\"Baseline 3000. km\"\>"},
                        {"\<\"Density 3.5 g/\\!\\(cm\\^\\(-3\\)\\)\"\>"}
                        },
                      RowSpacings->1,
                      ColumnSpacings->3,
                      RowAlignments->Baseline,
                      ColumnAlignments->{Left}],
                    
                    TableForm[ {"Baseline 3000. km", 
                      "Density 3.5 g/\!\(cm\^\(-3\)\)"}]]}
                },
              RowSpacings->0.25,
              ColumnSpacings->1,
              RowAlignments->Baseline,
              ColumnAlignments->{Left}], GridBox[{
                {
                  InterpretationBox[GridBox[{
                        {"\<\"Target mass 10. kt\"\>"},
                        {"\<\"Useful Muons 5.e20\"\>"},
                        {"\<\"Nkt 5.e21\"\>"}
                        },
                      RowSpacings->1,
                      ColumnSpacings->3,
                      RowAlignments->Baseline,
                      ColumnAlignments->{Left}],
                    
                    TableForm[ {"Target mass 10. kt", "Useful Muons 5.e20", 
                      "Nkt 5.e21"}]]},
                {
                  InterpretationBox[GridBox[{
                        {"\<\"Energy treshold 4. GeV\"\>"},
                        {"\<\"Beam energy 50. GeV\"\>"},
                        {"\<\"Bins 20\"\>"},
                        {"\<\"Binwidth 2.3 GeV\"\>"},
                        {"\<\"Energy resolution 15.% e  15.% \[Mu]  15.% \
\[Tau]\"\>"}
                        },
                      RowSpacings->1,
                      ColumnSpacings->3,
                      RowAlignments->Baseline,
                      ColumnAlignments->{Left}],
                    
                    TableForm[ {"Energy treshold 4. GeV", 
                      "Beam energy 50. GeV", "Bins 20", "Binwidth 2.3 GeV", 
                      "Energy resolution 15.% e  15.% \[Mu]  15.% \[Tau]"}]]}
                },
              RowSpacings->0.25,
              ColumnSpacings->1,
              RowAlignments->Baseline,
              ColumnAlignments->{Left}]},
          {
            InterpretationBox[GridBox[{
                  {"0", 
                    TagBox[GridBox[{
                          {"\<\"Signal\"\>", "\<\"1\[PlusMinus]0.001\"\>", \
"\<\"0\[PlusMinus]0.0001\"\>", "\<\"0.45\[CircleTimes]-\[Nu]e\[Mu]CC\"\>"},
                          {"\<\"Background\"\>", \
"\<\"0.00001\[PlusMinus]2.e-6\"\>", "\<\"0.\[PlusMinus]0.0001\"\>", "\<\"1.\
\[CircleTimes]-\\!\\(\\(\[Nu]\\&-\\)\\)\[Mu]\[Mu]CC\"\>"}
                          },
                        RowSpacings->1,
                        ColumnSpacings->3,
                        RowAlignments->Baseline,
                        ColumnAlignments->{Left}],
                      Function[ BoxForm`e$, 
                        TableForm[ 
                        BoxForm`e$, TableHeadings -> {{"Signal", 
                          "Background"}}]]]},
                  {"1", 
                    TagBox[GridBox[{
                          {"\<\"Signal\"\>", "\<\"1\[PlusMinus]0.001\"\>", \
"\<\"0\[PlusMinus]0.0001\"\>", \
"\<\"0.35\[CircleTimes]+\\!\\(\\(\[Nu]\\&-\\)\\)e\[Mu]CC\"\>"},
                          {"\<\"Background\"\>", \
"\<\"0.00001\[PlusMinus]2.e-6\"\>", "\<\"0.\[PlusMinus]0.0001\"\>", "\<\"1.\
\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC\"\>"}
                          },
                        RowSpacings->1,
                        ColumnSpacings->3,
                        RowAlignments->Baseline,
                        ColumnAlignments->{Left}],
                      Function[ BoxForm`e$, 
                        TableForm[ 
                        BoxForm`e$, TableHeadings -> {{"Signal", 
                          "Background"}}]]]},
                  {"2", 
                    TagBox[GridBox[{
                          {"\<\"Signal\"\>", "\<\"1\[PlusMinus]0.001\"\>", \
"\<\"0\[PlusMinus]0.0001\"\>", \
"\<\"0.45\[CircleTimes]-\\!\\(\\(\[Nu]\\&-\\)\\)\[Mu]\[Mu]CC\"\>"},
                          {"\<\"Background\"\>", \
"\<\"1.\[PlusMinus]0.001\"\>", "\<\"0.\[PlusMinus]0.0001\"\>", "\<\"0.00001\
\[CircleTimes]-\[Nu]e\[Mu]CC\"\>"}
                          },
                        RowSpacings->1,
                        ColumnSpacings->3,
                        RowAlignments->Baseline,
                        ColumnAlignments->{Left}],
                      Function[ BoxForm`e$, 
                        TableForm[ 
                        BoxForm`e$, TableHeadings -> {{"Signal", 
                          "Background"}}]]]},
                  {"3", 
                    TagBox[GridBox[{
                          {"\<\"Signal\"\>", "\<\"1\[PlusMinus]0.001\"\>", \
"\<\"0\[PlusMinus]0.0001\"\>", \
"\<\"0.35\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC\"\>"},
                          {"\<\"Background\"\>", \
"\<\"1.\[PlusMinus]0.001\"\>", "\<\"0.\[PlusMinus]0.0001\"\>", "\<\"0.00001\
\[CircleTimes]+\\!\\(\\(\[Nu]\\&-\\)\\)e\[Mu]CC\"\>"}
                          },
                        RowSpacings->1,
                        ColumnSpacings->3,
                        RowAlignments->Baseline,
                        ColumnAlignments->{Left}],
                      Function[ BoxForm`e$, 
                        TableForm[ 
                        BoxForm`e$, TableHeadings -> {{"Signal", 
                          "Background"}}]]]}
                  },
                RowSpacings->1,
                ColumnSpacings->3,
                RowAlignments->Baseline,
                ColumnAlignments->{Left}],
              TableForm[ {
                
                TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
                  "0.45\[CircleTimes]-\[Nu]e\[Mu]CC"}, {
                  "0.00001\[PlusMinus]2.e-6", "0.\[PlusMinus]0.0001", 
                  "1.\[CircleTimes]-\!\(\(\[Nu]\&-\)\)\[Mu]\[Mu]CC"}}, 
                  TableHeadings -> {{"Signal", "Background"}}], 
                
                TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
                  "0.35\[CircleTimes]+\!\(\(\[Nu]\&-\)\)e\[Mu]CC"}, {
                  "0.00001\[PlusMinus]2.e-6", "0.\[PlusMinus]0.0001", 
                  "1.\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC"}}, TableHeadings -> {{
                  "Signal", "Background"}}], 
                
                TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
                  "0.45\[CircleTimes]-\!\(\(\[Nu]\&-\)\)\[Mu]\[Mu]CC"}, {
                  "1.\[PlusMinus]0.001", "0.\[PlusMinus]0.0001", 
                  "0.00001\[CircleTimes]-\[Nu]e\[Mu]CC"}}, TableHeadings -> {{
                  "Signal", "Background"}}], 
                
                TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
                  "0.35\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC"}, {
                  "1.\[PlusMinus]0.001", "0.\[PlusMinus]0.0001", 
                  "0.00001\[CircleTimes]+\!\(\(\[Nu]\&-\)\)e\[Mu]CC"}}, 
                  TableHeadings -> {{"Signal", "Background"}}]}, 
                TableHeadings -> {{0, 1, 2, 3}}]], "\<\"\"\>"}
          },
        RowSpacings->1,
        ColumnSpacings->3,
        RowAlignments->Baseline,
        ColumnAlignments->{Left}],
      TableForm[ {{{"NuFact", 
        TableForm[ {"Baseline 3000. km", 
          "Density 3.5 g/\!\(cm\^\(-3\)\)"}]}, {
        TableForm[ {"Target mass 10. kt", "Useful Muons 5.e20", "Nkt 5.e21"}],
         
        TableForm[ {"Energy treshold 4. GeV", "Beam energy 50. GeV", 
          "Bins 20", "Binwidth 2.3 GeV", 
          "Energy resolution 15.% e  15.% \[Mu]  15.% \[Tau]"}]}}, 
        TableForm[ {
          
          TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
            "0.45\[CircleTimes]-\[Nu]e\[Mu]CC"}, {"0.00001\[PlusMinus]2.e-6", 
            "0.\[PlusMinus]0.0001", 
            "1.\[CircleTimes]-\!\(\(\[Nu]\&-\)\)\[Mu]\[Mu]CC"}}, 
            TableHeadings -> {{"Signal", "Background"}}], 
          
          TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
            "0.35\[CircleTimes]+\!\(\(\[Nu]\&-\)\)e\[Mu]CC"}, {
            "0.00001\[PlusMinus]2.e-6", "0.\[PlusMinus]0.0001", 
            "1.\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC"}}, TableHeadings -> {{
            "Signal", "Background"}}], 
          
          TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
            "0.45\[CircleTimes]-\!\(\(\[Nu]\&-\)\)\[Mu]\[Mu]CC"}, {
            "1.\[PlusMinus]0.001", "0.\[PlusMinus]0.0001", 
            "0.00001\[CircleTimes]-\[Nu]e\[Mu]CC"}}, TableHeadings -> {{
            "Signal", "Background"}}], 
          
          TableForm[ {{"1\[PlusMinus]0.001", "0\[PlusMinus]0.0001", 
            "0.35\[CircleTimes]+\[Nu]\[Mu]\[Mu]CC"}, {"1.\[PlusMinus]0.001", 
            "0.\[PlusMinus]0.0001", 
            "0.00001\[CircleTimes]+\!\(\(\[Nu]\&-\)\)e\[Mu]CC"}}, 
            TableHeadings -> {{"Signal", "Background"}}]}, TableHeadings -> {{
          0, 1, 2, 3}}]}]]], "Output"]
}, Open  ]],

Cell[TextData[{
  StyleBox["Possible parameter values for InitExperiment: ",
    FontVariations->{"Underline"->True}],
  "\n",
  StyleBox["NuFact",
    FontFamily->"Courier"],
  "  - Initial stage neutrino factory \n",
  StyleBox["NuFact2",
    FontFamily->"Courier"],
  "  - Advanced stage neutrino factory\n",
  StyleBox["JHFSK",
    FontFamily->"Courier"],
  " - JHF-SuperKamiokande experiment\n",
  StyleBox["JHFHK",
    FontFamily->"Courier"],
  " - JHF-HyperKamiokande experiment, spectral information on QE events used\n\
",
  StyleBox["JHFHKAll",
    FontFamily->"Courier"],
  " - JHF-HyperKamiokande experiment, total numbers used for QE events"
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell[TextData[{
  "After the initialization, an information summary is given such as above. \
In the upper part, it describes the standard parameter set for this \
experiment. In the lower part, the so-called \"Rules\" are listed, each \
containing a signal and a background part, which may consist of one or more \
channels each (the NuFact scenario has only one channel per rule). The ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "'s of the signal and background parts of all rules and channels are added \
at the end. The first column gives the number of the rule, the second refers \
to Signal or Background rule, the third to the normalization and \
normalization error, the fourth to the tilt and tilt error, the fifth and \
higher to the efficiency, the polarity of the source (particle or \
antiparticle decay), the measured neutrino type (neutrino or antineutrino), \
the oscillation channel, and the event type each (c.f., hep-ph/0205352, \
appendices).  A summary of the rules can also be obtained by:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ShowChannels[]\)], "Input"],

Cell[BoxData[
    TagBox[GridBox[{
          {"\<\"\"\>", "\<\"Polarity\"\>", "\<\"CP-sign\"\>", "\<\"Initial \
Flavour\"\>", "\<\"Final Flavour\"\>", "\<\"NC/CC\"\>"},
          {
            "0", "\<\"-\"\>", "\<\"\[Nu]\"\>", "\<\"e\"\>", "\<\"\[Mu]\"\>", \
"\<\"CC\"\>"},
          {
            "1", "\<\"+\"\>", "\<\"\\!\\(\\(\[Nu]\\&-\\)\\)\"\>", \
"\<\"e\"\>", "\<\"\[Mu]\"\>", "\<\"CC\"\>"},
          {
            "2", "\<\"-\"\>", "\<\"\\!\\(\\(\[Nu]\\&-\\)\\)\"\>", \
"\<\"\[Mu]\"\>", "\<\"\[Mu]\"\>", "\<\"CC\"\>"},
          {
            "3", "\<\"+\"\>", "\<\"\[Nu]\"\>", "\<\"\[Mu]\"\>", \
"\<\"\[Mu]\"\>", "\<\"CC\"\>"}
          },
        RowSpacings->1,
        ColumnSpacings->3,
        RowAlignments->Baseline,
        ColumnAlignments->{Left}],
      Function[ BoxForm`e$, 
        TableForm[ 
        BoxForm`e$, TableHeadings -> {{0, 1, 2, 3}, {"Polarity", "CP-sign", 
          "Initial Flavour", "Final Flavour", "NC/CC"}}]]]], "Output"]
}, Open  ]],

Cell[TextData[{
  "BUG note: Some versions of GlobesML.m, such es especially 0206XX and \
0207XX versions, require the variable ",
  StyleBox["smeartype",
    FontFamily->"Courier"],
  " to be set ",
  StyleBox["before",
    FontSlant->"Italic"],
  " ",
  StyleBox["InitExperiment",
    FontFamily->"Courier"],
  ". This variable controls the handling of the smearing metrices and has to \
be set to 0 for a neutrino factory and 1 for a Superbeam."
}], "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell["To finalize the initialization procedure, we call", "Text"],

Cell[BoxData[
    \(InitMemory[]\)], "Input"],

Cell[TextData[{
  "This initialization procedure has to be repeated if the ",
  StyleBox["MathLink",
    FontSlant->"Italic"],
  " to the C program should be dead, which can happen in several cases. For \
example, aborting a calculation procedure does not yet automatically kill the \
linked C program, which has to be terminated manually (kill the process). \
Thereafter, the ",
  StyleBox["MathLink",
    FontSlant->"Italic"],
  " can be also dead and may have to be re-initialized. \n\nThe following \
line gives a list of all commands of GLOBES, including those not described in \
this documentation:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(Sort[LinkPatterns[vlbl]]\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
        TagBox[\(CheckBaseline[]\),
          HoldForm], ",", 
        TagBox[\(CheckBeamEnergy[]\),
          HoldForm], ",", 
        TagBox[\(CheckBeamPolarisation[]\),
          HoldForm], ",", 
        TagBox[\(CheckBGCenter[l_Integer]\),
          HoldForm], ",", 
        TagBox[\(CheckBGErrors[l_Integer]\),
          HoldForm], ",", 
        TagBox[\(CheckChannel[i_Integer]\),
          HoldForm], ",", 
        TagBox[\(CheckDensity[]\),
          HoldForm], ",", 
        TagBox[\(CheckDensityProfileResolution[]\),
          HoldForm], ",", 
        TagBox[\(CheckEnergyTreshold[]\),
          HoldForm], ",", 
        TagBox[\(CheckExperiment[]\),
          HoldForm], ",", 
        TagBox[\(CheckMuons[]\),
          HoldForm], ",", 
        TagBox[\(CheckNumberOfBins[]\),
          HoldForm], ",", 
        TagBox[\(CheckNumberOfChannels[]\),
          HoldForm], ",", 
        TagBox[\(CheckNumberOfRules[]\),
          HoldForm], ",", 
        TagBox[\(CheckRuleCoeff[l_Integer, bg_Integer]\),
          HoldForm], ",", 
        TagBox[\(CheckRules[l_Integer, bg_Integer]\),
          HoldForm], ",", 
        TagBox[\(CheckSignalErrors[l_Integer]\),
          HoldForm], ",", 
        TagBox[\(CheckSquaredMasses[]\),
          HoldForm], ",", 
        TagBox[\(CheckTargetMass[]\),
          HoldForm], ",", 
        TagBox[\(CheckVacuumParamters[]\),
          HoldForm], ",", 
        TagBox[\(Chi2P[the_Real, del_Real, x_List]\),
          HoldForm], ",", 
        TagBox[\(ChiAll[x_List]\),
          HoldForm], ",", 
        TagBox[\(ChiBG[x_List]\),
          HoldForm], ",", 
        TagBox[\(ChiDelta[the_Real, x_List]\),
          HoldForm], ",", 
        TagBox[\(ChiDeltaTot[the_Real, x_List]\),
          HoldForm], ",", 
        TagBox[\(ChiDm[the_Real, x_List]\),
          HoldForm], ",", 
        TagBox[\(ChiLoop[x_List]\),
          HoldForm], ",", 
        TagBox[\(ChiNew[x_List]\),
          HoldForm], ",", 
        TagBox[\(ChiNewTot[x_List]\),
          HoldForm], ",", 
        TagBox[\(ChiTheta[the_Real, x_List]\),
          HoldForm], ",", 
        TagBox[\(ChiTheta23[the_Real, x_List]\),
          HoldForm], ",", 
        TagBox[\(ChiThetaTot[the_Real, x_List]\),
          HoldForm], ",", 
        TagBox[\(CInitSmearing[ls_Integer]\),
          HoldForm], ",", 
        TagBox[\(CMatterProbability[pl_Integer, pm_Integer, panti_Integer, 
            pen_Real, plength_Real, prho_Real]\),
          HoldForm], ",", 
        TagBox[\(CSetMatterDensity[prho_Real]\),
          HoldForm], ",", 
        TagBox[\(CSetNeutrinoEnergy[pen_Real]\),
          HoldForm], ",", 
        TagBox[\(CSetNSI[ep_Real, epp_Real]\),
          HoldForm], ",", 
        TagBox[\(CSetNSISD[eS_Real, eD_Real]\),
          HoldForm], ",", 
        TagBox[\(CSetResol[res_Real]\),
          HoldForm], ",", 
        TagBox[\(CSetSquaredMasses[mq1_Real, mq2_Real, mq3_Real]\),
          HoldForm], ",", 
        TagBox[\(CSetVacuumParameters[pt12_Real, pt13_Real, pt23_Real, 
            pdelta1_Real]\),
          HoldForm], ",", 
        TagBox[\(CVacuumProbability[pl_Integer, pm_Integer, panti_Integer, 
            pen_Real, plength_Real]\),
          HoldForm], ",", 
        TagBox[\(FastFluxE[en_Real, baseline_Real]\),
          HoldForm], ",", 
        TagBox[\(FastFluxMu[en_Real, baseline_Real]\),
          HoldForm], ",", 
        TagBox[\(FluxE[en_Real, baseline_Real, cost_Real]\),
          HoldForm], ",", 
        TagBox[\(FluxMu[en_Real, baseline_Real, cost_Real]\),
          HoldForm], ",", 
        TagBox[\(FluxNew[en_Real, baseline_Real, type_Integer, 
            polarity_Integer, l_Integer, anti_Integer]\),
          HoldForm], ",", 
        TagBox[\(GetPvec[i_Integer]\),
          HoldForm], ",", 
        TagBox[\(InitMemory[]\),
          HoldForm], ",", 
        TagBox[\(ReturnCorr[i_Integer]\),
          HoldForm], ",", 
        TagBox[\(ReturnRates[i_Integer, l_Integer]\),
          HoldForm], ",", 
        TagBox[\(ReturnZero[i_Integer, l_Integer]\),
          HoldForm], ",", 
        TagBox[\(SetBaseline[l_Real]\),
          HoldForm], ",", 
        TagBox[\(SetBeamEnergy[en_Real]\),
          HoldForm], ",", 
        TagBox[\(SetBeamPolarisation[pol_Real]\),
          HoldForm], ",", 
        TagBox[\(SetBGCenter[i_Integer, norm_Real, tilt_Real]\),
          HoldForm], ",", 
        TagBox[\(SetBGErrors[i_Integer, norm_Real, tilt_Real]\),
          HoldForm], ",", 
        TagBox[\(SetBGRule[i_Integer, rule_List, coeff_List]\),
          HoldForm], ",", 
        TagBox[\(SetChannel[i_Integer, polarity_Integer, anti_Integer, 
            l_Integer, m_Integer, cc_Integer]\),
          HoldForm], ",", 
        TagBox[\(SetChannelOld[ch_Integer]\),
          HoldForm], ",", 
        TagBox[\(SetDensity[dens_Real]\),
          HoldForm], ",", 
        TagBox[\(SetDensityProfileResolution[res_Integer]\),
          HoldForm], ",", 
        TagBox[\(SetEnergyTreshold[etresh_Real]\),
          HoldForm], ",", 
        TagBox[\(SetErrorDim[typ_Integer]\),
          HoldForm], ",", 
        TagBox[\(SetErrorFunction[typ_Integer]\),
          HoldForm], ",", 
        TagBox[\(SetExperiment[type_Integer]\),
          HoldForm], ",", 
        TagBox[\(SetInputErrors[a_Real, b_Real, c_Real, d_Real, e_Real, 
            f_Real]\),
          HoldForm], ",", 
        TagBox[\(SetMuons[n_Real]\),
          HoldForm], ",", 
        TagBox[\(SetNewRates[]\),
          HoldForm], ",", 
        TagBox[\(SetNumberOfBins[nr_Integer]\),
          HoldForm], ",", 
        TagBox[\(SetNumberOfChannels[cc_Integer]\),
          HoldForm], ",", 
        TagBox[\(SetNumberOfRules[cn_Integer]\),
          HoldForm], ",", 
        TagBox[\(SetRates[]\),
          HoldForm], ",", 
        TagBox[\(SetRule[i_Integer, rule_List, coeff_List]\),
          HoldForm], ",", 
        TagBox[\(SetSignalErrors[i_Integer, norm_Real, tilt_Real]\),
          HoldForm], ",", 
        TagBox[\(SetStartingValues[a_Real, b_Real, c_Real, d_Real, e_Real, 
            f_Real]\),
          HoldForm], ",", 
        TagBox[\(SetTargetMass[mass_Real]\),
          HoldForm], ",", 
        TagBox[\(SetTresholdCenter[i_Integer, a_Real, b_Real]\),
          HoldForm], ",", 
        TagBox[\(SetTresholdErrors[i_Integer, a_Real, b_Real]\),
          HoldForm], ",", 
        TagBox[\(XCC[enl_Real, l_Integer, anti_Integer]\),
          HoldForm], ",", 
        TagBox[\(XNC[enl_Real, l_Integer, anti_Integer]\),
          HoldForm], ",", 
        TagBox[\(XQE[enl_Real, l_Integer, anti_Integer]\),
          HoldForm]}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
Note that, in general, the \"Check\" commands return parameter \
values, and the \"Set\" commands set them. Also note that the commands \
starting with \"C\" usually have their equivalents without \"C\", which \
should be actually used. \
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Setting the oscillation parameters", "Section"],

Cell[TextData[{
  "There are six parameters to be measured by the experiment:",
  StyleBox[" ",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\(sin(
          2  \[Theta]\_12)\)\[Times]\[CapitalDelta]m\_21\%2\)],
    FontWeight->"Bold",
    FontVariations->{"CompatibilityType"->0}],
  StyleBox[",  ",
    FontWeight->"Bold",
    FontVariations->{"CompatibilityType"->0}],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)],
    FontWeight->"Bold",
    FontVariations->{"CompatibilityType"->0}],
  StyleBox[", ",
    FontWeight->"Bold",
    FontVariations->{"CompatibilityType"->0}],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)],
    FontWeight->"Bold",
    FontVariations->{"CompatibilityType"->0}],
  StyleBox[", ",
    FontWeight->"Bold",
    FontVariations->{"CompatibilityType"->0}],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_32\%2\),
        FontFamily->"Times"]],
    FontWeight->"Bold",
    FontVariations->{"CompatibilityType"->0}],
  StyleBox[", \[Delta], and \[Rho]",
    FontWeight->"Bold",
    FontVariations->{"CompatibilityType"->0}],
  ". In the numerical evaluations, the density is also treated as a variable \
to be measured (within a certain range) as all the other oscillation \
parameters, which turns out to be a rather simple method to treat matter \
density uncertainties. Since long baseline experiments are only sensitive to \
the product of the solar parameters, any variation of ",
  Cell[BoxData[
      \(TraditionalForm\`\[CapitalDelta]m\_21\%2\)]],
  "will actually imply a variation of the product ",
  Cell[BoxData[
      \(TraditionalForm\`\(sin(
          2  \[Theta]\_12)\)\[Times]\[CapitalDelta]m\_21\%2\)]],
  ", where ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_12\)]],
  "is fixed to \[Pi]/4 internally, i.e., ",
  Cell[BoxData[
      \(TraditionalForm\`sin(2  \[Theta]\_12) = 1\)]],
  ". Thus, for ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_12 \[NotEqual] \ \[Pi]/4\)]],
  "the results or the settings have to be rescaled in ",
  Cell[BoxData[
      \(TraditionalForm\`\[CapitalDelta]m\_21\%2\)]],
  "! For example, in order to set the LMA solution with ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_12 = 32.9\^o\)]],
  "and ",
  Cell[BoxData[
      \(TraditionalForm\`\[CapitalDelta]m\_21\%2 = 4.5\ 10\^\(-5\)\)]],
  ", we actually have to use a different ",
  Cell[BoxData[
      \(TraditionalForm\`\[CapitalDelta]m\_21\%2\)]],
  " in the initialization routines:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(RescaledSMD\  = \ 
      Sin[2\ 32.9\ \[Pi]/180]\ 4.5\ 10^\((\(-5\))\)\)], "Input"],

Cell[BoxData[
    \(0.000041045405227752284`\)], "Output"]
}, Open  ]],

Cell["Now we can set the oscillation parameters (best-fit values):", "Text"],

Cell[BoxData[
    \(SetVacuumParameters[N[9999], N[ArcSin[Sqrt[0.01]]/2], N[\[Pi]/4], 
      N[0]]\)], "Input"],

Cell[TextData[{
  "sets the mixing angles ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_12\)],
    FontWeight->"Bold"],
  StyleBox[",  ",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)],
    FontWeight->"Bold"],
  StyleBox[", and the CP phase \[Delta]",
    FontWeight->"Bold"],
  " (in this order) to the LMA best fit values, where the setting of ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_12\)]],
  " has no effect here and has, as explained above, indirectly to be done via \
the solar mass squared difference. Parameter values or parameters should be \
always wrapped by ",
  StyleBox["N[]",
    FontFamily->"Courier"],
  ", because the C-functions require real values. Here we used ",
  Cell[BoxData[
      \(TraditionalForm\`\(sin\^2\)(2  \[Theta]\_13)\)]],
  "=0.01 as parameter and calculated ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  "from it."
}], "Text"],

Cell[BoxData[
    \(SetMasses[N[RescaledSMD], N[3.0*10^\(-3\)]]\)], "Input"],

Cell[TextData[{
  "sets the mass squared differences ",
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_21\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[" and ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_32\%2\),
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[",",
    FontWeight->"Bold"],
  " where the solar mass squared difference was rescaled as described above.  \
\nIn addition, "
}], "Text"],

Cell[BoxData[
    \(SetDensity[DENSITY]\)], "Input"],

Cell[TextData[{
  "should be automatically used before each run of ChiTheta and ChiDelta, \
since they change the value of the density. ",
  StyleBox["DENSITY",
    FontFamily->"Courier"],
  " is a global variable, which holds the true value of the measured average \
matter density \[Rho]. \n\nAfter setting the oscillation parameters,the \
following command is used to set the reference rates for Chi... :"
}], "Text"],

Cell[BoxData[
    \(SetRates[]\)], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  "Calculating ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "with systematics: ",
  StyleBox["ChiNew",
    FontFamily->"Courier"]
}], "Section"],

Cell[TextData[{
  "The function ChiNew calculates ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  " including systematical errors determined by the rules in ",
  StyleBox["InitExperiment",
    FontFamily->"Courier"],
  ", but no correlations and degeneracies. The ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  " function is minimized over all systematical priors as described in the \
appendix of hep-ph/0205352. For example,"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(ChiNew[
      N[{N[ArcSin[Sqrt[0.01]]/2], \[Pi]/4, 0, RescaledSMD, 0.003, 
          DENSITY}]]\)\(\ \ \ \)\)\)], "Input"],

Cell[BoxData[
    \(7.992443579612786`*^-9\)], "Output"]
}, Open  ]],

Cell[TextData[{
  "gives essentially zero, because we evaluated it at the best-fit point. It \
is important to note that one uses numerical, real values as parameters in \
form of a list ",
  StyleBox["{",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)],
    FontWeight->"Bold"],
  StyleBox[", \[Delta],  ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_21\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_32\%2\),
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", \[Rho]}",
    FontWeight->"Bold"],
  " of this order and format.  \n\nSince this function is quite fast, it can \
be used for test purposes, such as to find the characteristics of contours. \
For example, the following routines draw the 1\[Sigma], 2\[Sigma], and 3\
\[Sigma] contours for a two-parameter fit of  ",
  Cell[BoxData[
      \(TraditionalForm\`\(sin\^2\)(2  \[Theta]\_13)\)]],
  " versus ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)]],
  ", scaled by the parameters ",
  StyleBox["x",
    FontFamily->"Courier"],
  " and ",
  StyleBox["y",
    FontFamily->"Courier"],
  ":"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \($TextStyle\  = \ {FontFamily\  \[Rule] \ "\<Times\>", 
        FontSize \[Rule] 10}\)], "Input"],

Cell[BoxData[
    \({FontFamily \[Rule] "Times", FontSize \[Rule] 10}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(ContourPlot[
      ChiNew[N[{N[ArcSin[Sqrt[0.01*x]]/2], \[Pi]/4*y, 0, RescaledSMD, 0.003, 
            DENSITY}]], {x, 0.5, 1.6}, {y, 0.8, 1.2}, \ 
      Contours \[Rule] {2.3, 6.18, 11.83}, \ ContourShading \[Rule] False, 
      ContourStyle \[Rule] {{GrayLevel[
              0]}, {AbsoluteDashing[{1, 3, 1, 3}]}, {AbsoluteDashing[{5, 3, 
                3, 3}]}}, \ PlotPoints \[Rule] 20]\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: 1 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% ContourGraphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-0.417832 0.874126 -1.90385 2.40385 [
[.10664 -0.0125 -8.25 -10.9375 ]
[.10664 -0.0125 8.25 0 ]
[.28147 -0.0125 -8.25 -10.9375 ]
[.28147 -0.0125 8.25 0 ]
[.45629 -0.0125 -4.5 -10.9375 ]
[.45629 -0.0125 4.5 0 ]
[.63112 -0.0125 -8.25 -10.9375 ]
[.63112 -0.0125 8.25 0 ]
[.80594 -0.0125 -8.25 -10.9375 ]
[.80594 -0.0125 8.25 0 ]
[.98077 -0.0125 -8.25 -10.9375 ]
[.98077 -0.0125 8.25 0 ]
[ 0 0 -0.125 0 ]
[-0.0125 .01923 -16.5 -5.46875 ]
[-0.0125 .01923 0 5.46875 ]
[-0.0125 .25962 -16.5 -5.46875 ]
[-0.0125 .25962 0 5.46875 ]
[-0.0125 .5 -9 -5.46875 ]
[-0.0125 .5 0 5.46875 ]
[-0.0125 .74038 -16.5 -5.46875 ]
[-0.0125 .74038 0 5.46875 ]
[-0.0125 .98077 -16.5 -5.46875 ]
[-0.0125 .98077 0 5.46875 ]
[ 0 0 -0.125 0 ]
[ 0 1 .125 0 ]
[ 1 0 .125 0 ]
[ 0 0 0 0 ]
[ 1 1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.10664 0 m
.10664 .00625 L
s
gsave
.10664 -0.0125 -69.25 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.6) show
1.000 setlinewidth
grestore
.28147 0 m
.28147 .00625 L
s
gsave
.28147 -0.0125 -69.25 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.8) show
1.000 setlinewidth
grestore
.45629 0 m
.45629 .00625 L
s
gsave
.45629 -0.0125 -65.5 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
1.000 setlinewidth
grestore
.63112 0 m
.63112 .00625 L
s
gsave
.63112 -0.0125 -69.25 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1.2) show
1.000 setlinewidth
grestore
.80594 0 m
.80594 .00625 L
s
gsave
.80594 -0.0125 -69.25 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1.4) show
1.000 setlinewidth
grestore
.98077 0 m
.98077 .00625 L
s
gsave
.98077 -0.0125 -69.25 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1.6) show
1.000 setlinewidth
grestore
.125 Mabswid
.15035 0 m
.15035 .00375 L
s
.19406 0 m
.19406 .00375 L
s
.23776 0 m
.23776 .00375 L
s
.32517 0 m
.32517 .00375 L
s
.36888 0 m
.36888 .00375 L
s
.41259 0 m
.41259 .00375 L
s
.5 0 m
.5 .00375 L
s
.54371 0 m
.54371 .00375 L
s
.58741 0 m
.58741 .00375 L
s
.67483 0 m
.67483 .00375 L
s
.71853 0 m
.71853 .00375 L
s
.76224 0 m
.76224 .00375 L
s
.84965 0 m
.84965 .00375 L
s
.89336 0 m
.89336 .00375 L
s
.93706 0 m
.93706 .00375 L
s
.06294 0 m
.06294 .00375 L
s
.01923 0 m
.01923 .00375 L
s
.25 Mabswid
0 0 m
1 0 L
s
0 .01923 m
.00625 .01923 L
s
gsave
-0.0125 .01923 -77.5 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.8) show
1.000 setlinewidth
grestore
0 .25962 m
.00625 .25962 L
s
gsave
-0.0125 .25962 -77.5 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.9) show
1.000 setlinewidth
grestore
0 .5 m
.00625 .5 L
s
gsave
-0.0125 .5 -70 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
1.000 setlinewidth
grestore
0 .74038 m
.00625 .74038 L
s
gsave
-0.0125 .74038 -77.5 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1.1) show
1.000 setlinewidth
grestore
0 .98077 m
.00625 .98077 L
s
gsave
-0.0125 .98077 -77.5 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1.2) show
1.000 setlinewidth
grestore
.125 Mabswid
0 .06731 m
.00375 .06731 L
s
0 .11538 m
.00375 .11538 L
s
0 .16346 m
.00375 .16346 L
s
0 .21154 m
.00375 .21154 L
s
0 .30769 m
.00375 .30769 L
s
0 .35577 m
.00375 .35577 L
s
0 .40385 m
.00375 .40385 L
s
0 .45192 m
.00375 .45192 L
s
0 .54808 m
.00375 .54808 L
s
0 .59615 m
.00375 .59615 L
s
0 .64423 m
.00375 .64423 L
s
0 .69231 m
.00375 .69231 L
s
0 .78846 m
.00375 .78846 L
s
0 .83654 m
.00375 .83654 L
s
0 .88462 m
.00375 .88462 L
s
0 .93269 m
.00375 .93269 L
s
.25 Mabswid
0 0 m
0 1 L
s
.10664 .99375 m
.10664 1 L
s
.28147 .99375 m
.28147 1 L
s
.45629 .99375 m
.45629 1 L
s
.63112 .99375 m
.63112 1 L
s
.80594 .99375 m
.80594 1 L
s
.98077 .99375 m
.98077 1 L
s
.125 Mabswid
.15035 .99625 m
.15035 1 L
s
.19406 .99625 m
.19406 1 L
s
.23776 .99625 m
.23776 1 L
s
.32517 .99625 m
.32517 1 L
s
.36888 .99625 m
.36888 1 L
s
.41259 .99625 m
.41259 1 L
s
.5 .99625 m
.5 1 L
s
.54371 .99625 m
.54371 1 L
s
.58741 .99625 m
.58741 1 L
s
.67483 .99625 m
.67483 1 L
s
.71853 .99625 m
.71853 1 L
s
.76224 .99625 m
.76224 1 L
s
.84965 .99625 m
.84965 1 L
s
.89336 .99625 m
.89336 1 L
s
.93706 .99625 m
.93706 1 L
s
.06294 .99625 m
.06294 1 L
s
.01923 .99625 m
.01923 1 L
s
.25 Mabswid
0 1 m
1 1 L
s
.99375 .01923 m
1 .01923 L
s
.99375 .25962 m
1 .25962 L
s
.99375 .5 m
1 .5 L
s
.99375 .74038 m
1 .74038 L
s
.99375 .98077 m
1 .98077 L
s
.125 Mabswid
.99625 .06731 m
1 .06731 L
s
.99625 .11538 m
1 .11538 L
s
.99625 .16346 m
1 .16346 L
s
.99625 .21154 m
1 .21154 L
s
.99625 .30769 m
1 .30769 L
s
.99625 .35577 m
1 .35577 L
s
.99625 .40385 m
1 .40385 L
s
.99625 .45192 m
1 .45192 L
s
.99625 .54808 m
1 .54808 L
s
.99625 .59615 m
1 .59615 L
s
.99625 .64423 m
1 .64423 L
s
.99625 .69231 m
1 .69231 L
s
.99625 .78846 m
1 .78846 L
s
.99625 .83654 m
1 .83654 L
s
.99625 .88462 m
1 .88462 L
s
.99625 .93269 m
1 .93269 L
s
.25 Mabswid
1 0 m
1 1 L
s
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
.5 Mabswid
[ 5 3 3 3 ] 0 Mabsdash
.4747 .2121 m
.5253 .2027 L
.57591 .19677 L
.62652 .19392 L
.67713 .19405 L
.72773 .19761 L
.77834 .20616 L
.82346 .22166 L
.82895 .22402 L
.87955 .26511 L
.88268 .27227 L
.88065 .32287 L
.87955 .326 L
.85489 .37348 L
.82895 .41309 L
.81967 .42409 L
.78253 .4747 L
.77834 .48053 L
.747 .5253 L
.72773 .55393 L
.71323 .57591 L
.67871 .62652 L
.67713 .62871 L
.63869 .67713 L
.62652 .69037 L
.58478 .72773 L
.57591 .7346 L
.5253 .76651 L
.49951 .77834 L
.4747 .78845 L
.42409 .80415 L
.37348 .81324 L
.32287 .81622 L
.27227 .81263 L
.22166 .79937 L
.18471 .77834 L
.17105 .76631 L
.14426 .72773 L
.13455 .67713 L
.13929 .62652 L
.15156 .57591 L
.16732 .5253 L
.17105 .51393 L
.18432 .4747 L
.20319 .42409 L
.22166 .38345 L
.22681 .37348 L
.26149 .32287 L
.27227 .31083 L
.31997 .27227 L
Mistroke
.32287 .27034 L
.37348 .24302 L
.42409 .22517 L
.43696 .22166 L
.4747 .2121 L
Mfstroke
[ 1 3 1 3 ] 0 Mabsdash
.4747 .26062 m
.5253 .24825 L
.57591 .24146 L
.62652 .23945 L
.67713 .24274 L
.72773 .26259 L
.74557 .27227 L
.77254 .32287 L
.75722 .37348 L
.72773 .42286 L
.72694 .42409 L
.69321 .4747 L
.67713 .49918 L
.6605 .5253 L
.62899 .57591 L
.62652 .57982 L
.59598 .62652 L
.57591 .65276 L
.55399 .67713 L
.5253 .70341 L
.48809 .72773 L
.4747 .73506 L
.42409 .75652 L
.37348 .76741 L
.32287 .7693 L
.27227 .76049 L
.22883 .72773 L
.22166 .71631 L
.20766 .67713 L
.21005 .62652 L
.22166 .58121 L
.22327 .57591 L
.24063 .5253 L
.26026 .4747 L
.27227 .44603 L
.28183 .42409 L
.31002 .37348 L
.32287 .3557 L
.35446 .32287 L
.37348 .30741 L
.42409 .27868 L
.44096 .27227 L
.4747 .26062 L
s
[ ] 0 setdash
.4747 .32103 m
.5253 .30229 L
.57591 .30118 L
.62652 .31055 L
.64933 .32287 L
.65799 .37348 L
.63469 .42409 L
.62652 .44067 L
.60527 .4747 L
.57591 .52245 L
.57448 .5253 L
.54609 .57591 L
.5253 .60771 L
.51358 .62652 L
.4747 .66717 L
.45859 .67713 L
.42409 .69883 L
.37348 .7085 L
.32287 .70116 L
.29496 .67713 L
.28329 .62652 L
.29692 .57591 L
.31797 .5253 L
.32287 .51398 L
.33849 .4747 L
.36461 .42409 L
.37348 .40952 L
.39918 .37348 L
.42409 .3493 L
.47041 .32287 L
.4747 .32103 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 288},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40006`0001/2000`400?l00000o`00003oo`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona
0?ooo`00o`3ooona0?ooo`00?`3oool4000000@0oooo00<000000?ooo`3oool01000000f0?ooo`@0
0000103oool010000000oooo0?ooo`3oool3000003`0oooo1@00000k0?ooo`D000000`3oool00`00
0000oooo00000005000003D0oooo1@0000030?ooo`030000003oool0oooo00<0oooo00<000000?oo
o`3oool0=@3oool5000000<0oooo00<000000?ooo`3oool0100000070?ooo`00?P3oool200000080
oooo0P0000030?ooo`040000003oool0000000000080oooo0P00000d0?ooo`8000000P3oool20000
00<0oooo00<000000?ooo`3oool00P0000000`3oool000000000000m0?ooo`030000003oool0oooo
03d0oooo00<000000?ooo`3oool00`3oool010000000oooo0000000000030?ooo`030000003oool0
oooo03D0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`030?ooo`030000003oool0
oooo03L0oooo00<000000?ooo`3oool00`3oool010000000oooo0000000000020?ooo`8000001P3o
ool003h0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003oool0
oooo0080oooo00<000000?ooo`3oool0<P3oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo00@0oooo00D000000?ooo`3oool0oooo0000000m0?ooo`030000003oool0oooo03d0oooo00<0
00000?ooo`3oool01P3oool00`000000oooo0?ooo`0i0?ooo`030000003oool0oooo00D0oooo1P00
000h0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?oo
o`040?ooo`00?P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<00000
0?ooo`3oool00P3oool00`000000oooo0?ooo`0b0?ooo`030000003oool0oooo0080oooo00<00000
0?ooo`3oool0103oool01@000000oooo0?ooo`3oool0000003d0oooo00<000000?ooo`3oool0?@3o
ool00`000000oooo0?ooo`070?ooo`030000003oool0oooo03P0oooo00<000000?ooo`3oool01@3o
ool01@000000oooo0?ooo`3oool0000003T0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`020?ooo`030000003oool0oooo00@0oooo000n0?ooo`030000003oool0oooo0080oooo00<0
00000?ooo`3oool00`3oool200000080oooo0P00000d0?ooo`030000003oool0oooo0080oooo00<0
00000?ooo`3oool0103oool00`000000oooo0?ooo`02000003d0oooo00<000000?ooo`3oool0?@3o
ool00`000000oooo0?ooo`080?ooo`030000003oool0oooo03L0oooo00<000000?ooo`3oool01P3o
ool010000000oooo0?ooo`00000i0?ooo`030000003oool0oooo00D0oooo0P0000020?ooo`800000
1P3oool003h0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`040?ooo`@00000=@3o
ool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00D0oooo0`00000n0?ooo`030000003o
ool0oooo03d0oooo00<000000?ooo`3oool0203oool2000003P0oooo00<000000?ooo`3oool01P3o
ool2000000030?ooo`000000oooo03P0oooo00<000000?ooo`3oool01P3oool4000000L0oooo000n
0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0f
0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0103oool200000080oooo00<00000
0?ooo`3oool0>`3oool00`000000oooo0?ooo`0m0?ooo`030000003oool0oooo00T0oooo00<00000
0?ooo`3oool0=P3oool00`000000oooo0?ooo`070?ooo`030000003oool0000003T0oooo00<00000
0?ooo`3oool01P3oool00`000000oooo0?ooo`080?ooo`00?P3oool00`000000oooo0?ooo`020?oo
o`030000003oool0oooo00@0oooo00<000000?ooo`3oool0=P3oool00`000000oooo0?ooo`020?oo
o`030000003oool0oooo00@0oooo0P0000020?ooo`030000003oool0oooo03/0oooo00<000000?oo
o`3oool0?@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo03H0oooo00<000000?oo
o`3oool01`3oool00`000000oooo0000000i0?ooo`030000003oool0oooo00H0oooo00<000000?oo
o`3oool0203oool003h0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`050?ooo`03
0000003oool0oooo03D0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`040?ooo`05
0000003oool0oooo0?ooo`000000?@3oool00`000000oooo0?ooo`0m0?ooo`030000003oool0oooo
00D0oooo00D000000?ooo`3oool0oooo0000000h0?ooo`030000003oool0oooo00P0oooo0P00000i
0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool01`3oool003h0oooo0P0000020?oo
o`800000203oool2000003D0oooo0P0000020?ooo`8000001P3oool2000000030?ooo`0000000000
03/0oooo0`00000m0?ooo`<000001`3oool2000000030?ooo`000000000003H0oooo0`00000:0?oo
o`800000=`3oool3000000X0oooo0P0000070?ooo`00?`3oool4000000X0oooo0P00000e0?ooo`@0
0000203oool3000003h0oooo00<000000?ooo`3oool0?@3oool00`000000oooo0?ooo`060?ooo`<0
0000>@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo03L0oooo00<000000?ooo`3o
ool02@3oool2000000H0oooo003o0?oook40oooo003o0?oook40oooo003o0?oook40oooo003o0?oo
ok40oooo003o0?oook40oooo000M0?ooool00000S`0000050?ooo`007@3oool00`000000oooo0?oo
o`050?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0?0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0?0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0?0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0?0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0?0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0?0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0?0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?oo
o`030?ooo`007@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00h0oooo00<00000
0?ooo`3oool01@3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0W0?oo
o`030000003oool0oooo04<0oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`120?oo
o`030000003oool0oooo04<0oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`050?oo
o`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000
oooo0?ooo`030?ooo`00103oool4000000@0oooo00@000000?ooo`3oool0oooo0`00000:0?ooo`03
0000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`000`3oool200000080oooo
0P0000030?ooo`030000003oool0oooo0080000000<0oooo0000000000002@3oool00`000000oooo
0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool000<0oooo00<000000?ooo`3oool00P3o
ool00`000000oooo0?ooo`040?ooo`050000003oool0oooo0?ooo`0000002@3oool00`000000oooo
0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool000<0oooo00<000000?ooo`3oool00P3o
ool00`000000oooo0?ooo`040?ooo`050000003oool0oooo0?ooo`0000002@3oool400000?l0oooo
Q`3oool4000000D0oooo00030?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0103o
ool00`000000oooo0?ooo`02000000T0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003o
ool0oooo00<0oooo00030?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool01@3oool3
000000X0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo00030?oo
o`030000003oool0oooo0080oooo00<000000?ooo`3oool0103oool200000080oooo00<000000?oo
o`3oool01`3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool000<0
oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`040?ooo`8000000P3oool00`000000
oooo0?ooo`070?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`00
0`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00@0oooo00D000000?ooo`3oool0
oooo000000090?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`00
0`3oool200000080oooo0P0000060?ooo`80000000<0oooo0000000000002@3oool00`000000oooo
0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool000@0oooo100000080?ooo`<000002P3o
ool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<00000
0?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo
0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0
oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000
003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?oo
o`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool0
01d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`03
0000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo
0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3o
oon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool0
0`000000oooo0?ooo`030?ooo`007@3oool300000?l0ooooR@3oool3000000D0oooo000M0?ooo`03
0000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo
0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3o
oon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool0
0`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?oo
o`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0
oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3o
ool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<00000
0?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo
0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0
oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000
003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?oo
o`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool0
01d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`03
0000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo
0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3o
oon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`<00000o`3ooon90?ooo`<000001@3oool0
01d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`03
0000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo
0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3o
oon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool0
0`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?oo
o`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0
oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3o
ool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<00000
0?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo
0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0
oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000
003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?oo
o`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool0
01d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`03
0000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo
0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo0`00003o0?ooohT0oooo0`00
00050?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool0
01d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`03
0000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo
0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3o
oon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool0
0`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?oo
o`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0
oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3o
ool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<00000
0?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo
0?00oooo1@0000030?ooo`H000000`3oool9000000<0oooo0`00001j0?ooo`030000003oool0oooo
00<0oooo000M0?ooo`030000003oool0oooo0=`0oooo100000030?ooo`H000000`3oool400000200
oooo0`0000030?ooo`T00000J`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo
0?ooo`3H0?ooo`@00000@P3oool010000000oooo0?ooo`3oool3000006D0oooo00<000000?ooo`3o
ool00`3oool001d0oooo00<000000?ooo`3oool0c`3oool500000540oooo0`00001R0?ooo`030000
003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0<L0oooo1000001P0?ooo`@00000F`3o
ool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`330?ooo`@00000J03oool5
000005H0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0_03oool30000
0</0oooo00<000000?ooo`3oool00`3oool001d0oooo0`00002h0?ooo`@00000N`3oool3000004h0
oooo0`0000050?ooo`007@3oool00`000000oooo0?ooo`2g0?ooo`030000003oool0oooo0800oooo
0P00001>0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0;40oooo0P00
003G0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0:d0oooo1000002>
0?ooo`<00000B03oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`2[0?oo
o`800000U@3oool4000004@0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3o
ool0Y03oool4000009h0oooo00<000000?ooo`3oool0@@3oool00`000000oooo0?ooo`030?ooo`00
7@3oool00`000000oooo0?ooo`2S0?ooo`030000003oool0oooo0>@0oooo00<000000?ooo`3oool0
0`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M
0?ooo`030000003oool0oooo09d0oooo0P00002[0?ooo`030000003oool0oooo03d0oooo00<00000
0?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0V@3oool400000:h0oooo00<000000?oo
o`3oool0?03oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`2G0?ooo`80
0000/`3oool00`000000oooo0?ooo`0k0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000
003oool0oooo0>l0oooo0P0000040?ooo`800000103oool00`000000oooo0?ooo`1?0?ooo`030000
003oool0oooo03X0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0T@3o
ool3000004X0oooo00<000000?ooo`3oool00P3oool2000000@0oooo0P00000A0?ooo`030000003o
ool0oooo0080oooo0P0000040?ooo`800000P@3oool00`000000oooo0?ooo`030?ooo`007@3oool0
0`000000oooo0?ooo`2@0?ooo`030000003oool0oooo04@0oooo0P0000040?ooo`030000003oool0
oooo02`0oooo0P00001l0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo
08l0oooo00<000000?ooo`3oool0?`3oool2000003/0oooo00<000000?ooo`3oool0@03oool00`00
0000oooo0?ooo`0f0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0</0
oooo0P0000250?ooo`030000003oool0oooo03D0oooo00<000000?ooo`3oool00`3oool001d0oooo
00<000000?ooo`3oool0RP3oool2000003X0oooo0P00001:0?ooo`800000?`3oool2000003D0oooo
00<000000?ooo`3oool00`3oool000@0oooo100000040?ooo`040000003oool00000000000d0oooo
00<000000?ooo`3oool0R03oool2000003/0oooo00<000000?ooo`3oool0S@3oool00`000000oooo
0?ooo`0b0?ooo`030000003oool0oooo00<0oooo00030?ooo`8000000P3oool2000000<0oooo00<0
00000?ooo`3oool00P00000<0?ooo`030000003oool0oooo08H0oooo0P00000g0?ooo`<00000EP3o
ool2000003`0oooo00<000000?ooo`3oool0<@3oool00`000000oooo0?ooo`030?ooo`000`3oool0
0`000000oooo0?ooo`020?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool02@3oool4
000008<0oooo0P00000c0?ooo`<00000V`3oool00`000000oooo0?ooo`0]0?ooo`@000001@3oool0
00<0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo
00P0oooo00<000000?ooo`3oool0^03oool2000006<0oooo0P00001[0?ooo`030000003oool0oooo
00<0oooo00030?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0103oool4000000X0
oooo00<000000?ooo`3oool0o`3ooolP0?ooo`030000003oool0oooo03P0oooo00<000000?ooo`3o
ool0;@3oool00`000000oooo0?ooo`030?ooo`000`3oool00`000000oooo0?ooo`020?ooo`030000
003oool0oooo00<0oooo0P0000020?ooo`8000002@3oool00`000000oooo0?ooo`1o0?ooo`800000
<@3oool200000:H0oooo00<000000?ooo`3oool0;@3oool00`000000oooo0?ooo`030?ooo`000`3o
ool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3o
ool00`000000oooo0?ooo`070?ooo`030000003oool0oooo07d0oooo0P00002S0?ooo`800000=`3o
ool00`000000oooo0?ooo`0/0?ooo`030000003oool0oooo00<0oooo00030?ooo`030000003oool0
oooo0080oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo00L0oooo00<000000?ooo`3oool0O03oool2000002h0oooo0`00001e0?ooo`030000003oool0
oooo03@0oooo00<000000?ooo`3oool0;03oool00`000000oooo0?ooo`030?ooo`000`3oool00`00
0000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool00`00
0000oooo0?ooo`070?ooo`030000003oool0oooo07/0oooo00<000000?ooo`3oool0g@3oool00`00
0000oooo0?ooo`0/0?ooo`030000003oool0oooo00<0oooo00030?ooo`8000000P3oool2000000D0
oooo0P0000020?ooo`8000002@3oool00`000000oooo0?ooo`2W0?ooo`800000/P3oool00`000000
oooo0?ooo`0/0?ooo`030000003oool0oooo00<0oooo00040?ooo`@000001`3oool4000000X0oooo
00<000000?ooo`3oool0o`3ooolW0?ooo`030000003oool0oooo0640oooo00<000000?ooo`3oool0
0`3oool001d0oooo00<000000?ooo`3oool0M`3oool00`000000oooo0?ooo`0X0?ooo`800000P`3o
ool00`000000oooo0?ooo`1P0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0
oooo07H0oooo00<000000?ooo`3oool0:03oool00`000000oooo0?ooo`3V0?ooo`030000003oool0
oooo00<0oooo000M0?ooo`030000003oool0oooo07D0oooo00<000000?ooo`3oool0h`3oool00`00
0000oooo0?ooo`0/0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo07@0
oooo00<000000?ooo`3oool09P3oool00`000000oooo0?ooo`2k0?ooo`030000003oool0oooo02`0
oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0W03oool00`000000oooo
0?ooo`2:0?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool0;03oool00`000000oooo
0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?ooob/0oooo00<000000?ooo`3oool0;P3o
ool00`000000oooo0?ooo`0/0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0
oooo0700oooo00<000000?ooo`3oool09@3oool00`000000oooo0?ooo`2?0?ooo`030000003oool0
oooo02h0oooo00<000000?ooo`3oool0;03oool00`000000oooo0?ooo`030?ooo`007@3oool00`00
0000oooo0?ooo`1_0?ooo`030000003oool0oooo02D0oooo00<000000?ooo`3oool0`@3oool00`00
0000oooo0?ooo`0/0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo06d0
oooo0P00001N0?oooaT00000M@3oool00`000000oooo0?ooo`0/0?ooo`030000003oool0oooo00<0
oooo000M0?ooo`030000003oool0oooo06`0oooo00<000000?ooo`3oool0903oool00`000000oooo
0?ooo`0d0?ooo`<000006@3oool7000006h0oooo00<000000?ooo`3oool0;03oool00`000000oooo
0?ooo`030?ooo`007@3oool3000006/0oooo00<000000?ooo`3oool0903oool00`000000oooo0?oo
o`0b0?ooo`<000008`3oool6000003T0oooo00<000000?ooo`3oool0;03oool00`000000oooo0?oo
o`0Z0?ooo`<000001@3oool001d0oooo00<000000?ooo`3oool0JP3oool00`000000oooo0?ooo`1G
0?ooo`<00000;03oool4000003H0oooo00<000000?ooo`3oool0FP3oool00`000000oooo0?ooo`03
0?ooo`007@3oool00`000000oooo0?ooo`310?ooo`<00000<`3oool200000940oooo00<000000?oo
o`3oool00`3oool001d0oooo00<000000?ooo`3oool0SP3oool00`000000oooo0?ooo`0]0?ooo`<0
0000>03oool2000008l0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0
I`3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02/0oooo0`00000m0?ooo`800000
G@3oool00`000000oooo0?ooo`0]0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003o
ool0oooo06H0oooo00<000000?ooo`3oool0D03oool200000480oooo0P00000`0?ooo`030000003o
ool0oooo02P0oooo00<000000?ooo`3oool0;@3oool00`000000oooo0?ooo`030?ooo`007@3oool0
0`000000oooo0?ooo`1U0?ooo`030000003oool0oooo0240oooo00<000000?ooo`3oool0;03oool0
0`000000oooo0?ooo`140?ooo`030000003oool0oooo02d0oooo0P00000Y0?ooo`030000003oool0
oooo02d0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0I03oool00`00
0000oooo0?ooo`0R0?ooo`030000003oool0oooo02X0oooo0P0000170?ooo`030000003oool0oooo
05P0oooo00<000000?ooo`3oool0;@3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000
oooo0?ooo`280?ooo`030000003oool0oooo02T0oooo0P0000190?ooo`030000003oool0oooo05L0
oooo00<000000?ooo`3oool0;P3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo
0?ooo`2b0?ooo`800000B`3oool00`000000oooo0?ooo`280?ooo`030000003oool0oooo00<0oooo
000M0?ooo`030000003oool0oooo0;40oooo00<000000?ooo`3oool0C03oool00`000000oooo0?oo
o`270?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0680oooo00<00000
0?ooo`3oool0803oool00`000000oooo0?ooo`0W0?ooo`800000C`3oool00`000000oooo0?ooo`0[
0?ooo`030000003oool0oooo05T0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?oo
o`3oool0H@3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo02H0oooo0P00001A0?oo
o`030000003oool0oooo02/0oooo00<000000?ooo`3oool09P3oool00`000000oooo0?ooo`0`0?oo
o`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0600oooo00<000000?ooo`3o
ool0B@3oool00`000000oooo0?ooo`1A0?ooo`030000003oool0oooo05@0oooo00<000000?ooo`3o
ool0<03oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1P0?ooo`030000
003oool0oooo04L0oooo0P00001D0?ooo`030000003oool0oooo05<0oooo00<000000?ooo`3oool0
<@3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1O0?ooo`030000003o
ool0oooo01l0oooo00<000000?ooo`3oool0903oool2000005H0oooo00<000000?ooo`3oool0D`3o
ool00`000000oooo0?ooo`0a0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0
oooo05h0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0S0?ooo`800000F@3oool0
0`000000oooo0?ooo`0X0?ooo`030000003oool0oooo02H0oooo00<000000?ooo`3oool0<P3oool0
0`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1M0?ooo`030000003oool0oooo
04D0oooo00<000000?ooo`3oool0F@3oool00`000000oooo0?ooo`0X0?ooo`030000003oool0oooo
02H0oooo00<000000?ooo`3oool0<P3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000
oooo0?ooo`2T0?ooo`030000003oool0oooo05X0oooo00<000000?ooo`3oool0:03oool00`000000
oooo0?ooo`0U0?ooo`030000003oool0oooo03<0oooo00<000000?ooo`3oool00`3oool001d0oooo
0`00001m0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool0F`3oool00`000000oooo
0?ooo`1@0?ooo`030000003oool0oooo0340oooo0`0000050?ooo`007@3oool00`000000oooo0?oo
o`1m0?ooo`030000003oool0oooo0280oooo00<000000?ooo`3oool0G03oool00`000000oooo0?oo
o`260?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo05/0oooo00<00000
0?ooo`3oool07P3oool00`000000oooo0?ooo`0R0?ooo`030000003oool0oooo05d0oooo00<00000
0?ooo`3oool0QP3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1J0?oo
o`030000003oool0oooo04<0oooo00<000000?ooo`3oool0GP3oool00`000000oooo0?ooo`0W0?oo
o`030000003oool0oooo05`0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3o
ool0FP3oool00`000000oooo0?ooo`120?ooo`030000003oool0oooo0600oooo00<000000?ooo`3o
ool09P3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo03D0oooo00<000000?ooo`3o
ool00`3oool001d0oooo00<000000?ooo`3oool0F@3oool00`000000oooo0?ooo`0N0?ooo`030000
003oool0oooo0240oooo00<000000?ooo`3oool0H@3oool00`000000oooo0?ooo`0U0?ooo`030000
003oool0oooo02@0oooo00<000000?ooo`3oool0=P3oool00`000000oooo0?ooo`030?ooo`007@3o
ool00`000000oooo0?ooo`1H0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool0803o
ool00`000000oooo0?ooo`1R0?ooo`030000003oool0oooo04`0oooo00<000000?ooo`3oool0=P3o
ool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1i0?ooo`030000003oool0
oooo0200oooo00<000000?ooo`3oool0H`3oool00`000000oooo0?ooo`1;0?ooo`030000003oool0
oooo03L0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0V`3oool00`00
0000oooo0?ooo`1T0?ooo`030000003oool0oooo04/0oooo00<000000?ooo`3oool0=`3oool00`00
0000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1F0?ooo`030000003oool0oooo0480
oooo00<000000?ooo`3oool0H`3oool00`000000oooo0?ooo`0U0?ooo`030000003oool0oooo05h0
oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0EP3oool00`000000oooo
0?ooo`0M0?ooo`030000003oool0oooo0240oooo00<000000?ooo`3oool0I03oool00`000000oooo
0?ooo`0T0?ooo`030000003oool0oooo05l0oooo00<000000?ooo`3oool00`3oool001d0oooo00<0
00000?ooo`3oool0E@3oool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo0200oooo00<0
00000?ooo`3oool0I03oool00`000000oooo0?ooo`270?ooo`030000003oool0oooo00<0oooo000M
0?ooo`030000003oool0oooo05D0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`0O
0?ooo`030000003oool0oooo06D0oooo00<000000?ooo`3oool0BP3oool00`000000oooo0?ooo`0j
0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo05@0oooo00<000000?oo
o`3oool0@@3oool00`000000oooo0?ooo`1T0?ooo`030000003oool0oooo04X0oooo00<000000?oo
o`3oool0>`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1D0?ooo`03
0000003oool0oooo0400oooo00<000000?ooo`3oool0I@3oool00`000000oooo0?ooo`0T0?ooo`03
0000003oool0oooo02<0oooo00<000000?ooo`3oool0>`3oool00`000000oooo0?ooo`030?ooo`00
7@3oool00`000000oooo0?ooo`1C0?ooo`030000003oool0oooo0400oooo00<000000?ooo`3oool0
I@3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool0
?03oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1C0?ooo`030000003o
ool0oooo01d0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`1V0?ooo`030000003o
ool0oooo04T0oooo00<000000?ooo`3oool0?@3oool00`000000oooo0?ooo`030?ooo`007@3oool0
0`000000oooo0?ooo`1c0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool0IP3oool0
0`000000oooo0?ooo`190?ooo`030000003oool0oooo03d0oooo00<000000?ooo`3oool00`3oool0
01d0oooo00<000000?ooo`3oool0U03oool00`000000oooo0?ooo`1V0?ooo`030000003oool0oooo
04T0oooo00<000000?ooo`3oool0?P3oool00`000000oooo0?ooo`030?ooo`007@3oool3000009<0
oooo00<000000?ooo`3oool0I`3oool00`000000oooo0?ooo`0R0?ooo`030000003oool0oooo06<0
oooo0`0000050?ooo`007@3oool00`000000oooo0?ooo`1A0?ooo`030000003oool0oooo03h0oooo
00<000000?ooo`3oool0I`3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo06D0oooo
00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0D@3oool00`000000oooo0?oo
o`0M0?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3oool0I`3oool00`000000oooo0?oo
o`2;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0500oooo00<00000
0?ooo`3oool07@3oool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo06L0oooo00<00000
0?ooo`3oool0B@3oool00`000000oooo0?ooo`100?ooo`030000003oool0oooo00<0oooo000M0?oo
o`030000003oool0oooo0500oooo00<000000?ooo`3oool0?@3oool00`000000oooo0?ooo`1X0?oo
o`030000003oool0oooo04P0oooo00<000000?ooo`3oool0@@3oool00`000000oooo0?ooo`030?oo
o`007@3oool00`000000oooo0?ooo`1?0?ooo`030000003oool0oooo03h0oooo00<000000?ooo`3o
ool0I`3oool00`000000oooo0?ooo`0R0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3o
ool0@P3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`2?0?ooo`030000
003oool0oooo06P0oooo00<000000?ooo`3oool08P3oool00`000000oooo0?ooo`0R0?ooo`030000
003oool0oooo04<0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0KP3o
ool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo06L0oooo00<000000?ooo`3oool0SP3o
ool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1]0?ooo`030000003oool0
oooo01h0oooo00<000000?ooo`3oool0J03oool00`000000oooo0?ooo`2>0?ooo`030000003oool0
oooo00<0oooo000M0?ooo`030000003oool0oooo04d0oooo00<000000?ooo`3oool0?@3oool00`00
0000oooo0?ooo`1Y0?ooo`030000003oool0oooo08h0oooo00<000000?ooo`3oool00`3oool001d0
oooo00<000000?ooo`3oool0C@3oool00`000000oooo0?ooo`0m0?ooo`030000003oool0oooo06P0
oooo00<000000?ooo`3oool08@3oool00`000000oooo0?ooo`0R0?ooo`030000003oool0oooo04H0
oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0C@3oool00`000000oooo
0?ooo`0l0?ooo`030000003oool0oooo06T0oooo00<000000?ooo`3oool0803oool00`000000oooo
0?ooo`0R0?ooo`030000003oool0oooo04L0oooo00<000000?ooo`3oool00`3oool001d0oooo00<0
00000?ooo`3oool0C03oool00`000000oooo0?ooo`0m0?ooo`030000003oool0oooo06P0oooo00<0
00000?ooo`3oool0AP3oool00`000000oooo0?ooo`170?ooo`030000003oool0oooo00<0oooo000M
0?ooo`030000003oool0oooo04`0oooo00<000000?ooo`3oool0703oool00`000000oooo0?ooo`0M
0?ooo`030000003oool0oooo06T0oooo00<000000?ooo`3oool0A@3oool00`000000oooo0?ooo`18
0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo04`0oooo00<000000?oo
o`3oool06`3oool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo06P0oooo00<000000?oo
o`3oool0A@3oool00`000000oooo0?ooo`190?ooo`030000003oool0oooo00<0oooo000M0?ooo`03
0000003oool0oooo04`0oooo00<000000?ooo`3oool0>`3oool00`000000oooo0?ooo`1Y0?ooo`03
0000003oool0oooo0200oooo00<000000?ooo`3oool08P3oool00`000000oooo0?ooo`190?ooo`03
0000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo04/0oooo00<000000?ooo`3oool0
?03oool00`000000oooo0?ooo`1X0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool0
8P3oool00`000000oooo0?ooo`1:0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003o
ool0oooo04/0oooo00<000000?ooo`3oool0>`3oool00`000000oooo0?ooo`1Y0?ooo`030000003o
ool0oooo0980oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0J@3oool0
0`000000oooo0?ooo`0M0?ooo`030000003oool0oooo06P0oooo00<000000?ooo`3oool0T`3oool0
0`000000oooo0?ooo`030?ooo`007@3oool3000006P0oooo00<000000?ooo`3oool07@3oool00`00
0000oooo0?ooo`1X0?ooo`030000003oool0oooo0980oooo0`0000050?ooo`007@3oool00`000000
oooo0?ooo`270?ooo`030000003oool0oooo06T0oooo00<000000?ooo`3oool0803oool00`000000
oooo0?ooo`0Q0?ooo`030000003oool0oooo04d0oooo00<000000?ooo`3oool00`3oool001d0oooo
00<000000?ooo`3oool0B@3oool00`000000oooo0?ooo`0k0?ooo`030000003oool0oooo06P0oooo
00<000000?ooo`3oool0803oool00`000000oooo0?ooo`0Q0?ooo`030000003oool0oooo04h0oooo
00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0B@3oool00`000000oooo0?oo
o`0j0?ooo`030000003oool0oooo06P0oooo00<000000?ooo`3oool0A03oool00`000000oooo0?oo
o`1?0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo04T0oooo00<00000
0?ooo`3oool0>P3oool00`000000oooo0?ooo`1W0?ooo`030000003oool0oooo04@0oooo00<00000
0?ooo`3oool0D03oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`180?oo
o`030000003oool0oooo01/0oooo00<000000?ooo`3oool0703oool00`000000oooo0?ooo`1X0?oo
o`030000003oool0oooo09L0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3o
ool0B03oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo01`0oooo00<000000?ooo`3o
ool0I`3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo07D0oooo00<000000?ooo`3o
ool00`3oool001d0oooo00<000000?ooo`3oool0Q03oool00`000000oooo0?ooo`1W0?ooo`030000
003oool0oooo0200oooo00<000000?ooo`3oool0MP3oool00`000000oooo0?ooo`030?ooo`007@3o
ool00`000000oooo0?ooo`240?ooo`030000003oool0oooo06L0oooo00<000000?ooo`3oool0A03o
ool00`000000oooo0?ooo`1B0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0
oooo08<0oooo00<000000?ooo`3oool0I`3oool00`000000oooo0?ooo`140?ooo`030000003oool0
oooo05<0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0AP3oool00`00
0000oooo0?ooo`0K0?ooo`030000003oool0oooo01`0oooo00<000000?ooo`3oool0IP3oool00`00
0000oooo0?ooo`140?ooo`030000003oool0oooo05@0oooo00<000000?ooo`3oool00`3oool001d0
oooo00<000000?ooo`3oool0AP3oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo01/0
oooo00<000000?ooo`3oool0I`3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo0240
oooo00<000000?ooo`3oool0E03oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo
0?ooo`150?ooo`030000003oool0oooo01`0oooo00<000000?ooo`3oool06`3oool00`000000oooo
0?ooo`1V0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool08@3oool00`000000oooo
0?ooo`1E0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo04D0oooo00<0
00000?ooo`3oool0>P3oool00`000000oooo0?ooo`1V0?ooo`030000003oool0oooo04<0oooo00<0
00000?ooo`3oool0EP3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`15
0?ooo`030000003oool0oooo03T0oooo00<000000?ooo`3oool0IP3oool00`000000oooo0?ooo`13
0?ooo`030000003oool0oooo05L0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?oo
o`3oool0A@3oool00`000000oooo0?ooo`0i0?ooo`030000003oool0oooo06H0oooo00<000000?oo
o`3oool0W@3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`140?ooo`03
0000003oool0oooo01/0oooo00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`1V0?ooo`03
0000003oool0oooo0200oooo00<000000?ooo`3oool0N`3oool00`000000oooo0?ooo`030?ooo`00
3`3oool5000000T0oooo00<000000?ooo`3oool0A03oool00`000000oooo0?ooo`0J0?ooo`030000
003oool0oooo01`0oooo00<000000?ooo`3oool0I@3oool00`000000oooo0?ooo`0P0?ooo`030000
003oool0oooo07`0oooo00<000000?ooo`3oool00`3oool00140oooo00<000000?ooo`3oool02@3o
ool00`000000oooo0?ooo`200?ooo`030000003oool0oooo06D0oooo00<000000?ooo`3oool0@`3o
ool00`000000oooo0?ooo`1I0?ooo`030000003oool0oooo00<0oooo000A0?ooo`030000003oool0
oooo00T0oooo1000001n0?ooo`030000003oool0oooo06D0oooo00<000000?ooo`3oool0@`3oool0
0`000000oooo0?ooo`1G0?ooo`@000001@3oool00140oooo00<000000?ooo`3oool02@3oool00`00
0000oooo0?ooo`1o0?ooo`030000003oool0oooo06D0oooo00<000000?ooo`3oool0@P3oool00`00
0000oooo0?ooo`1K0?ooo`030000003oool0oooo00<0oooo000A0?ooo`030000003oool0oooo00T0
oooo00<000000?ooo`3oool0H03oool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo06@0
oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo05`0
oooo00<000000?ooo`3oool00`3oool00140oooo00<000000?ooo`3oool02@3oool00`000000oooo
0?ooo`120?ooo`030000003oool0oooo01/0oooo00<000000?ooo`3oool06`3oool00`000000oooo
0?ooo`1T0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool0O`3oool00`000000oooo
0?ooo`030?ooo`004@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo0480oooo00<0
00000?ooo`3oool06P3oool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo06@0oooo00<0
00000?ooo`3oool0XP3oool00`000000oooo0?ooo`030?ooo`004@3oool00`000000oooo0?ooo`09
0?ooo`030000003oool0oooo0440oooo00<000000?ooo`3oool0>@3oool00`000000oooo0?ooo`1T
0?ooo`030000003oool0oooo0:<0oooo00<000000?ooo`3oool00`3oool00140oooo00<000000?oo
o`3oool02@3oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo03T0oooo00<000000?oo
o`3oool0I03oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo05l0oooo00<000000?oo
o`3oool00`3oool000l0oooo0`00000;0?ooo`030000003oool0oooo0440oooo00<000000?ooo`3o
ool0>@3oool00`000000oooo0?ooo`1S0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3o
ool07`3oool00`000000oooo0?ooo`1P0?ooo`030000003oool0oooo00<0oooo000A0?ooo`030000
003oool0oooo00T0oooo00<000000?ooo`3oool0GP3oool00`000000oooo0?ooo`0K0?ooo`030000
003oool0oooo06@0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0O0?ooo`030000
003oool0oooo0600oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0G@3o
ool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo06<0oooo00<000000?ooo`3oool07`3o
ool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo0640oooo00<000000?ooo`3oool00`3o
ool001d0oooo00<000000?ooo`3oool0N`3oool00`000000oooo0?ooo`1S0?ooo`030000003oool0
oooo0440oooo00<000000?ooo`3oool0HP3oool00`000000oooo0?ooo`030?ooo`007@3oool00`00
0000oooo0?ooo`0o0?ooo`030000003oool0oooo03T0oooo00<000000?ooo`3oool0HP3oool00`00
0000oooo0?ooo`120?ooo`030000003oool0oooo0680oooo00<000000?ooo`3oool00`3oool001d0
oooo00<000000?ooo`3oool0?`3oool00`000000oooo0?ooo`0h0?ooo`030000003oool0oooo06<0
oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo06<0
oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0?P3oool00`000000oooo
0?ooo`0i0?ooo`030000003oool0oooo0680oooo00<000000?ooo`3oool0803oool00`000000oooo
0?ooo`250?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo03h0oooo00<0
00000?ooo`3oool06`3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo06<0oooo00<0
00000?ooo`3oool07`3oool00`000000oooo0?ooo`260?ooo`030000003oool0oooo00<0oooo000M
0?ooo`030000003oool0oooo03h0oooo00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`0K
0?ooo`030000003oool0oooo0680oooo00<000000?ooo`3oool0Z@3oool00`000000oooo0?ooo`03
0?ooo`007@3oool00`000000oooo0?ooo`0n0?ooo`030000003oool0oooo03P0oooo00<000000?oo
o`3oool0HP3oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo06D0oooo00<000000?oo
o`3oool00`3oool001d0oooo00<000000?ooo`3oool0?@3oool00`000000oooo0?ooo`0h0?ooo`03
0000003oool0oooo0680oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0O0?ooo`03
0000003oool0oooo06H0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0
?@3oool00`000000oooo0?ooo`0h0?ooo`030000003oool0oooo0680oooo00<000000?ooo`3oool0
7`3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo06H0oooo00<000000?ooo`3oool0
0`3oool001d0oooo0`00001J0?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool0HP3o
ool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool0I@3o
ool3000000D0oooo000M0?ooo`030000003oool0oooo05X0oooo00<000000?ooo`3oool06P3oool0
0`000000oooo0?ooo`1R0?ooo`030000003oool0oooo0400oooo00<000000?ooo`3oool0J03oool0
0`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1I0?ooo`030000003oool0oooo
01/0oooo00<000000?ooo`3oool0H@3oool00`000000oooo0?ooo`2/0?ooo`030000003oool0oooo
00<0oooo000M0?ooo`030000003oool0oooo07H0oooo00<000000?ooo`3oool0H@3oool00`000000
oooo0?ooo`2]0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo03`0oooo
00<000000?ooo`3oool0=`3oool00`000000oooo0?ooo`1Q0?ooo`030000003oool0oooo01l0oooo
00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`1Z0?ooo`030000003oool0oooo00<0oooo
000M0?ooo`030000003oool0oooo03`0oooo00<000000?ooo`3oool0=P3oool00`000000oooo0?oo
o`1Q0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?oo
o`1[0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo03/0oooo00<00000
0?ooo`3oool06P3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo0640oooo00<00000
0?ooo`3oool0@03oool00`000000oooo0?ooo`1[0?ooo`030000003oool0oooo00<0oooo000M0?oo
o`030000003oool0oooo03/0oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`0K0?oo
o`030000003oool0oooo0600oooo00<000000?ooo`3oool0@03oool00`000000oooo0?ooo`1/0?oo
o`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo03X0oooo00<000000?ooo`3o
ool0=`3oool00`000000oooo0?ooo`1Q0?ooo`030000003oool0oooo0400oooo00<000000?ooo`3o
ool0K03oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1d0?ooo`030000
003oool0oooo0600oooo00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`0O0?ooo`030000
003oool0oooo06d0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0L`3o
ool00`000000oooo0?ooo`1Q0?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3oool07`3o
ool00`000000oooo0?ooo`1]0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0
oooo07<0oooo00<000000?ooo`3oool0H03oool00`000000oooo0?ooo`100?ooo`030000003oool0
oooo06h0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0>@3oool00`00
0000oooo0?ooo`0J0?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool0G`3oool00`00
0000oooo0?ooo`2b0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo03T0
oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo05l0
oooo00<000000?ooo`3oool0/P3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo
0?ooo`0h0?ooo`030000003oool0oooo03L0oooo00<000000?ooo`3oool0G`3oool00`000000oooo
0?ooo`0N0?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3oool0L@3oool00`000000oooo
0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0h0?ooo`030000003oool0oooo03L0oooo00<0
00000?ooo`3oool0G`3oool00`000000oooo0?ooo`0M0?ooo`030000003oool0oooo01l0oooo00<0
00000?ooo`3oool0L@3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0h
0?ooo`030000003oool0oooo03L0oooo00<000000?ooo`3oool0GP3oool00`000000oooo0?ooo`0o
0?ooo`030000003oool0oooo0780oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?oo
o`3oool0>03oool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo01/0oooo00<000000?oo
o`3oool0G@3oool00`000000oooo0?ooo`100?ooo`030000003oool0oooo0780oooo00<000000?oo
o`3oool00`3oool001d0oooo00<000000?ooo`3oool0=`3oool00`000000oooo0?ooo`0J0?ooo`03
0000003oool0oooo01X0oooo00<000000?ooo`3oool0GP3oool00`000000oooo0?ooo`0o0?ooo`03
0000003oool0oooo07<0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0
=`3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool0
G@3oool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo09D0oooo00<000000?ooo`3oool0
0`3oool001d0oooo0`00001a0?ooo`030000003oool0oooo05`0oooo00<000000?ooo`3oool07P3o
ool00`000000oooo0?ooo`2D0?ooo`<000001@3oool001d0oooo00<000000?ooo`3oool0L@3oool0
0`000000oooo0?ooo`1L0?ooo`030000003oool0oooo0;L0oooo00<000000?ooo`3oool00`3oool0
01d0oooo00<000000?ooo`3oool0L03oool00`000000oooo0?ooo`1L0?ooo`030000003oool0oooo
03l0oooo00<000000?ooo`3oool0MP3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000
oooo0?ooo`1C0?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool0G03oool00`000000
oooo0?ooo`0n0?ooo`030000003oool0oooo07L0oooo00<000000?ooo`3oool00`3oool001d0oooo
00<000000?ooo`3oool0=P3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo01X0oooo
00<000000?ooo`3oool0F`3oool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo01h0oooo
00<000000?ooo`3oool0M`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?oo
o`0f0?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3oool06`3oool00`000000oooo0?oo
o`1J0?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?oo
o`1h0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo03H0oooo00<00000
0?ooo`3oool0=P3oool00`000000oooo0?ooo`1K0?ooo`030000003oool0oooo03h0oooo00<00000
0?ooo`3oool0N@3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0e0?oo
o`030000003oool0oooo03L0oooo00<000000?ooo`3oool0FP3oool00`000000oooo0?ooo`0o0?oo
o`030000003oool0oooo07T0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3o
ool0=@3oool00`000000oooo0?ooo`0g0?ooo`030000003oool0oooo05X0oooo00<000000?ooo`3o
ool0?P3oool00`000000oooo0?ooo`1j0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000
003oool0oooo0540oooo00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`1I0?ooo`030000
003oool0oooo01d0oooo00<000000?ooo`3oool0W03oool00`000000oooo0?ooo`030?ooo`007@3o
ool00`000000oooo0?ooo`1A0?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool0F@3o
ool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo09`0oooo00<000000?ooo`3oool00`3o
ool001d0oooo00<000000?ooo`3oool0KP3oool00`000000oooo0?ooo`1I0?ooo`030000003oool0
oooo0;d0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0KP3oool00`00
0000oooo0?ooo`1H0?ooo`030000003oool0oooo03h0oooo00<000000?ooo`3oool0O@3oool00`00
0000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0d0?ooo`030000003oool0oooo03L0
oooo00<000000?ooo`3oool0E`3oool00`000000oooo0?ooo`0n0?ooo`030000003oool0oooo07h0
oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0=03oool00`000000oooo
0?ooo`0g0?ooo`030000003oool0oooo05H0oooo00<000000?ooo`3oool07P3oool00`000000oooo
0?ooo`0M0?ooo`030000003oool0oooo07l0oooo00<000000?ooo`3oool00`3oool001d0oooo00<0
00000?ooo`3oool0=03oool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo01`0oooo00<0
00000?ooo`3oool0E03oool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo01d0oooo00<0
00000?ooo`3oool0P03oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0d
0?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3oool0703oool00`000000oooo0?ooo`1C
0?ooo`030000003oool0oooo0<80oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?oo
o`3oool0=03oool00`000000oooo0?ooo`0h0?ooo`030000003oool0oooo0580oooo00<000000?oo
o`3oool0``3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0d0?ooo`03
0000003oool0oooo03P0oooo00<000000?ooo`3oool0D@3oool00`000000oooo0?ooo`0N0?ooo`03
0000003oool0oooo0:<0oooo00<000000?ooo`3oool00`3oool001d0oooo0`00000d0?ooo`030000
003oool0oooo03P0oooo00<000000?ooo`3oool0D03oool00`000000oooo0?ooo`0O0?ooo`030000
003oool0oooo01h0oooo00<000000?ooo`3oool0P03oool3000000D0oooo000M0?ooo`030000003o
ool0oooo03@0oooo00<000000?ooo`3oool0>@3oool00`000000oooo0?ooo`1>0?ooo`030000003o
ool0oooo01l0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`230?ooo`030000003o
ool0oooo00<0oooo000M0?ooo`030000003oool0oooo0500oooo00<000000?ooo`3oool07@3oool0
0`000000oooo0?ooo`1=0?ooo`030000003oool0oooo0400oooo00<000000?ooo`3oool0Q03oool0
0`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1@0?ooo`030000003oool0oooo
01d0oooo00<000000?ooo`3oool0C03oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo
08@0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0L03oool00`000000
oooo0?ooo`1;0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool07P3oool00`000000
oooo0?ooo`250?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0700oooo
00<000000?ooo`3oool0BP3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo01h0oooo
00<000000?ooo`3oool0QP3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?oo
o`0c0?ooo`030000003oool0oooo03/0oooo00<000000?ooo`3oool0B03oool00`000000oooo0?oo
o`110?ooo`030000003oool0oooo08L0oooo00<000000?ooo`3oool00`3oool001d0oooo00<00000
0?ooo`3oool0<`3oool00`000000oooo0?ooo`0k0?ooo`030000003oool0oooo04L0oooo00<00000
0?ooo`3oool0c03oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0c0?oo
o`030000003oool0oooo01X0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`160?oo
o`030000003oool0oooo0<d0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3o
ool0<`3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3o
ool0A@3oool00`000000oooo0?ooo`0Q0?ooo`030000003oool0oooo01d0oooo00<000000?ooo`3o
ool0RP3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0c0?ooo`030000
003oool0oooo03/0oooo00<000000?ooo`3oool0@`3oool2000002<0oooo00<000000?ooo`3oool0
7@3oool00`000000oooo0?ooo`2;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003o
ool0oooo0780oooo00<000000?ooo`3oool0@@3oool00`000000oooo0?ooo`130?ooo`030000003o
ool0oooo08/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0LP3oool0
0`000000oooo0?ooo`0o0?ooo`800000A@3oool00`000000oooo0?ooo`2<0?ooo`030000003oool0
oooo00<0oooo000M0?ooo`030000003oool0oooo0780oooo00<000000?ooo`3oool0?P3oool00`00
0000oooo0?ooo`0R0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool0S@3oool00`00
0000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0c0?ooo`030000003oool0oooo01X0
oooo00<000000?ooo`3oool0803oool00`000000oooo0?ooo`0k0?ooo`800000903oool00`000000
oooo0?ooo`2`0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo03<0oooo
00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`0Q0?ooo`800000>@3oool200000=T0oooo
00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0<`3oool00`000000oooo0?oo
o`100?ooo`030000003oool0oooo03@0oooo0P0000180?ooo`030000003oool0oooo0900oooo00<0
00000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0<`3oool00`000000oooo0?ooo`11
0?ooo`030000003oool0oooo0380oooo00<000000?ooo`3oool09@3oool00`000000oooo0?ooo`0P
0?ooo`030000003oool0oooo0900oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?oo
o`3oool0=03oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo02l0oooo0P00000W0?oo
o`030000003oool0oooo0200oooo00<000000?ooo`3oool0T@3oool00`000000oooo0?ooo`030?oo
o`007@3oool3000003@0oooo00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`0T0?ooo`03
0000003oool0oooo02`0oooo0P00001:0?ooo`800000TP3oool3000000D0oooo000M0?ooo`030000
003oool0oooo03@0oooo00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`0U0?ooo`800000
:P3oool2000004/0oooo00<000000?ooo`3oool0U03oool00`000000oooo0?ooo`030?ooo`007@3o
ool00`000000oooo0?ooo`0d0?ooo`030000003oool0oooo01/0oooo00<000000?ooo`3oool09`3o
ool00`000000oooo0?ooo`0T0?ooo`<00000:P3oool00`000000oooo0?ooo`0O0?ooo`030000003o
ool0oooo09D0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0=03oool0
0`000000oooo0?ooo`160?ooo`@000007@3oool5000002`0oooo00<000000?ooo`3oool0^03oool0
0`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`210?ooo`L000004@3oool50000
0>`0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0R03oool6000000H0
oooo1@00001F0?ooo`030000003oool0oooo09P0oooo00<000000?ooo`3oool00`3oool001d0oooo
00<000000?ooo`3oool0E03oool00`000000oooo0?ooo`0g0?ooo`H00000=`3oool00`000000oooo
0?ooo`0O0?ooo`800000V`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?oo
o`0e0?ooo`030000003oool0oooo01`0oooo00<000000?ooo`3oool0L`3oool00`000000oooo0?oo
o`0O0?ooo`030000003oool0oooo09/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<00000
0?ooo`3oool0=@3oool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo09@0oooo00<00000
0?ooo`3oool0W03oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0e0?oo
o`030000003oool0oooo08h0oooo00<000000?ooo`3oool0`@3oool00`000000oooo0?ooo`030?oo
o`007@3oool00`000000oooo0?ooo`0f0?ooo`030000003oool0oooo08`0oooo00<000000?ooo`3o
ool0`P3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`0f0?ooo`030000
003oool0oooo0:l0oooo00<000000?ooo`3oool0W`3oool00`000000oooo0?ooo`030?ooo`007@3o
ool00`000000oooo0?ooo`0f0?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3oool0I`3o
ool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo0:00oooo00<000000?ooo`3oool00`3o
ool001d0oooo00<000000?ooo`3oool0E`3oool00`000000oooo0?ooo`1V0?ooo`030000003oool0
oooo02<0oooo00<000000?ooo`3oool0X@3oool00`000000oooo0?ooo`030?ooo`007@3oool00`00
0000oooo0?ooo`3U0?ooo`030000003oool0oooo0:80oooo00<000000?ooo`3oool00`3oool001d0
oooo00<000000?ooo`3oool0^`3oool2000002H0oooo0P00002U0?ooo`030000003oool0oooo00<0
oooo00040?ooo`D000000`3oool00`000000oooo0?ooo`05000000T0oooo00<000000?ooo`3oool0
>03oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo05`0oooo00<000000?ooo`3oool0
9@3oool00`000000oooo0?ooo`2U0?ooo`030000003oool0oooo00<0oooo00060?ooo`030000003o
ool0oooo00<0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`090?ooo`030000003o
ool0oooo03T0oooo00<000000?ooo`3oool0803oool00`000000oooo0?ooo`3o0?ooob`0oooo00<0
00000?ooo`3oool00`3oool000H0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`09
0?ooo`030000003oool0oooo03T0oooo00<000000?ooo`3oool0NP3oool00`000000oooo0?ooo`0U
0?ooo`030000003oool0oooo0:T0oooo00<000000?ooo`3oool00`3oool000H0oooo00<000000?oo
o`3oool0203oool00`000000oooo0?ooo`090?ooo`@00000>@3oool00`000000oooo0?ooo`0R0?oo
o`800000E03oool00`000000oooo0?ooo`0U0?ooo`030000003oool0oooo0:L0oooo100000050?oo
o`001P3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3o
ool0>`3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo04`0oooo0P00000Z0?ooo`03
0000003oool0oooo0:/0oooo00<000000?ooo`3oool00`3oool000H0oooo00<000000?ooo`3oool0
203oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo03/0oooo00<000000?ooo`3oool0
L@3oool00`000000oooo0?ooo`0Y0?ooo`030000003oool0oooo0:`0oooo00<000000?ooo`3oool0
0`3oool000H0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`090?ooo`030000003o
ool0oooo03`0oooo00<000000?ooo`3oool0o`3ooom<0?ooo`030000003oool0oooo00<0oooo0006
0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`1T
0?ooo`030000003oool0oooo04<0oooo0P00000[0?ooo`030000003oool0oooo0;00oooo00<00000
0?ooo`3oool00`3oool000H0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`090?oo
o`030000003oool0oooo06D0oooo00<000000?ooo`3oool0K@3oool200000;<0oooo00<000000?oo
o`3oool00`3oool000@0oooo0`0000080?ooo`<000002`3oool00`000000oooo0?ooo`2T0?ooo`<0
0000;03oool200000;D0oooo00<000000?ooo`3oool00`3oool000H0oooo00<000000?ooo`3oool0
203oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo03l0oooo00<000000?ooo`3oool0
G@3oool200000300oooo0P00002g0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003o
ool0oooo0400oooo00<000000?ooo`3oool09P3oool2000003<0oooo00<000000?ooo`3oool0;`3o
ool00`000000oooo0?ooo`2g0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0
oooo0400oooo00<000000?ooo`3oool0;03oool2000002P0oooo0P00003_0?ooo`030000003oool0
oooo00<0oooo000M0?ooo`030000003oool0oooo0440oooo00<000000?ooo`3oool0<@3oool20000
01`0oooo0P00003e0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo07/0
oooo0P0000040?ooo`800000103oool2000000@0oooo0P00000l0?ooo`<00000_03oool00`000000
oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`380?ooo`<00000_`3oool00`000000oooo
0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`150?ooo`030000003oool0oooo0?l0oooo@`3o
ool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`160?ooo`030000003oool0
oooo07/0oooo00<000000?ooo`3oool0``3oool00`000000oooo0?ooo`030?ooo`007@3oool00`00
0000oooo0?ooo`160?ooo`800000NP3oool200000<H0oooo00<000000?ooo`3oool00`3oool001d0
oooo00<000000?ooo`3oool0B03oool2000007D0oooo0`0000380?ooo`030000003oool0oooo00<0
oooo000M0?ooo`030000003oool0oooo04X0oooo0P00001a0?ooo`800000b`3oool00`000000oooo
0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3o
ool001d0oooo0`00002g0?ooo`<00000cP3oool3000000D0oooo000M0?ooo`030000003oool0oooo
04l0oooo0P00001T0?ooo`800000d`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000
oooo0?ooo`1A0?ooo`800000o`3ooolh0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000
003oool0oooo05<0oooo00<000000?ooo`3oool0F@3oool300000=P0oooo00<000000?ooo`3oool0
0`3oool001d0oooo00<000000?ooo`3oool0Z`3oool400000=/0oooo00<000000?ooo`3oool00`3o
ool001d0oooo00<000000?ooo`3oool0E`3oool4000004h0oooo0P00003O0?ooo`030000003oool0
oooo00<0oooo000M0?ooo`030000003oool0oooo05/0oooo100000140?ooo`<00000i03oool00`00
0000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`2Q0?ooo`800000i`3oool00`000000
oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`1R0?ooo`<00000=03oool400000>d0oooo
00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0I@3oool3000002d0oooo1000
003a0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo06/0oooo2@000003
0?ooo`<000002P3oool5000000<0oooo1P00003h0?ooo`030000003oool0oooo00<0oooo000M0?oo
o`030000003oool0oooo07X0oooo0`0000030?ooo`@00000o`3oool70?ooo`030000003oool0oooo
00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`00
7@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<0
00000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0
oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oo
oh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`03
0000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo
0?ooo`030?ooo`007@3oool300000?l0ooooR@3oool3000000D0oooo000M0?ooo`030000003oool0
oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oo
oh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`03
0000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo
0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3o
ool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?oo
o`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000
oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0
o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3o
ool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<00000
0?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo
00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`00
7@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<0
00000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0
oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oo
oh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`03
0000003oool0oooo00<0oooo000M0?ooo`<00000o`3ooon90?ooo`<000001@3oool001d0oooo00<0
00000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0
oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oo
oh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`03
0000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo
0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3o
ool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?oo
o`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000
oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0
o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3o
ool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<00000
0?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo
00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`00
7@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<0
00000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0
oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oo
oh/0oooo00<000000?ooo`3oool00`3oool001d0oooo0`00003o0?ooohT0oooo0`0000050?ooo`00
7@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<0
00000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0
oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oo
oh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`03
0000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo
0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3o
ool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?oo
o`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`007@3oool00`000000
oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0
o`3ooon;0?ooo`030000003oool0oooo00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3o
ool00`000000oooo0?ooo`030?ooo`007@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<00000
0?ooo`3oool00`3oool001d0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003oool0oooo
00<0oooo000M0?ooo`030000003oool0oooo0?l0ooooR`3oool00`000000oooo0?ooo`030?ooo`00
7@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool000@0oooo1@00
00030?ooo`030000003oool0000000D000002@3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<0
00000?ooo`3oool00`3oool000H0oooo00<000000?ooo`3oool00`3oool010000000oooo00000000
00030?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0o`3ooon;0?ooo`030000003o
ool0oooo00<0oooo00060?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool02`3oool4
00000?l0ooooQ`3oool4000000D0oooo00060?ooo`030000003oool0oooo00L0oooo00<000000?oo
o`3oool02P3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool000H0
oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo0?l0
ooooR`3oool00`000000oooo0?ooo`030?ooo`001P3oool00`000000oooo0?ooo`080?ooo`800000
2P3oool00`000000oooo0?ooo`3o0?oooh/0oooo00<000000?ooo`3oool00`3oool000H0oooo00<0
00000?ooo`3oool02@3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo0?l0ooooR`3o
ool00`000000oooo0?ooo`030?ooo`001P3oool00`000000oooo0?ooo`090?ooo`030000003oool0
oooo00P0oooo00<000000?ooo`3oool09`3oool00`000000oooo0?ooo`130?ooo`030000003oool0
oooo0480oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`130?ooo`030000003oool0
oooo0480oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`030?ooo`001P3oool00`00
0000oooo0?ooo`050?ooo`050000003oool0oooo0?ooo`0000002P3oool00`000000oooo0?ooo`05
0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0?
0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0?
0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0?
0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0?
0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0?
0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0?
0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0?
0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`03
0?ooo`00103oool3000000L0oooo0P0000000`3oool000000000000:0?ooo`030000003oool0oooo
00D0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo
00l0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo
00l0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo
00l0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo
00l0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo
00l0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo
00l0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo
00l0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo
00<0oooo00060?ooo`030000003oool0oooo00H0oooo0`00000;0?ooool00000S`0000050?ooo`00
o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00
o`3ooona0?ooo`00\
\>"],
  ImageRangeCache->{{{0, 431}, {431, 0}} -> {0.392291, 0.763022, 0.00432743, \
0.00157361}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  ContourGraphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  "Calculating ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "with systematics and correlations: \nThe Minimizers ",
  StyleBox["ChiTheta",
    FontFamily->"Courier"],
  " and ",
  StyleBox["ChiDelta",
    FontFamily->"Courier"]
}], "Section"],

Cell[TextData[{
  "The minimizers ",
  StyleBox["ChiThet",
    FontFamily->"Courier"],
  StyleBox["a",
    FontFamily->"Courier"],
  " and ",
  StyleBox["ChiDelta",
    FontFamily->"Courier"],
  " are especially designed to calculate the ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  " function for ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  " and \[Delta], respectively, including systematics and multi-parameter \
correlations. In order to be fast, they are using a minimizor to find the \
minimum ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "with respect to all priors with the possibility to add external \
information, i.e., to limit certain quantities by adding a Gaussian",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  " (cf., appendix of hep-ph/0205352) .  However, such a method cannot run \
completely independently, i.e., needs external expert knowledge about the \
general contour topology.  The minimization algorithm will usually find the \
correct minimum, but in special cases it jumps do a different contour. This \
can be normally seen in discontinuities in the ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "function. In order to understand these, it is important to know the \
general structure of the underlying parameter space. In comparison to a grid \
based method, which could not handle so many parameters including systematics \
and correlations, this algorithm does therefore not run completely \
independently without expert knowledge!"
}], "Text"],

Cell[TextData[{
  "Before one uses these functions, one should spend some time to incorporate \
the general method of the minimization algorithm. For example, let us take a \
look at the last figure. Let's say we are interested in ",
  Cell[BoxData[
      \(TraditionalForm\`\(sin\^2\)(2  \[Theta]\_13)\)]],
  ", represented by the horizontal axis in this figure, and want to calculate \
the ",
  Cell[BoxData[
      \(TraditionalForm\`\(\[Chi]\^2\)(\(sin\^2\)(2  \[Theta]\_13))\)]],
  " including the two-parameter correlation with ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)]],
  ", represented by the vertical axis. For each individual value on the \
horizontal axis, the minimizor then needs to be set to a starting point and \
will run into the next local minimum parallel to the vertical axis, i.e., we \
calculate Min[",
  Cell[BoxData[
      \(TraditionalForm\`\(\[Chi]\^2\)(\(sin\^2\)(2  \[Theta]\_13))\)]],
  "] with respect to ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)]],
  ". With some imagination, one can easily see that such a method will \
succeed for one parameter as long as the starting value is chosen \
appropriately and the topology is, at least, approximately known. What ",
  StyleBox["ChiThet",
    FontFamily->"Courier"],
  StyleBox["a",
    FontFamily->"Courier"],
  " actually does, is minimzing with respect to",
  StyleBox[" all",
    FontSlant->"Italic"],
  " parameters and systematics priors, excluding ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  " itself, of course.  ",
  StyleBox["ChiDelta",
    FontFamily->"Courier"],
  " is the corresponding function for minimizing with respect to \[Delta]. \n\
\nAs a first step, before ",
  StyleBox["each",
    FontSlant->"Italic"],
  " minimum finder run, the parameters should be res-set to their starting \
values, i.e., ",
  StyleBox["SetVacuumParameters",
    FontFamily->"Courier"],
  ", ",
  StyleBox["SetMasses",
    FontFamily->"Courier"],
  ",  ",
  StyleBox["SetDensity, ",
    FontFamily->"Courier"],
  "and ",
  StyleBox["SetRates ",
    FontFamily->"Courier"],
  "have to be called! Before ",
  StyleBox["any",
    FontSlant->"Italic"],
  " run, i.e., at least once before any run, ",
  StyleBox["SetInputErrorsSet",
    FontFamily->"Courier"],
  " and ",
  StyleBox["StartingValues",
    FontFamily->"Courier"],
  " have to be called (see below)."
}], "Text"],

Cell[TextData[{
  "Before we can use the minimizors, we need to tell the software what values \
for the external errors/input we assume. Especially, the KamLAND results for \
the solar parameters and the matter density uncertainty can be treated this \
way, but also other parameters can be fixed to their central values if one \
does not want to minimize with respect to them, i.e., does not want to take \
into account the respective correlation. The following function needs as \
arguments the absolute precisions of externally measured quantities in the \
order ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)],
    FontWeight->"Bold"],
  StyleBox[", \[Delta], ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_21\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_31\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", \[Rho].",
    FontWeight->"Bold"],
  "  If one does not want to constraint one quantity, one should set it to a \
sufficiently large value. Note that the density uncertainty must be set by \
this function:"
}], "Text"],

Cell[BoxData[
    \(\(SetInputErrors[N[10], N[10], N[10], N[RescaledSMD\ 0.15], N[1], 
        N[DENSITY*0.05]];\)\)], "Input"],

Cell[TextData[{
  "This function call does not constrain ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)]],
  ", \[Delta], and ",
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_31\%2\),
        "Text",
        FontFamily->"Times"]]],
  "because of sufficiently large values. The product ",
  Cell[BoxData[
      \(TraditionalForm\`\(sin(
          2  \[Theta]\_12)\)\[Times]\[CapitalDelta]m\_21\%2\)]],
  "is assumed to be measured with a 15% precision by the KamLAND input and \
the average density of the Earth's matter density profile is assumed to be \
known with 5% precision. \n\nAs a next step, the minimzor needs to be told \
the starting values for the externally constrained quantities. These  are \
normally set to the best fit values. The following call sets the starting \
values to the best-fit values used above, i.e., ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)],
    FontWeight->"Bold"],
  StyleBox[", \[Delta], ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_21\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_31\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", and \[Rho]",
    FontWeight->"Bold"],
  ":"
}], "Text"],

Cell[BoxData[
    \(\(SetStartingValues[ArcSin[Sqrt[0.01]]/2, N[\[Pi]/4], N[0], 
        N[RescaledSMD], N[3.0*10^\(-3\)], DENSITY];\)\)], "Input"],

Cell[TextData[{
  "The actual minimization is then performed by but the algorithm ",
  StyleBox["ChiThet",
    FontFamily->"Courier"],
  StyleBox["a",
    FontFamily->"Courier"],
  " or ",
  StyleBox["ChiDelta",
    FontFamily->"Courier"],
  ". They are called with the tested value of ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  "or \[Delta], respectively, for which the minimization is to be performed, \
and as a second parameter a vector representing the starting values of the \
minimum finder. The starting values are usually set close to the best-fit \
values, but the algorithm ",
  "can be faster if they are slightly off. If,for topological reasons,the \
minimum finder does not converge to the correct local minimum,the starting \
values determined by this function will need to be correspondingly adjusted! \
The following demonstrates the application of ",
  StyleBox["ChiThet",
    FontFamily->"Courier"],
  StyleBox["a",
    FontFamily->"Courier"],
  " for the tested value",
  " ",
  Cell[BoxData[
      \(TraditionalForm\`\(sin\^2\)(2  \[Theta]\_13)\)]],
  "=0.05, were the vector of the starting values has to have the form ",
  StyleBox["{",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)],
    FontWeight->"Bold"],
  StyleBox[", \[Delta], ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_21\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_31\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", \[Rho]}",
    FontWeight->"Bold"],
  ":"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(ChiTheta[
      N[ArcSin[Sqrt[0.05]]/2], {\[Pi]/4, 0, RescaledSMD, 0.003, DENSITY} // 
        N]\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \({211.41785100152367`, 0.5936852395536154`, 2.609579477584059`, 
      0.00006855061209402154`, 0.0031774952612490556`, 4.256908324812384`, 
      887.`}\)], "Output"]
}, Open  ]],

Cell[TextData[{
  "As a result of this function call, a vector of the form ",
  " ",
  StyleBox["{",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)],
    FontWeight->"Bold"],
  StyleBox[",",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\(\(\ \)\(\[Theta]\_23\)\)\)],
    FontWeight->"Bold"],
  StyleBox[", \[Delta], ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_21\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_31\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", \[Rho], Iterations}",
    FontWeight->"Bold"],
  " is supplied, where the first value represents the (minimized) ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "-value found, the last value the number of iterations used (a measure for \
the speed/performance/convergence), and the medium values the vector where \
the starting values finally ended up, i.e., the local minimum was found. For \
most applications, only the first value is interesting, but for test purposes \
also the other ones will be useful, since, up to a certain extend, one can \
also interpret them to find out what actually happened from the topology \
point of view."
}], "Text"],

Cell["\<\
In order to use the minimum finder again, we have learned above \
that the parameters have to be re-set:\
\>", "Text"],

Cell[BoxData[{
    \(\(SetVacuumParameters[N[9999], N[ArcSin[Sqrt[0.01]]/2], N[\[Pi]/4], 
        N[0]];\)\), "\[IndentingNewLine]", 
    \(\(SetMasses[N[RescaledSMD], 
        N[3.0*10^\(-3\)]];\)\), "\[IndentingNewLine]", 
    \(\(SetDensity[DENSITY];\)\), "\[IndentingNewLine]", 
    \(\(SetRates[];\)\)}], "Input"],

Cell[TextData[{
  "Then, we can call ",
  StyleBox["ChiDelta",
    FontFamily->"Courier"],
  " with the tested \[Delta] and the starting vector of the form ",
  StyleBox["{Log[10,",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\(sin\^2\)(2  \[Theta]\_13)\)],
    FontWeight->"Bold"],
  StyleBox["], ",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_21\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_31\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", \[Rho]}",
    FontWeight->"Bold"],
  ". For example, the following routine tests \[Delta]=\[Pi]/2 (maximal CP \
violation):"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ChiDelta[
      N[\[Pi]/2], {Log[10, 0.01], \[Pi]/4, 4.5\ 10^\(-5\), 0.003, DENSITY} // 
        N]\)], "Input"],

Cell[BoxData[
    \({0.6050828458876533`, \(-1.9154819181141707`\), 0.8187559546059352`, 
      0.00004025626952997163`, 0.003010726453227421`, 3.527784292069264`, 
      1595.`}\)], "Output"]
}, Open  ]],

Cell[TextData[{
  "This means that \[CapitalDelta]",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "is too low to distinguish it from CP conservation.\n\nCorresponding to ",
  StyleBox["ChiTheta",
    FontFamily->"Courier"],
  ", the result is returned as a vector composited of the ",
  Cell[BoxData[
      \(TraditionalForm\`\[Chi]\^2\)]],
  "-value, the minimum found (in the format ",
  StyleBox["Log[10,",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\(sin\^2\)(2  \[Theta]\_13)\)],
    FontWeight->"Bold"],
  StyleBox["], ",
    FontWeight->"Bold"],
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_23\)],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_21\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", ",
    FontWeight->"Bold"],
  Cell[BoxData[
      StyleBox[\(\[CapitalDelta]m\_31\%2\),
        "Text",
        FontFamily->"Times"]],
    FontWeight->"Bold"],
  StyleBox[", \[Rho]",
    FontWeight->"Bold"],
  "), and the number of iterations used. Note that ",
  StyleBox["ChiDelta",
    FontFamily->"Courier"],
  " uses a very special, logarithmic form for ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\_13\)]],
  ", because it turns out that the algorithm converges faster on logarithmic \
scales."
}], "Text"],

Cell["\<\
BUG note: So far, there is a bug in the sign of \[Delta] in the \
software. Between the oscillation probabilities and the higher-level routines \
a relative sign \[Delta] -> -\[Delta] enters, making it necessary to correct \
this manually!\
\>", "Text",
  CellFrame->True,
  Background->GrayLevel[0.849989]],

Cell[CellGroupData[{

Cell["Example", "Subsubsection"],

Cell[TextData[{
  "Let us now show one example: we want to find the sensitivity of our \
neutrino factory to",
  Cell[BoxData[
      \(TraditionalForm\`\(\(\ \)\(\(sin\^2\)(2  \[Theta]\_13)\)\)\)]],
  " for the LMA central values. In order to avoid mistakes, we can use \
wrappers to evaluate certain dependencies, such as for calculating ",
  Cell[BoxData[
      \(TraditionalForm\`\(\[Chi]\^2\)(\(sin\^2\)(2  \[Theta]\_13))\)]],
  " for the LMA values with \[Delta]=0 and ",
  Cell[BoxData[
      \(TraditionalForm\`\(sin\^2\)(2  \[Theta]\_13) = 0\)]],
  " including systematics and multi-parameter correlations, as well as the \
KamLAND results:"
}], "Text"],

Cell[BoxData[
    \(FindChiTheta[thes22theta13_]\  := \ 
      Module[{RSSMD}, \[IndentingNewLine]RSSMD\  = \ 
          Sin[2\ 32.9\ \[Pi]/
                  180]\ 4.5\ 10^\((\(-5\))\); \
\[IndentingNewLine]SetVacuumParameters[N[9999], N[ArcSin[Sqrt[0.0]]/2], 
          N[\[Pi]/4], N[0]]; \[IndentingNewLine]SetMasses[N[RSSMD], 
          N[3.0*10^\(-3\)]]; \[IndentingNewLine]SetDensity[
          DENSITY]; \[IndentingNewLine]SetRates[]; \
\[IndentingNewLine]SetInputErrors[N[10], N[10], N[10], N[RSSMD\ 0.15], N[1], 
          N[DENSITY*0.05]]; \[IndentingNewLine]SetStartingValues[
          ArcSin[Sqrt[0.0]]/2, N[\[Pi]/4], N[0], N[RSSMD], N[3.0*10^\(-3\)], 
          DENSITY]; \[IndentingNewLine]\(ChiTheta[
            N[ArcSin[Sqrt[thes22theta13]]/2], {\[Pi]/4, 0, RSSMD, 0.003, 
                DENSITY} // N]\)[\([1]\)]\ \[IndentingNewLine]]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(res\  = \ 
      Table[{s22th13, FindChiTheta[s22th13]}, {s22th13, 0, 0.003, 
          0.0005}]\)], "Input"],

Cell[BoxData[
    \({{0, 6.395380303039003`*^-10}, {0.0005`, 
        0.14702239100141457`}, {0.001`, 1.9348448583559148`}, {0.0015`, 
        6.815259243098478`}, {0.002`, 13.942697958795158`}, {0.0025`, 
        23.17126243053897`}, {0.003`, 32.90898060905974`}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(ListPlot[res, PlotJoined \[Rule] True]\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 317.46 0.0147151 0.0178858 [
[.18254 .00222 -15.75 -11 ]
[.18254 .00222 15.75 0 ]
[.34127 .00222 -13.25 -10.9375 ]
[.34127 .00222 13.25 0 ]
[.5 .00222 -15.75 -11 ]
[.5 .00222 15.75 0 ]
[.65873 .00222 -13.25 -10.9375 ]
[.65873 .00222 13.25 0 ]
[.81746 .00222 -15.75 -11 ]
[.81746 .00222 15.75 0 ]
[.97619 .00222 -13.25 -10.9375 ]
[.97619 .00222 13.25 0 ]
[.01131 .10414 -9 -5.5 ]
[.01131 .10414 0 5.5 ]
[.01131 .19357 -14 -5.46875 ]
[.01131 .19357 0 5.46875 ]
[.01131 .283 -14 -5.5 ]
[.01131 .283 0 5.5 ]
[.01131 .37243 -14 -5.46875 ]
[.01131 .37243 0 5.46875 ]
[.01131 .46186 -14 -5.5 ]
[.01131 .46186 0 5.5 ]
[.01131 .55129 -14 -5.46875 ]
[.01131 .55129 0 5.46875 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.18254 .01472 m
.18254 .02097 L
s
gsave
.18254 .00222 -76.75 -15 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 19 translate 1 -1 scale
63.000 11.875 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.0005) show
1.000 setlinewidth
grestore
.34127 .01472 m
.34127 .02097 L
s
gsave
.34127 .00222 -74.25 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.001) show
1.000 setlinewidth
grestore
.5 .01472 m
.5 .02097 L
s
gsave
.5 .00222 -76.75 -15 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 19 translate 1 -1 scale
63.000 11.875 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.0015) show
1.000 setlinewidth
grestore
.65873 .01472 m
.65873 .02097 L
s
gsave
.65873 .00222 -74.25 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.002) show
1.000 setlinewidth
grestore
.81746 .01472 m
.81746 .02097 L
s
gsave
.81746 .00222 -76.75 -15 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 19 translate 1 -1 scale
63.000 11.875 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.0025) show
1.000 setlinewidth
grestore
.97619 .01472 m
.97619 .02097 L
s
gsave
.97619 .00222 -74.25 -14.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.003) show
1.000 setlinewidth
grestore
.125 Mabswid
.05556 .01472 m
.05556 .01847 L
s
.0873 .01472 m
.0873 .01847 L
s
.11905 .01472 m
.11905 .01847 L
s
.15079 .01472 m
.15079 .01847 L
s
.21429 .01472 m
.21429 .01847 L
s
.24603 .01472 m
.24603 .01847 L
s
.27778 .01472 m
.27778 .01847 L
s
.30952 .01472 m
.30952 .01847 L
s
.37302 .01472 m
.37302 .01847 L
s
.40476 .01472 m
.40476 .01847 L
s
.43651 .01472 m
.43651 .01847 L
s
.46825 .01472 m
.46825 .01847 L
s
.53175 .01472 m
.53175 .01847 L
s
.56349 .01472 m
.56349 .01847 L
s
.59524 .01472 m
.59524 .01847 L
s
.62698 .01472 m
.62698 .01847 L
s
.69048 .01472 m
.69048 .01847 L
s
.72222 .01472 m
.72222 .01847 L
s
.75397 .01472 m
.75397 .01847 L
s
.78571 .01472 m
.78571 .01847 L
s
.84921 .01472 m
.84921 .01847 L
s
.88095 .01472 m
.88095 .01847 L
s
.9127 .01472 m
.9127 .01847 L
s
.94444 .01472 m
.94444 .01847 L
s
.25 Mabswid
0 .01472 m
1 .01472 L
s
.02381 .10414 m
.03006 .10414 L
s
gsave
.01131 .10414 -70 -9.5 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 19 translate 1 -1 scale
63.000 11.875 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(5) show
1.000 setlinewidth
grestore
.02381 .19357 m
.03006 .19357 L
s
gsave
.01131 .19357 -75 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(10) show
1.000 setlinewidth
grestore
.02381 .283 m
.03006 .283 L
s
gsave
.01131 .283 -75 -9.5 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 19 translate 1 -1 scale
63.000 11.875 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(15) show
1.000 setlinewidth
grestore
.02381 .37243 m
.03006 .37243 L
s
gsave
.01131 .37243 -75 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(20) show
1.000 setlinewidth
grestore
.02381 .46186 m
.03006 .46186 L
s
gsave
.01131 .46186 -75 -9.5 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 19 translate 1 -1 scale
63.000 11.875 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(25) show
1.000 setlinewidth
grestore
.02381 .55129 m
.03006 .55129 L
s
gsave
.01131 .55129 -75 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(30) show
1.000 setlinewidth
grestore
.125 Mabswid
.02381 .0326 m
.02756 .0326 L
s
.02381 .05049 m
.02756 .05049 L
s
.02381 .06837 m
.02756 .06837 L
s
.02381 .08626 m
.02756 .08626 L
s
.02381 .12203 m
.02756 .12203 L
s
.02381 .13992 m
.02756 .13992 L
s
.02381 .1578 m
.02756 .1578 L
s
.02381 .17569 m
.02756 .17569 L
s
.02381 .21146 m
.02756 .21146 L
s
.02381 .22934 m
.02756 .22934 L
s
.02381 .24723 m
.02756 .24723 L
s
.02381 .26512 m
.02756 .26512 L
s
.02381 .30089 m
.02756 .30089 L
s
.02381 .31877 m
.02756 .31877 L
s
.02381 .33666 m
.02756 .33666 L
s
.02381 .35455 m
.02756 .35455 L
s
.02381 .39032 m
.02756 .39032 L
s
.02381 .4082 m
.02756 .4082 L
s
.02381 .42609 m
.02756 .42609 L
s
.02381 .44397 m
.02756 .44397 L
s
.02381 .47975 m
.02756 .47975 L
s
.02381 .49763 m
.02756 .49763 L
s
.02381 .51552 m
.02756 .51552 L
s
.02381 .5334 m
.02756 .5334 L
s
.02381 .56918 m
.02756 .56918 L
s
.02381 .58706 m
.02756 .58706 L
s
.02381 .60495 m
.02756 .60495 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .01472 m
.18254 .01734 L
.34127 .04932 L
.5 .13661 L
.65873 .26409 L
.81746 .42915 L
.97619 .60332 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40006`00012R000`400?l00000o`00003oo`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona
0?ooo`00AP3oool4000000@0oooo00<000000?ooo`3oool0100000040?ooo`@00000103oool40000
00@0oooo0`00000N0?ooo`@00000103oool00`000000oooo0?ooo`04000000@0oooo100000040?oo
o`D00000703oool4000000@0oooo00<000000?ooo`3oool0100000040?ooo`@00000103oool50000
00<0oooo0`00000N0?ooo`@00000103oool00`000000oooo0?ooo`04000000@0oooo100000030?oo
o`H000007@3oool4000000@0oooo00<000000?ooo`3oool0100000040?ooo`@000000`3oool60000
00<0oooo0`00000N0?ooo`@00000103oool00`000000oooo0?ooo`04000000@0oooo100000040?oo
o`@000001P3oool004D0oooo0P0000020?ooo`8000000`3oool010000000oooo0000000000020?oo
o`8000000P3oool200000080oooo0P0000020?ooo`8000000P3oool2000000<0oooo00@000000?oo
o`3oool00000703oool200000080oooo0P0000030?ooo`040000003oool0000000000080oooo0P00
00020?ooo`8000000P3oool2000000D0oooo00<000000?ooo`3oool06`3oool200000080oooo0P00
00030?ooo`040000003oool0000000000080oooo0P0000020?ooo`8000000P3oool2000000D0oooo
00<000000?ooo`3oool00`3oool010000000oooo0?ooo`00000L0?ooo`8000000P3oool2000000<0
oooo00@000000?ooo`00000000000P3oool200000080oooo0P0000020?ooo`8000000P3oool20000
00<0oooo00<000000?ooo`3oool06P3oool200000080oooo0P0000030?ooo`040000003oool00000
00000080oooo0P0000020?ooo`8000000P3oool200000080oooo0P0000030?ooo`050000003oool0
oooo0?ooo`0000000P3oool00`000000oooo0?ooo`0J0?ooo`8000000P3oool2000000<0oooo00@0
00000?ooo`00000000000P3oool200000080oooo0P0000020?ooo`8000000P3oool200000080oooo
0P0000050?ooo`00A@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<0
00000?ooo`3oool00P3oool010000000oooo0?ooo`0000040?ooo`040000003oool0oooo000000@0
oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo0080
oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo0000
00@0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo
0080oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo
000000@0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`070?ooo`030000003oool0
oooo01T0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003oool0
oooo0080oooo00@000000?ooo`3oool00000103oool01@000000oooo0?ooo`3oool000000200oooo
00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0080oooo
00@000000?ooo`3oool00000103oool01@000000oooo0?ooo`3oool0000000/0oooo00<000000?oo
o`3oool06@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?oo
o`3oool00P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00D0oooo00<00000
0?ooo`3oool00`3oool004D0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?oo
o`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103oool010000000oooo0?ooo`00
00040?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool06@3oool00`000000oooo0?oo
o`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool010000000oooo0?oo
o`0000040?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool06`3oool00`000000oooo
0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool010000000oooo
0?ooo`0000040?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool01`3oool00`000000
oooo0?ooo`0I0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`000000
oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool00P3oool00`00
0000oooo0?ooo`0M0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`00
0000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool00P3oool0
0`000000oooo0?ooo`080?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3oool00P3oool0
0`000000oooo0?ooo`030?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103o
ool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00<0oooo00150?ooo`030000003oool0
oooo0080oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`040000003oool0
oooo000000@0oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`040?ooo`800000
6`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0
0P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3o
ool06`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3o
ool00P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00<0oooo00<000000?oo
o`3oool01P3oool2000001/0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?oo
o`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`03
0?ooo`030000003oool0oooo01`0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`03
0?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103oool00`000000oooo0?oo
o`030?ooo`030000003oool0oooo00H0oooo0P00000K0?ooo`030000003oool0oooo0080oooo00<0
00000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo
00<000000?ooo`3oool0103oool00`000000oooo0?ooo`040?ooo`00A@3oool00`000000oooo0?oo
o`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool010000000oooo0?oo
o`0000040?ooo`040000003oool0oooo000000@0oooo00H000000?ooo`3oool0oooo0000003oool2
000001`0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003oool0
oooo0080oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`030?ooo`030000003o
ool0oooo01/0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003o
ool0oooo0080oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`030?ooo`030000
003oool0oooo00<0oooo00@000000?ooo`0000000000703oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool010000000oooo0?ooo`0000040?oo
o`030000003oool0oooo00<0oooo0P00000M0?ooo`030000003oool0oooo0080oooo00<000000?oo
o`3oool00`3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00<00000
0?ooo`3oool00`3oool2000000@0oooo00@000000?ooo`0000000000703oool00`000000oooo0?oo
o`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool010000000oooo0?oo
o`0000040?ooo`030000003oool0oooo0080oooo0P0000070?ooo`00A@3oool00`000000oooo0?oo
o`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool010000000oooo0?oo
o`0000040?ooo`040000003oool0oooo000000@0oooo00@000000?ooo`3oool0oooo0`00000M0?oo
o`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?oo
o`040000003oool0oooo000000@0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0K
0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`02
0?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?oo
o`030?ooo`<000007@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<0
00000?ooo`3oool00P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00@0oooo
00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo
00<000000?ooo`3oool00P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00@0
oooo00<000000?ooo`3oool00P3oool3000001d0oooo00<000000?ooo`3oool00P3oool00`000000
oooo0?ooo`030?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103oool00`00
0000oooo0?ooo`040?ooo`030000003oool0oooo00@0oooo00150?ooo`030000003oool0oooo0080
oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo0000
00@0oooo00@000000?ooo`3oool00000103oool010000000oooo0?ooo`3oool3000001d0oooo00<0
00000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0080oooo00@0
00000?ooo`3oool00000103oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo01/0oooo
00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0080oooo
00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00<0
oooo0`00000M0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`000000
oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool0103oool00`00
0000oooo0?ooo`0K0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`00
0000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool0103oool0
0`000000oooo0?ooo`020?ooo`<000007@3oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo00<0oooo00<000000?ooo`3oool00P3oool010000000oooo0?ooo`0000040?ooo`030000003o
ool0oooo00@0oooo00<000000?ooo`3oool0103oool004D0oooo00<000000?ooo`3oool00P3oool0
0`000000oooo0?ooo`030?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool00000103o
ool010000000oooo0?ooo`0000040?ooo`050000003oool0oooo0?ooo`0000007`3oool00`000000
oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool010000000
oooo0?ooo`0000040?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool06`3oool00`00
0000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool01000
0000oooo0?ooo`0000040?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00`3oool0
0`000000oooo0?ooo`0M0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00`3oool0
0`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00@000000?ooo`3oool00000
0`3oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0
0`3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo000000@0oooo00@000000?ooo`3o
ool000000`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo01d0oooo00<000000?oo
o`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0080oooo00@000000?oo
o`3oool00000103oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00<0oooo000J
0?ooo`030000003oool0oooo02P0oooo0P0000020?ooo`8000001@3oool200000080oooo0P000002
0?ooo`8000000P3oool200000080oooo0P0000020?ooo`800000103oool3000001`0oooo0P000002
0?ooo`8000001@3oool200000080oooo0P0000020?ooo`8000000P3oool2000000<0oooo0`00000M
0?ooo`8000000P3oool2000000D0oooo0P0000020?ooo`8000000P3oool200000080oooo0P000003
0?ooo`<000001P3oool3000001`0oooo0P0000020?ooo`8000001@3oool200000080oooo0P000002
0?ooo`8000000P3oool200000080oooo0P0000000`3oool000000000000M0?ooo`8000000P3oool2
000000D0oooo0P0000020?ooo`8000000P3oool200000080oooo0P0000020?ooo`80000000<0oooo
0000000000001@3oool3000001`0oooo0P0000020?ooo`8000001@3oool200000080oooo0P000002
0?ooo`8000000P3oool200000080oooo0P0000020?ooo`8000001@3oool001X0oooo00<000000?oo
o`3oool0:@3oool4000000L0oooo100000040?ooo`@00000103oool4000000D0oooo1000000L0?oo
o`@000001`3oool4000000@0oooo100000060?ooo`030000003oool0oooo01`0oooo100000070?oo
o`@00000103oool4000000H0oooo00<000000?ooo`3oool0103oool4000001`0oooo100000070?oo
o`@00000103oool4000000@0oooo0`00000O0?ooo`@000001`3oool4000000@0oooo100000040?oo
o`<000001P3oool4000001`0oooo100000070?ooo`@00000103oool4000000@0oooo100000060?oo
o`006P3oool00`000000oooo0?ooo`3o0?oooi@0oooo000J0?ooo`030000003oool0oooo0?l0oooo
U03oool001X0oooo00<000000?ooo`3oool0o`3ooonD0?ooo`006P3oool00`000000oooo0?ooo`3o
0?oooi@0oooo000@0?ooool00000UP00000;0?ooo`006P3oool00`000000oooo0?ooo`090?ooo`03
0000003oool0oooo00X0oooo00<000000?ooo`3oool01@3ooolR000000X0oooo00<000000?ooo`3o
ool02@3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool02P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool02@3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool02P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool02@3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool02P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool02@3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool02P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool04P3oool001X0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`0:0?ooo`030000
003oool0oooo00X0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0:0?ooo`030000
003oool0oooo00D000001@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00X0oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00X0oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00X0oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00X0oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0B0?ooo`006P3oool00`000000oooo0?oo
o`0m0?ooo`030000003oool0oooo00D0oooo1@00000c0?ooo`030000003oool0oooo03d0oooo00<0
00000?ooo`3oool0?@3oool00`000000oooo0?ooo`0m0?ooo`030000003oool0oooo03h0oooo00<0
00000?ooo`3oool04P3oool001X0oooo00<000000?ooo`3oool0BP3oool500000?l0ooooA@3oool0
01X0oooo00<000000?ooo`3oool0C`3oool500000?l0oooo@03oool001X0oooo00<000000?ooo`3o
ool0E03oool500000?l0oooo>`3oool001X0oooo00<000000?ooo`3oool0F@3oool500000?l0oooo
=P3oool001X0oooo0P00001O0?ooo`@00000o`3ooolb0?ooo`006P3oool00`000000oooo0?ooo`1R
0?ooo`D00000o`3oool]0?ooo`006P3oool00`000000oooo0?ooo`1W0?ooo`D00000o`3ooolX0?oo
o`006P3oool00`000000oooo0?ooo`1/0?ooo`D00000o`3ooolS0?ooo`006P3oool00`000000oooo
0?ooo`1a0?ooo`D00000o`3ooolN0?ooo`006P3oool00`000000oooo0?ooo`1f0?ooo`D00000o`3o
oolI0?ooo`006P3oool00`000000oooo0?ooo`1k0?ooo`<00000o`3ooolF0?ooo`006P3oool20000
07l0oooo0P00003o0?oooa@0oooo000J0?ooo`030000003oool0oooo0800oooo0P00003o0?oooa80
oooo000J0?ooo`030000003oool0oooo0880oooo0P00003o0?oooa00oooo000J0?ooo`030000003o
ool0oooo08@0oooo0P00003o0?ooo`h0oooo000J0?ooo`030000003oool0oooo08H0oooo00<00000
0?ooo`3oool0o`3oool;0?ooo`006P3oool00`000000oooo0?ooo`270?ooo`800000o`3oool;0?oo
o`006P3oool00`000000oooo0?ooo`290?ooo`800000o`3oool90?ooo`006P3oool2000008`0oooo
0P00003o0?ooo`L0oooo000J0?ooo`030000003oool0oooo08d0oooo00<000000?ooo`3oool0o`3o
ool40?ooo`006P3oool00`000000oooo0?ooo`2>0?ooo`800000o`3oool40?ooo`006P3oool00`00
0000oooo0?ooo`2@0?ooo`800000o`3oool20?ooo`006P3oool00`000000oooo0?ooo`2B0?ooo`80
0000o`3oool001X0oooo00<000000?ooo`3oool0U03oool200000?d0oooo000J0?ooo`030000003o
ool0oooo09H0oooo00<000000?ooo`3oool0nP3oool001X0oooo0P00002H0?ooo`800000nP3oool0
01X0oooo00<000000?ooo`3oool0V@3oool200000?P0oooo000J0?ooo`030000003oool0oooo09/0
oooo0P00003f0?ooo`006P3oool00`000000oooo0?ooo`2M0?ooo`030000003oool0oooo0?<0oooo
000J0?ooo`030000003oool0oooo09h0oooo0P00003c0?ooo`002`3oool3000000`0oooo00<00000
0?ooo`3oool0X03oool200000?40oooo000;0?ooo`040000003oool0oooo000000/0oooo00<00000
0?ooo`3oool0XP3oool200000>l0oooo000?0?ooo`030000003oool0oooo00P0oooo00<000000?oo
o`3oool0Y03oool200000>d0oooo000?0?ooo`030000003oool0oooo00P0oooo0`00002V0?ooo`03
0000003oool0oooo0>X0oooo000>0?ooo`8000002P3oool00`000000oooo0?ooo`2W0?ooo`800000
jP3oool000/0oooo00@000000?ooo`00000000002`3oool00`000000oooo0?ooo`2Y0?ooo`800000
j03oool000/0oooo0`00000<0?ooo`030000003oool0oooo0:/0oooo0P00003V0?ooo`002`3oool3
000000`0oooo00<000000?ooo`3oool0[@3oool00`000000oooo0?ooo`3S0?ooo`002`3oool00`00
0000oooo0?ooo`0<0?ooo`030000003oool0oooo0:h0oooo0P00003S0?ooo`00303oool3000000/0
oooo00<000000?ooo`3oool0/03oool200000>40oooo000<0?ooo`@000002P3oool200000;<0oooo
0P00003O0?ooo`006P3oool00`000000oooo0?ooo`2d0?ooo`800000g@3oool001X0oooo00<00000
0?ooo`3oool0]P3oool00`000000oooo0?ooo`3J0?ooo`006P3oool00`000000oooo0?ooo`2g0?oo
o`800000fP3oool001X0oooo00<000000?ooo`3oool0^@3oool200000=P0oooo000J0?ooo`030000
003oool0oooo0;/0oooo0P00003F0?ooo`006P3oool00`000000oooo0?ooo`2m0?ooo`030000003o
ool0oooo0=<0oooo000J0?ooo`800000_`3oool00`000000oooo0?ooo`3B0?ooo`006P3oool00`00
0000oooo0?ooo`2o0?ooo`800000dP3oool001X0oooo00<000000?ooo`3oool0`@3oool00`000000
oooo0?ooo`3?0?ooo`006P3oool00`000000oooo0?ooo`320?ooo`030000003oool0oooo0<h0oooo
000J0?ooo`030000003oool0oooo0<<0oooo00<000000?ooo`3oool0c@3oool001X0oooo00<00000
0?ooo`3oool0a03oool200000<d0oooo000J0?ooo`030000003oool0oooo0<H0oooo00<000000?oo
o`3oool0bP3oool001X0oooo0P0000380?ooo`030000003oool0oooo0<T0oooo000J0?ooo`030000
003oool0oooo0<P0oooo00<000000?ooo`3oool0b03oool001X0oooo00<000000?ooo`3oool0b@3o
ool200000<P0oooo000J0?ooo`030000003oool0oooo0</0oooo00<000000?ooo`3oool0a@3oool0
01X0oooo00<000000?ooo`3oool0c03oool00`000000oooo0?ooo`340?ooo`006P3oool00`000000
oooo0?ooo`3=0?ooo`030000003oool0oooo0<<0oooo000J0?ooo`030000003oool0oooo0<h0oooo
0P0000330?ooo`006P3oool200000=40oooo00<000000?ooo`3oool0`03oool001X0oooo00<00000
0?ooo`3oool0d@3oool00`000000oooo0?ooo`2o0?ooo`006P3oool00`000000oooo0?ooo`3B0?oo
o`030000003oool0oooo0;h0oooo000J0?ooo`030000003oool0oooo0=<0oooo0P00002n0?ooo`00
6P3oool00`000000oooo0?ooo`3E0?ooo`030000003oool0oooo0;/0oooo00040?ooo`D000000`3o
ool4000000X0oooo00<000000?ooo`3oool0eP3oool00`000000oooo0?ooo`2j0?ooo`001P3oool0
0`000000oooo0?ooo`020?ooo`8000000P3oool2000000T0oooo00<000000?ooo`3oool0e`3oool0
0`000000oooo0?ooo`2i0?ooo`001P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo
0080oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`3H0?ooo`800000^@3oool000H0
oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00L0
oooo0`00003J0?ooo`030000003oool0oooo0;H0oooo00060?ooo`030000003oool0oooo0080oooo
00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo0=/0oooo
00<000000?ooo`3oool0]@3oool000H0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?oo
o`020?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0g03oool200000;D0oooo0006
0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`07
0?ooo`030000003oool0oooo0=h0oooo00<000000?ooo`3oool0/P3oool000H0oooo00<000000?oo
o`3oool00P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00L0oooo00<000000?oo
o`3oool0g`3oool00`000000oooo0?ooo`2a0?ooo`001P3oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo0080oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`3P0?ooo`03
0000003oool0oooo0;00oooo00040?ooo`<00000103oool200000080oooo0P0000090?ooo`030000
003oool0oooo0>40oooo0P00002`0?ooo`001P3oool00`000000oooo0?ooo`030?ooo`@000002P3o
ool200000>@0oooo00<000000?ooo`3oool0[@3oool001X0oooo00<000000?ooo`3oool0i03oool0
0`000000oooo0?ooo`2/0?ooo`006P3oool00`000000oooo0?ooo`3U0?ooo`030000003oool0oooo
0:/0oooo000J0?ooo`030000003oool0oooo0>H0oooo0P00002[0?ooo`006P3oool00`000000oooo
0?ooo`3X0?ooo`030000003oool0oooo0:P0oooo000J0?ooo`030000003oool0oooo0>T0oooo00<0
00000?ooo`3oool0Y`3oool001X0oooo00<000000?ooo`3oool0jP3oool00`000000oooo0?ooo`2V
0?ooo`006P3oool200000>`0oooo0P00002V0?ooo`006P3oool00`000000oooo0?ooo`3]0?ooo`03
0000003oool0oooo0:<0oooo000J0?ooo`030000003oool0oooo0>h0oooo00<000000?ooo`3oool0
XP3oool001X0oooo00<000000?ooo`3oool0k`3oool00`000000oooo0?ooo`2Q0?ooo`006P3oool0
0`000000oooo0?ooo`3`0?ooo`800000X@3oool001X0oooo00<000000?ooo`3oool0lP3oool00`00
0000oooo0?ooo`2N0?ooo`006P3oool00`000000oooo0?ooo`3c0?ooo`030000003oool0oooo09d0
oooo000J0?ooo`800000m@3oool00`000000oooo0?ooo`2L0?ooo`006P3oool00`000000oooo0?oo
o`3e0?ooo`800000W03oool001X0oooo00<000000?ooo`3oool0m`3oool00`000000oooo0?ooo`2I
0?ooo`006P3oool00`000000oooo0?ooo`3h0?ooo`030000003oool0oooo09P0oooo000J0?ooo`03
0000003oool0oooo0?T0oooo00<000000?ooo`3oool0U`3oool001X0oooo00<000000?ooo`3oool0
nP3oool2000009L0oooo000J0?ooo`030000003oool0oooo0?`0oooo00<000000?ooo`3oool0U03o
ool001X0oooo00<000000?ooo`3oool0o@3oool00`000000oooo0?ooo`2C0?ooo`006P3oool20000
0?l0oooo00<000000?ooo`3oool0TP3oool001X0oooo00<000000?ooo`3oool0o`3oool00`000000
oooo0?ooo`2A0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooo`40oooo00<000000?ooo`3oool0
T03oool001X0oooo00<000000?ooo`3oool0o`3oool20?ooo`030000003oool0oooo08l0oooo0004
0?ooo`D000000`3oool3000000/0oooo00<000000?ooo`3oool0o`3oool30?ooo`030000003oool0
oooo08h0oooo00060?ooo`030000003oool0oooo00<0oooo00@000000?ooo`3oool000002P3oool0
0`000000oooo0?ooo`3o0?ooo`@0oooo00<000000?ooo`3oool0S@3oool000H0oooo00<000000?oo
o`3oool01`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo0?l0oooo1@3oool00`00
0000oooo0?ooo`2<0?ooo`001P3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0
oooo0`00003o0?ooo`H0oooo00<000000?ooo`3oool0R`3oool000H0oooo00<000000?ooo`3oool0
1P3oool2000000T0oooo00<000000?ooo`3oool0o`3oool70?ooo`030000003oool0oooo08X0oooo
00060?ooo`030000003oool0oooo00<0oooo00@000000?ooo`00000000002P3oool00`000000oooo
0?ooo`3o0?ooo`P0oooo00<000000?ooo`3oool0R@3oool000H0oooo00<000000?ooo`3oool00`3o
ool3000000/0oooo00<000000?ooo`3oool0o`3oool90?ooo`030000003oool0oooo08P0oooo0006
0?ooo`030000003oool0oooo00<0oooo0`00000;0?ooo`030000003oool0oooo0?l0oooo2@3oool0
0`000000oooo0?ooo`280?ooo`001P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo
00/0oooo00<000000?ooo`3oool0o`3oool:0?ooo`030000003oool0oooo08L0oooo00040?ooo`<0
00001P3oool3000000X0oooo00<000000?ooo`3oool0o`3oool;0?ooo`030000003oool0oooo08H0
oooo00060?ooo`030000003oool0oooo00@0oooo100000090?ooo`800000o`3oool=0?ooo`030000
003oool0oooo08D0oooo000J0?ooo`030000003oool0oooo0?l0oooo3@3oool00`000000oooo0?oo
o`240?ooo`006P3oool00`000000oooo0?ooo`3o0?ooo`h0oooo00<000000?ooo`3oool0P`3oool0
01X0oooo00<000000?ooo`3oool0o`3oool?0?ooo`030000003oool0oooo0880oooo000J0?ooo`03
0000003oool0oooo0?l0oooo403oool00`000000oooo0?ooo`210?ooo`006P3oool00`000000oooo
0?ooo`3o0?oooa40oooo00<000000?ooo`3oool0P03oool001X0oooo00<000000?ooo`3oool0o`3o
oolB0?ooo`030000003oool0oooo07l0oooo000J0?ooo`800000o`3ooolD0?ooo`030000003oool0
oooo07h0oooo000J0?ooo`030000003oool0oooo0?l0oooo503oool00`000000oooo0?ooo`1m0?oo
o`006P3oool00`000000oooo0?ooo`3o0?oooaD0oooo00<000000?ooo`3oool0O03oool001X0oooo
00<000000?ooo`3oool0o`3ooolF0?ooo`030000003oool0oooo07/0oooo000J0?ooo`030000003o
ool0oooo0?l0oooo5`3oool00`000000oooo0?ooo`1j0?ooo`006P3oool00`000000oooo0?ooo`3o
0?oooaP0oooo00<000000?ooo`3oool0N@3oool001X0oooo00<000000?ooo`3oool0o`3ooolI0?oo
o`030000003oool0oooo07P0oooo000J0?ooo`030000003oool0oooo0?l0oooo6P3oool00`000000
oooo0?ooo`1g0?ooo`006P3oool200000?l0oooo703oool00`000000oooo0?ooo`1f0?ooo`006P3o
ool00`000000oooo0?ooo`3o0?oooa`0oooo00<000000?ooo`3oool0M@3oool001X0oooo00<00000
0?ooo`3oool0o`3ooolM0?ooo`030000003oool0oooo07@0oooo000J0?ooo`030000003oool0oooo
0?l0oooo7P3oool00`000000oooo0?ooo`1c0?ooo`006P3oool00`000000oooo0?ooo`3o0?oooah0
oooo00<000000?ooo`3oool0L`3oool001X0oooo00<000000?ooo`3oool0o`3ooolO0?ooo`030000
003oool0oooo0780oooo000J0?ooo`030000003oool0oooo0?l0oooo803oool00`000000oooo0?oo
o`1a0?ooo`006P3oool200000?l0oooo8P3oool00`000000oooo0?ooo`1`0?ooo`006P3oool00`00
0000oooo0?ooo`3o0?ooob80oooo00<000000?ooo`3oool0K`3oool001X0oooo00<000000?ooo`3o
ool0o`3ooolS0?ooo`030000003oool0oooo06h0oooo000J0?ooo`030000003oool0oooo0?l0oooo
903oool00`000000oooo0?ooo`1]0?ooo`000`3oool6000000<0oooo1000000:0?ooo`030000003o
ool0oooo0?l0oooo9@3oool00`000000oooo0?ooo`1/0?ooo`000`3oool2000000<0oooo00<00000
0?ooo`3oool00P0000020?ooo`8000002@3oool00`000000oooo0?ooo`3o0?ooobH0oooo00<00000
0?ooo`3oool0J`3oool000@0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`020?oo
o`030000003oool0oooo00L0oooo00<000000?ooo`3oool0o`3ooolW0?ooo`030000003oool0oooo
06X0oooo00050?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00P3oool00`000000
oooo0?ooo`070?ooo`<00000o`3ooolX0?ooo`030000003oool0oooo06T0oooo00060?ooo`030000
003oool0oooo0080oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`070?ooo`030000
003oool0oooo0?l0oooo:@3oool00`000000oooo0?ooo`1X0?ooo`001P3oool2000000<0oooo00<0
00000?ooo`3oool00P3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo0?l0oooo:P3o
ool00`000000oooo0?ooo`1W0?ooo`001`3oool01@000000oooo0?ooo`3oool0000000@0oooo00<0
00000?ooo`3oool01`3oool00`000000oooo0?ooo`3o0?ooob/0oooo00<000000?ooo`3oool0IP3o
ool000L0oooo00D000000?ooo`3oool0oooo000000040?ooo`030000003oool0oooo00L0oooo00<0
00000?ooo`3oool0o`3oool/0?ooo`030000003oool0oooo06D0oooo00030?ooo`050000003oool0
oooo0?ooo`0000000`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00L0oooo00<0
00000?ooo`3oool0o`3oool]0?ooo`030000003oool0oooo06@0oooo00030?ooo`80000000<0oooo
0000000000000`3oool200000080oooo0P0000090?ooo`030000003oool0oooo0?l0oooo;P3oool0
0`000000oooo0?ooo`1S0?ooo`00103oool3000000D0oooo1000000:0?ooo`800000o`3oool`0?oo
o`030000003oool0oooo0680oooo000J0?ooo`030000003oool0oooo0?l0oooo<03oool00`000000
oooo0?ooo`1Q0?ooo`006P3oool00`000000oooo0?ooo`3o0?oooc40oooo00<000000?ooo`3oool0
H03oool001X0oooo00<000000?ooo`3oool0o`3ooolb0?ooo`030000003oool0oooo05l0oooo000J
0?ooo`030000003oool0oooo0?l0oooo<`3oool00`000000oooo0?ooo`1N0?ooo`006P3oool00`00
0000oooo0?ooo`3o0?oooc<0oooo00<000000?ooo`3oool0GP3oool001X0oooo00<000000?ooo`3o
ool0o`3ooold0?ooo`030000003oool0oooo05d0oooo000J0?ooo`800000o`3ooolf0?ooo`030000
003oool0oooo05`0oooo000J0?ooo`030000003oool0oooo0?l0oooo=P3oool00`000000oooo0?oo
o`1K0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooocL0oooo00<000000?ooo`3oool0FP3oool0
01X0oooo00<000000?ooo`3oool0o`3ooolh0?ooo`030000003oool0oooo05T0oooo000J0?ooo`03
0000003oool0oooo0?l0oooo>@3oool00`000000oooo0?ooo`1H0?ooo`006P3oool00`000000oooo
0?ooo`3o0?ooocX0oooo00<000000?ooo`3oool0E`3oool001X0oooo00<000000?ooo`3oool0o`3o
oolk0?ooo`030000003oool0oooo05H0oooo000J0?ooo`030000003oool0oooo0?l0oooo?03oool0
0`000000oooo0?ooo`1E0?ooo`006P3oool200000?l0oooo?P3oool00`000000oooo0?ooo`1D0?oo
o`006P3oool00`000000oooo0?ooo`3o0?oooch0oooo00<000000?ooo`3oool0D`3oool001X0oooo
00<000000?ooo`3oool0o`3ooolo0?ooo`030000003oool0oooo0580oooo000J0?ooo`030000003o
ool0oooo0?l0oooo@03oool00`000000oooo0?ooo`1A0?ooo`006P3oool00`000000oooo0?ooo`3o
0?oood40oooo00<000000?ooo`3oool0D03oool001X0oooo00<000000?ooo`3oool0o`3ooom20?oo
o`030000003oool0oooo04l0oooo000J0?ooo`030000003oool0oooo0?l0oooo@`3oool00`000000
oooo0?ooo`1>0?ooo`006P3oool200000?l0ooooA@3oool00`000000oooo0?ooo`1=0?ooo`006P3o
ool00`000000oooo0?ooo`3o0?ooodD0oooo00<000000?ooo`3oool0C03oool001X0oooo00<00000
0?ooo`3oool0o`3ooom50?ooo`030000003oool0oooo04`0oooo000J0?ooo`030000003oool0oooo
0?l0ooooAP3oool00`000000oooo0?ooo`1;0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooodL0
oooo00<000000?ooo`3oool0BP3oool000<0oooo1P0000030?ooo`<000002`3oool00`000000oooo
0?ooo`3o0?ooodP0oooo00<000000?ooo`3oool0B@3oool000<0oooo0P0000030?ooo`050000003o
ool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo0?l0oooo
B@3oool00`000000oooo0?ooo`180?ooo`00103oool00`000000oooo0?ooo`090?ooo`030000003o
ool0oooo00L0oooo0`00003o0?ooodX0oooo00<000000?ooo`3oool0A`3oool000D0oooo00<00000
0?ooo`3oool0203oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo0?l0ooooB`3oool0
0`000000oooo0?ooo`160?ooo`001P3oool00`000000oooo0?ooo`060?ooo`8000002@3oool00`00
0000oooo0?ooo`3o0?oood`0oooo00<000000?ooo`3oool0A@3oool000H0oooo0P0000040?ooo`04
0000003oool00000000000X0oooo00<000000?ooo`3oool0o`3ooom=0?ooo`030000003oool0oooo
04@0oooo00070?ooo`030000003oool0oooo0080oooo0`00000;0?ooo`030000003oool0oooo0?l0
ooooCP3oool00`000000oooo0?ooo`130?ooo`001`3oool00`000000oooo0?ooo`020?ooo`<00000
2`3oool00`000000oooo0?ooo`3o0?ooodl0oooo00<000000?ooo`3oool0@P3oool000<0oooo00D0
00000?ooo`3oool0oooo000000040?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0
o`3ooom@0?ooo`030000003oool0oooo0440oooo00030?ooo`80000000<0oooo0000000000001@3o
ool3000000X0oooo0P00003o0?oooe80oooo00<000000?ooo`3oool0@03oool000@0oooo0`000006
0?ooo`@000002@3oool00`000000oooo0?ooo`3o0?oooe80oooo00<000000?ooo`3oool0?`3oool0
01X0oooo00<000000?ooo`3oool0o`3ooomB0?ooo`030000003oool0oooo03l0oooo000J0?ooo`03
0000003oool0oooo0?l0ooooD`3oool00`000000oooo0?ooo`0n0?ooo`006P3oool00`000000oooo
0?ooo`3o0?oooe@0oooo00<000000?ooo`3oool0?@3oool001X0oooo00<000000?ooo`3oool0o`3o
oomE0?ooo`030000003oool0oooo03`0oooo000J0?ooo`030000003oool0oooo0?l0ooooEP3oool0
0`000000oooo0?ooo`0k0?ooo`006P3oool00`000000oooo0?ooo`3o0?oooeL0oooo00<000000?oo
o`3oool0>P3oool001X0oooo0P00003o0?oooeT0oooo00<000000?ooo`3oool0>@3oool001X0oooo
00<000000?ooo`3oool0o`3ooomI0?ooo`030000003oool0oooo03P0oooo000J0?ooo`030000003o
ool0oooo0?l0ooooFP3oool00`000000oooo0?ooo`0g0?ooo`006P3oool00`000000oooo0?ooo`3o
0?oooe/0oooo00<000000?ooo`3oool0=P3oool001X0oooo00<000000?ooo`3oool0o`3ooomL0?oo
o`030000003oool0oooo03D0oooo000J0?ooo`030000003oool0oooo0?l0ooooG@3oool00`000000
oooo0?ooo`0d0?ooo`006P3oool00`000000oooo0?ooo`3o0?oooeh0oooo00<000000?ooo`3oool0
<`3oool001X0oooo0P00003o0?ooof00oooo00<000000?ooo`3oool0<P3oool001X0oooo00<00000
0?ooo`3oool0o`3ooomO0?ooo`030000003oool0oooo0380oooo000J0?ooo`030000003oool0oooo
0?l0ooooH03oool00`000000oooo0?ooo`0a0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooof40
oooo00<000000?ooo`3oool0<03oool001X0oooo00<000000?ooo`3oool0o`3ooomR0?ooo`030000
003oool0oooo02l0oooo000J0?ooo`030000003oool0oooo0?l0ooooH`3oool00`000000oooo0?oo
o`0^0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooof@0oooo00<000000?ooo`3oool0;@3oool0
01X0oooo0P00003o0?ooofH0oooo00<000000?ooo`3oool0;03oool001X0oooo00<000000?ooo`3o
ool0o`3ooomV0?ooo`030000003oool0oooo02/0oooo000J0?ooo`030000003oool0oooo0?l0oooo
I`3oool00`000000oooo0?ooo`0Z0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooofP0oooo00<0
00000?ooo`3oool0:@3oool001X0oooo00<000000?ooo`3oool0o`3ooomY0?ooo`030000003oool0
oooo02P0oooo00040?ooo`@00000103oool4000000X0oooo00<000000?ooo`3oool0o`3ooomZ0?oo
o`030000003oool0oooo02L0oooo00030?ooo`8000000P3oool200000080oooo0P0000020?ooo`80
00002@3oool00`000000oooo0?ooo`3o0?ooof/0oooo00<000000?ooo`3oool09P3oool000P0oooo
00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`070?ooo`<00000o`3ooom/0?ooo`03
0000003oool0oooo02D0oooo00080?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3o
ool01`3oool00`000000oooo0?ooo`3o0?ooof`0oooo00<000000?ooo`3oool09@3oool000L0oooo
00D000000?ooo`3oool0oooo000000040?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3o
ool0o`3ooom]0?ooo`030000003oool0oooo02@0oooo00050?ooo`800000103oool00`000000oooo
0?ooo`020?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0o`3ooom^0?ooo`030000
003oool0oooo02<0oooo00070?ooo`050000003oool0oooo0?ooo`000000103oool00`000000oooo
0?ooo`070?ooo`030000003oool0oooo0?l0ooooK`3oool00`000000oooo0?ooo`0R0?ooo`001`3o
ool01@000000oooo0?ooo`3oool0000000@0oooo00<000000?ooo`3oool01`3oool00`000000oooo
0?ooo`3o0?ooog00oooo00<000000?ooo`3oool08@3oool000<0oooo00<000000?ooo`3oool00P3o
ool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0
o`3oooma0?ooo`030000003oool0oooo0200oooo00030?ooo`8000000P3oool200000080oooo0P00
00020?ooo`8000002@3oool00`000000oooo0?ooo`3o0?ooog80oooo00<000000?ooo`3oool07`3o
ool000@0oooo100000040?ooo`@000002P3oool200000?l0ooooM03oool00`000000oooo0?ooo`0N
0?ooo`006P3oool00`000000oooo0?ooo`3o0?ooog@0oooo00<000000?ooo`3oool07@3oool001X0
oooo00<000000?ooo`3oool0o`3ooome0?ooo`030000003oool0oooo01`0oooo000J0?ooo`030000
003oool0oooo0?l0ooooMP3oool00`000000oooo0?ooo`0K0?ooo`006P3oool00`000000oooo0?oo
o`3o0?ooogL0oooo00<000000?ooo`3oool06P3oool001X0oooo00<000000?ooo`3oool0o`3ooomh
0?ooo`030000003oool0oooo01T0oooo000J0?ooo`030000003oool0oooo0?l0ooooN@3oool00`00
0000oooo0?ooo`0H0?ooo`006P3oool200000?l0ooooNP3oool00`000000oooo0?ooo`0H0?ooo`00
6P3oool00`000000oooo0?ooo`3o0?ooogX0oooo00<000000?ooo`3oool05`3oool001X0oooo00<0
00000?ooo`3oool0o`3ooomk0?ooo`030000003oool0oooo01H0oooo000J0?ooo`030000003oool0
oooo0?l0ooooO03oool00`000000oooo0?ooo`0E0?ooo`006P3oool00`000000oooo0?ooo`3o0?oo
ogd0oooo00<000000?ooo`3oool0503oool001X0oooo00<000000?ooo`3oool0o`3ooomn0?ooo`03
0000003oool0oooo01<0oooo000J0?ooo`030000003oool0oooo0?l0ooooO`3oool00`000000oooo
0?ooo`0B0?ooo`006P3oool200000?l0ooooU@3oool001X0oooo00<000000?ooo`3oool0o`3ooonD
0?ooo`006P3oool00`000000oooo0?ooo`3o0?oooi@0oooo000J0?ooo`030000003oool0oooo0?l0
ooooU03oool001X0oooo00<000000?ooo`3oool0o`3ooonD0?ooo`006P3oool00`000000oooo0?oo
o`3o0?oooi@0oooo0000\
\>"],
  ImageRangeCache->{{{0, 431}, {265.875, 0}} -> {-0.000202997, -3.00723, \
1.16863*^-5, 0.207423}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[TextData[{
  "Now we can easily obtain the sensitivity to ",
  Cell[BoxData[
      \(TraditionalForm\`\(sin\^2\)(2  \[Theta]\_13)\)]],
  " at the 3\[Sigma] confidence level:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Sensitivity\  = \ 
      x\  /. \ FindRoot[\(Interpolation[res]\)[x] \[Equal] 
            9, {x, {0.001, 0.0015}}]\)], "Input"],

Cell[BoxData[
    \(0.001670458125038562`\)], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  "Finding degenerate solutions: ",
  StyleBox["ChiAll",
    FontFamily->"Courier"]
}], "Section"],

Cell["ChiAll: alle laufen (globaler Minimizer)", "Text"]
}, Open  ]],

Cell["Returning rates", "Section"],

Cell[CellGroupData[{

Cell["Changing other parameters", "Section"],

Cell["\<\
Including bugfixes: which functions to be called after parameter \
changes and in which order these have to be called (luminosity changes, \
baseline changes, rule changes: backgrounds, etc.)\
\>", "Text"]
}, Open  ]],

Cell["Standard routines", "Section"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analyzing more experiments", "Subtitle"],

Cell["References", "Subtitle"]
}, Open  ]]
}, Open  ]]
},
FrontEndVersion->"4.1 for X",
ScreenRectangle->{{0, 1024}, {0, 768}},
ScreenStyleEnvironment->"Working",
WindowToolbars->{},
WindowSize->{1012, 697},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"PaperSize"->{612, 792},
"PaperOrientation"->"Portrait",
"PostScriptOutputFile":>FrontEnd`FileName[{$RootDirectory, "a", "srv-1.cip", \
"h", "t30i", "lin", "wwinter", "Software"}, "020911 Documentation.nb.ps", \
CharacterEncoding -> "ISO8859-1"],
"Magnification"->1},
Magnification->1.5
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1727, 52, 63, 0, 260, "Title"],
Cell[1793, 54, 94, 3, 80, "Subsubtitle"],
Cell[1890, 59, 265, 5, 71, "Text"],

Cell[CellGroupData[{
Cell[2180, 68, 49, 0, 99, "Subtitle"],

Cell[CellGroupData[{
Cell[2254, 72, 42, 0, 87, "Section"],
Cell[2299, 74, 235, 4, 71, "Text"],
Cell[2537, 80, 150, 2, 62, "Input"],
Cell[2690, 84, 217, 5, 71, "Text"],

Cell[CellGroupData[{
Cell[2932, 93, 52, 1, 39, "Input"],
Cell[2987, 96, 50, 1, 33, "Print"],
Cell[3040, 99, 64, 1, 33, "Print"],
Cell[3107, 102, 66, 1, 33, "Print"],
Cell[3176, 105, 60, 1, 33, "Print"],
Cell[3239, 108, 40, 1, 33, "Print"]
}, Open  ]],
Cell[3294, 112, 159, 3, 71, "Text"],

Cell[CellGroupData[{
Cell[3478, 119, 55, 1, 39, "Input"],
Cell[3536, 122, 9196, 194, 431, "Output"]
}, Open  ]],
Cell[12747, 319, 720, 22, 195, "Text"],
Cell[13470, 343, 1041, 16, 221, "Text"],

Cell[CellGroupData[{
Cell[14536, 363, 47, 1, 39, "Input"],
Cell[14586, 366, 966, 24, 163, "Output"]
}, Open  ]],
Cell[15567, 393, 514, 15, 120, "Text"],
Cell[16084, 410, 65, 0, 46, "Text"],
Cell[16152, 412, 45, 1, 39, "Input"],
Cell[16200, 415, 617, 13, 146, "Text"],

Cell[CellGroupData[{
Cell[16842, 432, 71, 1, 39, "Input"],
Cell[16916, 435, 6637, 173, 982, "Output"]
}, Open  ]],
Cell[23568, 611, 261, 5, 71, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[23866, 621, 53, 0, 87, "Section"],
Cell[23922, 623, 2496, 67, 196, "Text"],

Cell[CellGroupData[{
Cell[26443, 694, 103, 2, 39, "Input"],
Cell[26549, 698, 58, 1, 39, "Output"]
}, Open  ]],
Cell[26622, 702, 76, 0, 46, "Text"],
Cell[26701, 704, 111, 2, 39, "Input"],
Cell[26815, 708, 1065, 32, 121, "Text"],
Cell[27883, 742, 76, 1, 39, "Input"],
Cell[27962, 745, 498, 17, 71, "Text"],
Cell[28463, 764, 52, 1, 39, "Input"],
Cell[28518, 767, 420, 8, 121, "Text"],
Cell[28941, 777, 43, 1, 39, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[29021, 783, 176, 7, 87, "Section"],
Cell[29200, 792, 466, 12, 96, "Text"],

Cell[CellGroupData[{
Cell[29691, 808, 146, 3, 39, "Input"],
Cell[29840, 813, 56, 1, 43, "Output"]
}, Open  ]],
Cell[29911, 817, 1407, 45, 171, "Text"],

Cell[CellGroupData[{
Cell[31343, 866, 116, 2, 39, "Input"],
Cell[31462, 870, 83, 1, 39, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[31582, 876, 424, 7, 154, "Input"],
Cell[32009, 885, 68012, 1363, 444, 9845, 640, "GraphicsData", "PostScript", \
"Graphics"],
Cell[100024, 2250, 137, 3, 39, "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[100210, 2259, 274, 10, 126, "Section"],
Cell[100487, 2271, 1558, 36, 246, "Text"],
Cell[102048, 2309, 2402, 65, 346, "Text"],
Cell[104453, 2376, 1367, 36, 171, "Text"],
Cell[105823, 2414, 127, 2, 39, "Input"],
Cell[105953, 2418, 1554, 47, 196, "Text"],
Cell[107510, 2467, 147, 2, 62, "Input"],
Cell[107660, 2471, 1713, 51, 196, "Text"],

Cell[CellGroupData[{
Cell[109398, 2526, 144, 3, 39, "Input"],
Cell[109545, 2531, 186, 3, 39, "Output"]
}, Open  ]],
Cell[109746, 2537, 1382, 39, 171, "Text"],
Cell[111131, 2578, 128, 3, 46, "Text"],
Cell[111262, 2583, 318, 6, 108, "Input"],
Cell[111583, 2591, 929, 33, 71, "Text"],

Cell[CellGroupData[{
Cell[112537, 2628, 132, 3, 39, "Input"],
Cell[112672, 2633, 192, 3, 39, "Output"]
}, Open  ]],
Cell[112879, 2639, 1380, 45, 146, "Text"],
Cell[114262, 2686, 317, 7, 95, "Text"],

Cell[CellGroupData[{
Cell[114604, 2697, 32, 0, 60, "Subsubsection"],
Cell[114639, 2699, 661, 14, 121, "Text"],
Cell[115303, 2715, 867, 14, 292, "Input"],

Cell[CellGroupData[{
Cell[116195, 2733, 129, 3, 39, "Input"],
Cell[116327, 2738, 278, 4, 75, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[116642, 2747, 71, 1, 39, "Input"],
Cell[116716, 2750, 38418, 824, 279, 7614, 439, "GraphicsData", "PostScript", \
"Graphics"],
Cell[155137, 3576, 130, 3, 39, "Output"]
}, Open  ]],
Cell[155282, 3582, 191, 5, 46, "Text"],

Cell[CellGroupData[{
Cell[155498, 3591, 148, 3, 39, "Input"],
Cell[155649, 3596, 55, 1, 39, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[155765, 3604, 114, 4, 87, "Section"],
Cell[155882, 3610, 56, 0, 46, "Text"]
}, Open  ]],
Cell[155953, 3613, 34, 0, 87, "Section"],

Cell[CellGroupData[{
Cell[156012, 3617, 44, 0, 87, "Section"],
Cell[156059, 3619, 215, 4, 71, "Text"]
}, Open  ]],
Cell[156289, 3626, 36, 0, 87, "Section"]
}, Open  ]],

Cell[CellGroupData[{
Cell[156362, 3631, 46, 0, 99, "Subtitle"],
Cell[156411, 3633, 30, 0, 99, "Subtitle"]
}, Open  ]]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

