%!PS-Adobe-2.0 EPSF-2.0
%%Title: th13delta.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Tue Jan 23 17:54:20 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTb
906 786 M
0 3468 V
1.000 UL
LTb
6294 4254 M
-5388 0 V
1.000 UL
LTb
906 786 M
0 88 V
1.000 UL
LTb
906 590 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
906 4254 M
0 -88 V
1.000 UL
LTb
1579 786 M
0 88 V
1.000 UL
LTb
1579 590 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1579 4254 M
0 -88 V
1.000 UL
LTb
2253 786 M
0 88 V
1.000 UL
LTb
2253 590 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 9)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
2253 4254 M
0 -88 V
1.000 UL
LTb
2927 786 M
0 88 V
1.000 UL
LTb
2927 590 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 9.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
2927 4254 M
0 -88 V
1.000 UL
LTb
3600 786 M
0 88 V
1.000 UL
LTb
3600 590 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
3600 4254 M
0 -88 V
1.000 UL
LTb
4273 786 M
0 88 V
1.000 UL
LTb
4273 590 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
4273 4254 M
0 -88 V
1.000 UL
LTb
4947 786 M
0 88 V
1.000 UL
LTb
4947 590 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 11)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
4947 4254 M
0 -88 V
1.000 UL
LTb
5621 786 M
0 88 V
1.000 UL
LTb
5621 590 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 11.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
5621 4254 M
0 -88 V
1.000 UL
LTb
6294 786 M
0 88 V
1.000 UL
LTb
6294 590 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 12)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
6294 4254 M
0 -88 V
1.000 UL
LTb
6294 786 M
-88 0 V
stroke
6412 786 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 70)]
] -46.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
906 786 M
88 0 V
1.000 UL
LTb
6294 1220 M
-88 0 V
stroke
6412 1220 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 75)]
] -46.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
906 1220 M
88 0 V
1.000 UL
LTb
6294 1653 M
-88 0 V
stroke
6412 1653 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80)]
] -46.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
906 1653 M
88 0 V
1.000 UL
LTb
6294 2087 M
-88 0 V
stroke
6412 2087 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 85)]
] -46.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
906 2087 M
88 0 V
1.000 UL
LTb
6294 2520 M
-88 0 V
stroke
6412 2520 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 90)]
] -46.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
906 2520 M
88 0 V
1.000 UL
LTb
6294 2953 M
-88 0 V
stroke
6412 2953 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 95)]
] -46.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
906 2953 M
88 0 V
1.000 UL
LTb
6294 3387 M
-88 0 V
stroke
6412 3387 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
906 3387 M
88 0 V
1.000 UL
LTb
6294 3820 M
-88 0 V
stroke
6412 3820 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 105)]
] -46.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
906 3820 M
88 0 V
1.000 UL
LTb
6294 4254 M
-88 0 V
stroke
6412 4254 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 110)]
] -46.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
906 4254 M
88 0 V
LTb
3600 4353 M
[ [(Helvetica) 140.0 0.0 true true 0 (Confidence regions in the )]
[(Symbol) 140.0 0.0 true true 0 (q)]
[(Helvetica) 112.0 -42.0 true true 0 (13)]
[(Helvetica) 140.0 0.0 true true 0 (-)]
[(Symbol) 140.0 0.0 true true 0 (d)]
[(Helvetica) 112.0 -42.0 true true 0 (CP)]
[(Helvetica) 140.0 0.0 true true 0 ( plane)]
] -32.7 MCshow
1.000 UP
LTb
3600 299 M
[ [(Symbol) 140.0 0.0 true true 0 (q)]
[(Helvetica) 112.0 -42.0 true true 0 (13)]
[(Helvetica) 140.0 0.0 true true 0 ( [degrees])]
] -32.7 MCshow
LTb
7049 2520 M
currentpoint gsave translate -90 rotate 0 0 moveto
[ [(Symbol) 140.0 0.0 true true 0 (d)]
[(Helvetica) 112.0 -42.0 true true 0 (CP)]
[(Helvetica) 140.0 0.0 true true 0 ( [degrees])]
] -32.7 MCshow
grestore
2.000 UL
LTw
LTb
4863 1561 M
[ [(Helvetica) 140.0 0.0 true true 0 (    11.8)]
] -46.7 MRshow
LTb
4947 1561 M
399 0 V
1558 2797 M
45 41 V
46 42 V
47 40 V
49 40 V
51 39 V
52 37 V
55 36 V
58 34 V
61 31 V
63 30 V
66 28 V
67 25 V
69 24 V
71 22 V
72 20 V
73 18 V
74 17 V
75 15 V
75 14 V
76 12 V
77 11 V
77 10 V
77 9 V
78 7 V
77 7 V
78 6 V
78 5 V
78 4 V
79 2 V
78 2 V
77 1 V
78 -1 V
78 -2 V
78 -2 V
78 -4 V
79 -4 V
78 -6 V
79 -6 V
78 -7 V
78 -9 V
78 -9 V
76 -10 V
76 -12 V
74 -13 V
72 -13 V
72 -15 V
71 -16 V
72 -17 V
74 -16 V
76 -17 V
80 -16 V
76 -18 V
-1 -41 V
-47 -57 V
-31 -56 V
-15 -53 V
-7 -49 V
-8 -46 V
-17 -41 V
-34 -38 V
-48 -33 V
-60 -31 V
-68 -30 V
-71 -29 V
-72 -30 V
-68 -32 V
-61 -35 V
-53 -37 V
-52 -37 V
-53 -35 V
-59 -33 V
-61 -31 V
-63 -30 V
-63 -30 V
-63 -31 V
-61 -32 V
-58 -34 V
-56 -35 V
-56 -36 V
-55 -35 V
-56 -35 V
-57 -35 V
-57 -35 V
-57 -34 V
-57 -35 V
-56 -34 V
-57 -35 V
-55 -36 V
-55 -36 V
-54 -36 V
-52 -38 V
-52 -38 V
-51 -38 V
-53 -37 V
-54 -36 V
-56 -35 V
-58 -34 V
-57 -34 V
-57 -35 V
-56 -37 V
-53 -38 V
-53 -39 V
stroke
2684 1386 M
-53 -38 V
-56 -34 V
-59 -29 V
-64 -24 V
-68 -20 V
-70 -17 V
-73 -17 V
-74 -18 V
-75 -22 V
-74 -27 V
-70 4 V
-70 31 V
-73 28 V
-72 25 V
-71 25 V
-66 27 V
-60 29 V
-51 33 V
-41 39 V
-29 46 V
-22 49 V
-20 50 V
-19 50 V
-17 49 V
-16 49 V
-13 49 V
-12 50 V
-10 50 V
-7 49 V
-6 51 V
-3 50 V
-1 50 V
1 51 V
2 51 V
5 50 V
6 51 V
8 50 V
11 50 V
12 50 V
15 49 V
17 49 V
19 48 V
23 49 V
26 47 V
30 47 V
34 45 V
39 44 V
41 43 V
LTb
4863 1379 M
[ [(Helvetica) 140.0 0.0 true true 0 (     4.6)]
] -46.7 MRshow
LTa
4947 1379 M
399 0 V
3630 2520 M
-59 -36 V
-59 -38 V
-57 -39 V
-57 -39 V
-57 -40 V
-56 -40 V
-57 -39 V
-58 -39 V
-58 -38 V
-59 -38 V
-58 -41 V
-56 -42 V
-57 -42 V
-58 -42 V
-60 -38 V
-63 -35 V
-68 -30 V
-73 -24 V
-78 -16 V
-84 -22 V
-86 -27 V
-85 -26 V
-83 -20 V
-78 -8 V
-69 9 V
-60 30 V
-51 45 V
-44 50 V
-38 51 V
-32 51 V
-25 51 V
-20 52 V
-13 52 V
-7 52 V
-1 53 V
5 54 V
10 53 V
15 53 V
19 53 V
23 53 V
27 50 V
30 51 V
34 50 V
39 47 V
43 46 V
50 43 V
55 40 V
60 38 V
64 35 V
67 31 V
70 30 V
73 26 V
75 24 V
77 22 V
78 20 V
80 18 V
80 16 V
82 13 V
81 11 V
82 8 V
82 5 V
82 2 V
82 -1 V
82 -5 V
83 -10 V
83 -14 V
84 -20 V
85 -25 V
81 -30 V
72 -35 V
58 -38 V
39 -43 V
16 -45 V
-8 -48 V
-27 -48 V
-44 -49 V
-54 -49 V
-62 -46 V
-65 -44 V
-64 -39 V
1.000 UL
LTb
6294 4254 M
0 -3468 V
1.000 UL
LTb
906 786 M
5388 0 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
