BUG#1 final_clean sometimes produces SEGFAULT

From: Patrick Huber
Date: 19.07.04

	On some occasions final_clean produces a SEGFAULT. This happens
	when the program exits after some fatal parse errors, since
	then some pointers are not correctly setup by glb_default_expirement
	(it is never called). Then the call of glbFreeExp produces a
	SEGFAULT in the attempt to free one of the SignalRates pointers
	in one of the experiment structures. The problem may have its roots in
	copy_buff in the parser.
-------------------------------------------------------------------------------

BUG#2 glbCopyParams is leaking memory

From: Walter Winter
Date: 04.08.04
	
	glbCopyParams allocates the memory needed for the oscillation	
	parameters and the densities erraneously for a second time in the
	destination glb_params structure. This memory has been already 
	allocated by a previous call to glbAllocParams. The leak rate
	is typically only a few tens of bytes in each call. Thus, no
	serious trouble is expected. 
-------------------------------------------------------------------------------

BUG#3 glbCopyProjection is leaking memory

From: Patrick Huber
Date: 04.08.04
	
	see BUG#3
-------------------------------------------------------------------------------

BUG#4 User-defined smearing matrices do not work

From: Mark Rolinec
Date: 05.08.04

	Parsing an AEDL file with a user defined smear matrix results in
		
		globes: ERROR: Smearing type has not been defined!.
		globes: ERROR: No parameters for the energy resolution 
		function unspecified!.
		globes: FATAL: glb_smear not properly set up!.

	Besides the typo in one of the error messages, the problem is, that
	the function glb_default_smear in glb_smear.c does not properly 
	recognize that one is trying to use a user-defined smear-matrix.
	Thus it complains about undefined things (which are undefined because
	nobody needs them, but the function does not know this ...) and finally
	bails out.
-------------------------------------------------------------------------------

BUG#5 Error in density parameter handling in chi_NP (glb_minimize.c)

From: Patrick Huber
Date: 16.08.04

	If one of the density projection parameters is set to GLB_FIXED
	the glbChiXXX functions (with exception of glbChiSys) will not work
	properly (which easily will go unnoticed). The reason is that the
	index range in one of the for loops is `n_s_free+n_fixed' whereas
	the correct value is `n_s_free+n_s_fixed'. 
-------------------------------------------------------------------------------